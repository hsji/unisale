<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="CF_FileMM" width="930" height="520" titletext="파일관리" cssclass="frm_popBg" onload="CF_FileMM_onload">
    <Layouts>
      <Layout height="520" mobileorientation="landscape" width="930">
        <Static id="Static06" taborder="0" cssclass="sta_POP_BtnBg" left="1" height="36" bottom="1" right="1"/>
        <Button id="btn_Close" taborder="1" text="닫기" height="28" onclick="btn_Close_onclick" right="20" bottom="15" width="80" tooltiptext="ESC" TL_SEQ="59"/>
        <Static id="sta00" taborder="2" left="20" top="60" background="#f4f8fc" border="1px solid #bad3ec" right="20" bottom="60" text=""/>
        <Grid id="grdFileKind" taborder="12" left="30" top="70" borderRadius="5px" autofittype="col" bottom="70" width="190" binddataset="ds_NextFileType" cellsizingtype="col" formatid="default">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="37"/>
                <Column size="154"/>
              </Columns>
              <Rows>
                <Row size="32" band="head"/>
                <Row size="30"/>
              </Rows>
              <Band id="head">
                <Cell text="No"/>
                <Cell col="1" text="파일종류" TL_SEQ="168"/>
              </Band>
              <Band id="body">
                <Cell text="expr:currow+1"/>
                <Cell col="1" combodataset="ds_CD_NEXT_FILE_TYPE" combocodecol="CODE" combodatacol="CAPTION" text="bind:CAPTION" combotype="dropdown" combobuttonsize="20 20" textAlign="left"/>
              </Band>
            </Format>
            <Format id="mobile">
              <Columns>
                <Column size="30"/>
                <Column size="118"/>
              </Columns>
              <Rows>
                <Row size="30" band="head"/>
                <Row size="30"/>
              </Rows>
              <Band id="head">
                <Cell text="No"/>
                <Cell col="1" text="파일종류" TL_SEQ="168"/>
              </Band>
              <Band id="body">
                <Cell text="expr:currow+1"/>
                <Cell col="1" combodataset="ds_CD_NEXT_FILE_TYPE" combocodecol="CODE" combodatacol="CAPTION" text="bind:CAPTION" combotype="dropdown" combobuttonsize="20 20" textAlign="left"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid id="grdUpload" taborder="3" left="grdFileKind:10.00" top="70" borderRadius="5px" binddataset="dsUpload" autofittype="col" oncellclick="grdUpload_oncellclick" oncelldblclick="grdUpload_oncelldblclick" right="30" bottom="70" formatid="default">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="120"/>
                <Column size="48"/>
                <Column size="60"/>
                <Column size="430"/>
                <Column size="60"/>
              </Columns>
              <Rows>
                <Row size="50"/>
              </Rows>
              <Band id="body">
                <Cell combodataset="ds_CD_NEXT_FILE_TYPE" combocodecol="CODE" combodatacol="CAPTION" text="bind:STATUS_CD" displaytype="combotext" combotype="dropdown" combobuttonsize="20 20" edittype="expr:dataset.getRowType(currow)==2?'combo':'none'"/>
                <Cell col="1" expr="SHARE_FLAG == &quot;1&quot; ? &quot;Link&quot; : &quot;File&quot;"/>
                <Cell col="2" displaytype="imagecontrol" text="expr:comp.parent.getFileIcon(FILE_NAME)"/>
                <Cell col="3" text="bind:FILE_NAME" textAlign="left"/>
                <Cell col="4" text="theme://images/btn_del.png" displaytype="imagecontrol"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btnSaveFile" taborder="7" top="16" height="28" background="#298ae1" font="bold 10px &quot;noto&quot;,&quot;antialias&quot;" color="#ffffff" icon="URL(&quot;theme://images/file_btn_Save.png&quot;)" iconPosition="left" text="Save" borderRadius="5px" onclick="btnSaveFile_onclick" right="20" textPadding="0px 0px 0px 10px" width="66"/>
        <Button id="btnAddFile" taborder="5" top="16" height="28" background="#1abd9c" font="bold 10px &quot;noto&quot;,&quot;antialias&quot;" color="#ffffff" icon="URL(&quot;theme://images/file_btn_AddFiles.png&quot;)" iconPosition="left" text="Add Files" borderRadius="5px" onclick="btnAddFile_onclick" width="95" right="btnSaveFile:5" textPadding="0px 0px 0px 10px"/>
        <Button id="btnAddLinkFile" taborder="11" top="16" height="28" background="#1abd9c" color="#ffffff" icon="URL(&quot;theme://images/file_btn_AddFiles.png&quot;)" iconPosition="left" text="Add Link Files" borderRadius="5px" onclick="btnAddLinkFile_onclick" visible="false" width="95" right="btnAddFile:5" font="bold 10px &quot;noto&quot;,&quot;antialias&quot;" textPadding="0px 0px 0px 10px"/>
        <Button id="btnDeleteAll" taborder="6" top="16" width="92" height="28" background="#eb707e" font="bold 10px &quot;noto&quot;,&quot;antialias&quot;" color="#ffffff" icon="URL(&quot;theme://images/file_btn_DeleteAll.png&quot;)" iconPosition="left" textPadding="0px 0px 0px 10px" text="Delete All" borderRadius="5px" onclick="btnDeleteAll_onclick" right="-140" visible="false"/>
        <ImageViewer id="imgLoading" taborder="8" left="grdFileKind:251.00" top="230" height="60" background="url('theme://images/loading.gif') no-repeat" visible="false" right="310"/>
        <Static id="st_Type" taborder="9" text="파일타입" top="16" width="106" height="28" left="0" visible="false" TL_SEQ="172" cssclass="sta_WF_SchLabel"/>
        <Combo id="cmb_Type" taborder="10" top="16" width="134" height="28" index="0" codecolumn="CODE" datacolumn="NAME" value="0" text="File" tooltiptext="File : 파일을 서버에 저장합니다.&#13;&#10;Link : 파일의 Link정보만 서버에 저장합니다." innerdataset="@ds_CmbType" left="st_Type:0" visible="false" onitemchanged="cmb_Type_onitemchanged"/>
        <Combo id="cmb_ContractList" taborder="13" top="16" height="28" index="0" value="0" left="cmb_Type:8.00" visible="false" innerdataset="ds_ContractList" codecolumn="CONTRACT_NO" datacolumn="NAME" right="300"/>
        <Static id="st_Comment" taborder="14" text="검수 확인서 외부 반출시 사업지원팀에 문의 후 진행 바랍니다" left="17.00" width="500" height="28" color="#ff0000" TL_SEQ="174" bottom="15" visible="false"/>
        <Static id="staHelpMessage" taborder="4" left="grdFileKind:20.00" top="82" background="#ffffff" border="1px dashed #aac9e7" borderRadius="10px" text="마우스로 파일을 끌어오세요" color="#8e8e8e" font="14px/normal &quot;noto&quot;,&quot;돋움&quot;" textAlign="center" right="40" bottom="81" TL_SEQ="175" onclick="staHelpMessage_onclick"/>
      </Layout>
      <Layout name="portrait" screenid="Mobile_screen" width="480" height="768" mobileorientation="portrait">
        <Button id="btn_Close" height="30" width="80" right="4" bottom="5"/>
        <Static id="st_Comment" height="30" left="12" width="364" bottom="5"/>
        <Combo id="cmb_ContractList" left="174" top="44" height="30" right="95"/>
        <Grid id="grdFileKind" left="4" top="117" height="209" right="4" formatid="mobile"/>
        <Static id="staHelpMessage" left="12" right="12" top="338" bottom="52"/>
        <Grid id="grdUpload" left="4" right="4" bottom="43" top="330"/>
        <Combo id="cmb_Type" left="93" top="44" width="78" height="30"/>
        <Static id="st_Type" left="21" top="44" width="75" height="30"/>
        <Button id="btnAddFile" height="30" top="78" width="90" right="8"/>
        <Button id="btnSaveFile" height="30" top="44" width="80" right="8"/>
        <Button id="btnAddLinkFile" height="30" top="78" width="106" right="103"/>
        <ImageViewer id="imgLoading" left="140" top="354" height="60" right="140"/>
        <Static id="sta00" left="4" top="39" right="4" height="74"/>
        <Button id="btnDeleteAll" top="42" width="92" height="25" right="-140"/>
        <Static id="Static06" left="1" height="38" right="1" bottom="1"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/************************************************************************************************
 * 01. 업무구분 : 공통 - 파일관리
 * 02. 화면명   : 파일관리(CM_FileMM)
 * 03. 화면설명 : 파일관리를 위한 공통 팝업화면
 * 04. 작성일   : 2018.08.13
 * 05. 작성자   : 채종한
 * 06. 수정이력 :
 ***********************************************************************************************
 *     수정일          이  름    사유
 ***********************************************************************************************
 *
 *
 *
 ***********************************************************************************************/


/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역
 ************************************************************************************************/
include "Script::CommTrans.xjs"
include "Script::CommUtil.xjs"
include "Script::ExtFileUpDownload.xjs"
include "Script::ext_CommEco.xjs"
include "Script::CommGrid.xjs";


/************************************************************************************************
 * 전역 변수 영역
 ************************************************************************************************/
// File Updown 설정 정보
this.fileConfig = {};
 
//아이콘별 확장자 목록.
this.iconInfo = {	file_icon_ZIP: ["zip","rar","7z"],
					file_icon_IMG: ["jpg", "jpeg", "gif", "png", "bmp"],
					file_icon_TXT: ["txt", "xml"],
					file_icon_DOC: ["doc", "docx"],
					file_icon_XLS: ["xls", "xlsx"],
					file_icon_PPT: ["ppt", "pptx"],
					file_icon_PDF: ["pdf"],
					file_icon_ETC: ["etc"] //위 확장자 목록에 일치하지 않을 경우. default icon
				};

//확장자별 아이콘 정보	 
this.extToIcon = {}; 	 
this.extUp;
this.extDown;
this.transferType = "all";
 
//옵션 기본값 정의
this.opts = {								// 필수 / datatype / 설명
				 BINDDATASET:null			// X / srting / 옵션값을 바인드할 데이터셋명
				,PROJECT_CODE:null			// x / string / 링크 처리를 하기 위한 구분 값 (테이블별칭)
				,SOURCE_CD:null				// O / string / 저장된 파일을 구분할 첫번째 키 값 (테이블별칭)
				,SOURCE_SEQ:null			// O / string / 저장된 파일을 구분할 두번째 키 값 (테이블SEQ)
				,STATUS_CD:null				// X / string / 저장된 파일을 구분할 세번째 키 값 (공통코드 NEXT_FILE_TYPE)
				
				,USE_NEXT_FILE_TYPE:false	// X / bool / 공통코드 NEXT_FILE_TYPE을 사용할지 여부 (저장 시 사용, 조회는 STATUS_CD에 따라 다름)
				,USE_LINK_TYPE:false		// X / bool / 링크 형태의 파일을 사용할지 여부 (구NEXT의 매출계약에서만 사용가능, 구현여부 고민필요)
				,USE_MULTI_FILE:true		// X / bool / 다중파일 선택, 저장 가능여부
				,USE_OPEN_ADD_DIALOG:false	// X / bool / 파일등록 팝업 시 파일선택 화면 즉시 출력여부 (동작안함)
				,USE_DELETE_ALL:false		// X / bool / 파일등록 팝업 시 등록된 파일을 모두 삭제할지 여부 (삭제 후 저장까지 즉시처리)					
				,USE_BUTTON_ONLY:false		// X / bool / 버튼 형태로만 사용할 경우 (파일보기[n], 파일등록)				
			}
			
/************************************************************************************************
 * FORM 영역
 ************************************************************************************************/
this.CF_FileMM_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	var pOpts = this.parent;
	
	//팝업 기본 옵션을 파라미터로 덮어쓰기
	for(var name in this.opts)
	{	
		if(pOpts.hasOwnProperty(name))
		{
			this.opts[name] = pOpts[name];
		}
	}
	
	this.gfnCompInit(obj);  	// Grid 공통함수 호출
	this.fnGetCode();
	
	if(!this.opts.USE_NEXT_FILE_TYPE)
	{
		this.st_Comment.set_visible(false);
		this.grdUpload.setFormatColProperty(0,"size",0);
		if(this.commUtil.gfnGetMobile())
		{
			this.grdFileKind.set_height(0);
			this.grdUpload.set_top(109);
			//this.grdUpload.set_height(618);
			this.staHelpMessage.set_top(117);
			//this.staHelpMessage.set_height(602);
		}
		else
		{
 			this.grdFileKind.set_width(0);
// 			this.grdUpload.set_left(30)
// 			this.staHelpMessage.set_left(21);
		}
	}
	this.resetScroll();
	
	if(!this.opts.USE_LINK_TYPE)
	{
		this.grdUpload.setFormatColProperty(1,"size",0);
	} else {
		// 조건값(Rarameter) 셋팅
		this.gfnAddSendParameter("PROJECT_CODE",	this.opts.PROJECT_CODE);
		this.gfnAddSendParameter("SOURCE_CD",		this.opts.SOURCE_CD);
		this.gfnAddSendParameter("SOURCE_SEQ",		this.opts.SOURCE_SEQ);
			
		// 조회용 Output dataset 세팅
		this.gfnAddOutputDataset("ds_ContractList"	, "dsOutput");
		this.gfnCommonTransaction("ContractList", "CF_NFileMM_S03");
	}
	
	
	this.fileConfig = {
		host : this.gfnGetServerUrl(),
		//uploadUrl : "File/saveFile.jsp?path=nexacro",
		uploadUrl :	"saveNextFileUpload.do",	
		//downloadUrl : "File/downloadFile.jsp?path=nexacro&fileName=",
		downloadUrl	: "FrontControllerServlet.do"
						+ "?service=xupservice"
						+ "&domain=NEXTp"
						+ "&model=CF_NFileMM_S01"
						+ "&format=xml"
						+ "&version=xplatform",
				
		deleteUrl : "File/deleteFile.jsp?path=nexacro",
		
		downImage : "theme://images/img_file.png",
		delImage : "theme://images/btn_del.png",
		allowTypes : ["jpg","jpeg","gif","png","bmp","txt","zip","7z","gzip","doc","docx","ppt","pptx","xls","xlsx","xlsm","pdf","msg","hwp"],
		maxCount : this.opts.USE_MULTI_FILE ? 500 : 1,
		maxSize : "200MB",
		maxTotalSize : "200MB"
	};
	
	var browser = system.navigatorname;
	
	//this.sSourceCd = "LIC_DLI";
	//this.strSourceSeq = 1;
	
	// this.btnAddLinkFile.set_visible(this.opts.USE_LINK_TYPE);
	this.st_Type.set_visible(this.opts.USE_LINK_TYPE);
	this.cmb_Type.set_visible(this.opts.USE_LINK_TYPE);
	
	
	
	if( browser == "nexacro"){
		this.alert(this.gfnGetTransTxt(1214, "현재 사용중인 브라우저에서는 지원되지 않습니다."));
	}else{
		this.initFile();
	}
	
	this.fnRetrieve();
};




/************************************************************************************************
 * FORM 공통 FUNCTION 영역
 ************************************************************************************************/
 this.fnGetCode = function()
{
	var strFileType = "FILE_"+this.opts.SOURCE_CD;
	/*프로젝트일, 매출계약현황품의 경우 프로젝트매출계약(CL) 첨부파일을 불러온다*/
	if(this.opts.SOURCE_CD=="P" || this.opts.SOURCE_CD=="CSR")
	{
		strFileType = "FILE_CL";
	}
	
	this.gfnAddCodeDataset("ds_CD_NEXT_FILE_TYPE", strFileType, true);
	this.gfnCodeTransaction();
}
 /**
 * @description 파일업/다운로드 관련 초기화
*/
this.initFile = function ()
{
	//확장자별 파일아이콘 설정.
	this.initExtToIcon();
	
	//==============================================
	//	파일 업로드 컴포넌트 생성 및 설정
	//==============================================
	var name = this.gfnGetUniqueId("extUpload_");
	var extUp = new nexacro.ExtFileUpload(name, this);
	this.addChild(extUp.name, extUp);
	this.extUp = extUp;
	
	this.extUp.set_multiselect(this.opts.USE_MULTI_FILE);	// Multi선택
	this.extUp.setResponseZone(this, this.staHelpMessage, this.grdUpload);	// Drag Drop 처리 컴포넌트 선언 처리
	
	
	// == Event 설정 ==
	
	//	파일 다이얼로그를 통해 파일을 선택했을 때 발생하는 이벤트입니다
	this.extUp.addEventHandler("onchange", this.extUpload_onchange, this);
	
	//통신 성공시에 발생하는 이벤트입니다
	this.extUp.addEventHandler("onsuccess", this.extUpload_onsuccess, this);
    
	//통신 오류 시 발생하는 이벤트입니다.
	this.extUp.addEventHandler("onerror", this.fileUpload_onerror, this);
	
	//HTML5 Only : XMLHttpRequest가 데이터를 보내거나 받는 동안 서버에서 정의된 간격으로 발생합니다.
	// this.extUp.addEventHandler("onprogress", this.extUpload_onprogress, this);
	
	//HTML5 Only : XMLHttpRequest 통신시 readystate 속성 변경 event
	this.extUp.addEventHandler("onreadystatechange", this.extUpload_onreadystatechange, this);
	this.extUp.show();
	
	
	
	//==============================================
	//	파일 다운로드 컴포넌트 생성 및 설정
	//==============================================		
	var name = this.gfnGetUniqueId("extDownload_");
	var extDown = new nexacro.ExtFileDownload(name, this);
	this.addChild(extDown.name, extDown);
	this.extDown = extDown;

	// == Event 설정 ==
	
    //통신 성공시에 발생하는 이벤트입니다
    this.extDown.addEventHandler("onsuccess", this.extDownload_onsuccess, this);
    
	//통신 오류 시 발생하는 이벤트입니다.
	this.extDown.addEventHandler("onerror", this.extDownload_onerror, this);
	
	this.extDown.show();
	
	system.navigatorname

	//==============================================
	//	브라우저별 기능 표시
	//==============================================	
	//Drag and Drop 미지원 브라우저 확인.
	if(this.extUp.support.FileAPI == false) 
	{
		this.staHelpMessage.set_visible(false);
		this.staSupportDnd.set_color("red");
		this.staSupportDnd.set_text("• Drag and Drop "+this.gfnGetTransTxt(2080, "미지원"));
	}
	
	//XHR2와 FileAPI 지원하지 않을 경우 그리드 format 변경. ex) file 전송량 표시용 progress bar
	if (!this.extUp.support.XHR2)
	{
		this.grdUpload.setFormat("format0");
		this.grdDownload.setFormat("format0");
		this.staSupportPgb.set_color("red");
		this.staSupportPgb.set_text("• ProgressBar "+this.gfnGetTransTxt(2080, "미지원"));
	}	
	
	//Multiple File Selection.
	if (!this.extUp.support.MultipleInput)
	{
		this.staSupportMulti.set_color("red");
		this.staSupportMulti.set_text("• File "+this.gfnGetTransTxt(2081, "다중선택 미지원"));
	}
};

/**
 * @description 확장자별 파일 아이콘 설정
*/
this.initExtToIcon = function ()
{
	var extToIcon = this.extToIcon;
	var iconInfo = this.iconInfo;

	for (var name in iconInfo) {
		var len = iconInfo[name].length;
		for (var i=0; i<len; i++) 
		{
			extToIcon[iconInfo[name][i]] = name;
		}
	}
};

/**
 * @description 파일 확장자에 해당하는 이미지경로 반환.
 * @param {string} fileName file name
*/
this.getFileIcon = function(fileName)
{
	if(this.gfnIsNull(fileName)) return;
	
	fileName = fileName.toLowerCase();
	var ext = (/[.]/.exec(fileName)) ? /[^.]+$/.exec(fileName) : undefined;
	var icon = this.extToIcon[ext];
	
	if(icon == undefined) ext = "etc";

	return "theme://images/" + this.extToIcon[ext] + ".png";
};


//===========================================================
//				File Upload
//===========================================================
/**
 * @description 파일 다운로드 수행
*/ 
this.downloadFile = function (row)
{
	this.fdtFile.setPostData("SCD"	, this.dsUpload.getColumn(row, "SOURCE_CD"));
	this.fdtFile.setPostData("SSE"	, this.dsUpload.getColumn(row, "SOURCE_SEQ"));
	this.fdtFile.setPostData("SFN"	, this.dsUpload.getColumn(row, "SAVE_FILE_NAME"));
	this.fdtFile.setPostData("OF"	, this.dsUpload.getColumn(row, "FILE_NAME"));
	
	this.fdtFile.set_downloadfilename(this.dsUpload.getColumn(row, "FILE_NAME"));
	this.fdtFile.download("svcUrl::nextFileDownload.do");
	return;
	var dsUpload = this.dsUpload;
	
	if (dsUpload.getRowType(row) == 2) 
	{
		return;
	}

	var nSeq = dsUpload.getColumn(row,		"FM_SEQ");
	var downloadUrl = this.fileConfig.host + this.fileConfig.downloadUrl;
	
	
	// trace("URL:["+downloadUrl+"]");
	
	//download file
	//@param {=string} url 다운로드 fullPath url
	//@param {string} filename 파일저장시 적용할 file name.(지원가능한 브라우저만 적용됨. 런타임 미지원)
	//@return {boolean} 다운로드 성공여부
	//this.extDown.download(downloadUrl + encodeFileName, fileName, nSeq);
	if(this.opts.SOURCE_CD == "MTM")
	{
		this.extDown.download(downloadUrl, nSeq, "", "MTM");
	}
	else
	{
		this.extDown.download(downloadUrl, nSeq);
	}
};

/**
 * @description 파일 유효성검증
*/
this.validateFile = function (cond)
{
	var rtn = 1;
	this.gfnEach(cond, function(prop, val, object) {
		var result = "";
		if (prop == "name")
		{
			var fileExt = val.slice(val.lastIndexOf(".")+1).toLowerCase();
			if(!this.gfnContains(this.fileConfig.allowTypes, fileExt))
			{
				this.gdnAlert("msg.file.checkext",[]);
				rtn = 0;
				return false;
			}
		}
		else if (prop == "length")
		{
			if (val >= this.fileConfig.maxCount)
			{
				this.gfnAlert("msg.file.itemcount",[this.fileConfig.maxCount]);
				rtn = -1;
				return false;
			}	
		}
		else if (prop == "size")
		{	
			if (!isNaN(val) && (val >= this.sizeToByte(this.fileConfig.maxSize)))
			{
				this.gfnAlert("msg.file.filesize",[this.fileConfig.maxSize]);
				rtn = 0;
				return false;
			}
		}
		else if (prop == "totalSize")
		{	
			if (!isNaN(val) && (val >= this.sizeToByte(this.fileConfig.maxTotalSize)))
			{
				this.gfnAlert("msg.file.filetotalsize",[this.fileConfig.maxTotalSize]);
				rtn = -1;
				return false;
			}
		}
	}, this);
	
	return rtn;
};

/**
 * @description size를 byte로 변환처리한다.
*/ 
this.sizeToByte = function(fileSize) 
{
	var unit = fileSize.match(/[^\d]+/g),
		size = fileSize.match(/\d+/);

	unit = unit ? unit[0].toLowerCase() : "";
	size = size ? size[0] : fileSize;
	
	if (unit == "mb") 
	{
		return size * 1024 * 1024;
	}
	else if (unit == "gb") 
	{
		return size * 1024 * 1024 * 1024;
	}
	else if (unit == "tb") 
	{
		return size * 1024 * 1024 * 1024 * 1024;
	}
	else if (unit == "") 
	{
		return size;
	}
	else 
	{
		return fileSize;
	}
};

/**
 * @description 데이터셋 업데이트 여부 확인
*/
this.isUpdateDataset = function (ds)
{
	if(this.gfnIsNull(ds)) 
	{
		return false;
	}
	
	if(ds.getRowCount() < 1) return false;
	
	if (ds.getDeletedRowCount() > 0) 
	{
		return true;
		
	}
	
	if (ds.findRowExpr("(this.getRowType(rowidx)==Dataset.ROWTYPE_UPDATE)||(this.getRowType(rowidx)==Dataset.ROWTYPE_INSERT)") > -1) 
	{
		return true;
	}
	
	return false;
};



/**
 * @descriptio 파일 삭제
 * @param {number} row 삭제대상 row
*/
this.removeFile = function(row)
{
	var dsFiles = this.dsUpload;
	
	//this.grdUpload.set_enableredraw(false);
	if (this.gfnIsNull(row) || row < 0)
	{
		return;
	}

	//해당 row의 rowtype이 normal이면 서버에서 삭제로직 추가.
	//업로드가 성공한 후에는 ExtFileUpload에 존재하는 파일 정보가 사라진 상태.
	if(dsFiles.getRowType(row) == 2) //수정된 상태
	{
		var fileId = dsFiles.getColumn(row, "fileid");
		
		//ExtFileUpDownload에서 내부적으로 가지고 있는 file정보 삭제.
		this.extUp.removeFile(fileId);
		dsFiles.deleteRow(row);
		var fRow = this.ds_FileInsert.findRow("fileid", fileId);
		if(fRow >= 0) this.ds_FileInsert.deleteRow(fRow);
	}
	else
	{
// 		this.gfnAlert('confirm.before.filedelete',[],"deletefile",
// 		function() {
// 			this.ds_FileDelete.copyData(dsFiles);
// 			this.ds_FileDelete.deleteRow(row);
// 			dsFiles.deleteRow(row);
// 			this.fnTranDelete();
// 		});	
		var nRow = this.ds_FileDelete.addRow();
		this.ds_FileDelete.copyRow(nRow, dsFiles, row);
		dsFiles.deleteRow(row);
		console.log(this.ds_FileDelete.saveXML());
	}
	//this.grdUpload.set_enableredraw(true);
};

//사용자 정보 저장
this.fnTranDelete = function ()
{
	this.gfnAddInputDataset("ds_FileDelete"	, "dsInput1");
	this.gfnSetMap("nextCommMapper", "MasterFile", "");	
	this.gfnCommonTransaction("DeleteFile", "saveNextList.do");
};
//===========================================================
//				File DownLoad
//===========================================================



 /************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
 ************************************************************************************************/
this.btn_Destroy_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.opts.SOURCE_CD == "MTM")
	{
		this.fn_Close("");
	}
	else
	{
		this.fn_Close("");
	}
};

this.btn_Close_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.opts.SOURCE_CD == "MTM")
	{
		this.fn_Close("");
	}
	else
	{
		this.fn_Close("");
	}
};

//===========================================================
//				File Upload
//===========================================================
/**
 * @description 파일추가버튼이벤트
*/ 
this.btnAddFile_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.extUp.addFiles();
	
	if(this.staHelpMessage.visible)	this.staHelpMessage.set_visible(false);	
};

/**
 * @description 파일링크추가버튼이벤트
*/ 
this.btnAddLinkFile_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//this.commUtil.popup(this, "TR_RequestOnsiteEduReg", "Technique::TR_RequestOnsiteEduReg.xfdl", -1, -1, 933, 814, true, false, false, {strFormType:"TA",rtsSeq:nRtsSeq}, "fnPopupCallBack");
	// alert("개발중입니다.");
	
	
	//링크타입의 파일 처리 구현 필요
	var nRow = this.cmb_ContractList.index;
	var Argument = {	pv_SourceCd : this.opts.SOURCE_CD,
						pv_SourceSeq : this.cmb_ContractList.value				
					};
	this.commUtil.popup(this, "AddLinkFile", "sales::comm/CF_LinkFileSearch.xfdl", -1, -1, 700, 400, true, false, false, Argument, "fnPopupCallBack");
};


/**
 * @description 전체삭제버튼이벤트
 * 기능 정상동작하지 않음. 주석처리 ingyu 20180928
*/
/*
this.btnDeleteAll_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.grdUpload.set_enableredraw(false);
	this.extUp.removeAll();	
	this.dsUpload.clearData();
	this.grdUpload.set_enableredraw(true);
};
*/

/**
 * @description 개별삭제이벤트
*/ 
this.grdUpload_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var rmCellIdx = 4;	// Delete cell Index(상수로 사용)
	
	
	if (e.col == rmCellIdx)
	{
		this.removeFile(e.row);
	}
};

/**
 * @description 저장버튼이벤트
*/ 
this.btnSaveFile_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var deleteCnt = this.ds_FileDelete.rowcount;
	if (deleteCnt == 0 && this.ds_FileInsert.rowcount == 0) 
	{
		this.gfnAlert('msg.save.nochange', []);
	}
	else
	{
		var i = 0;
		var insertCnt = 0;
		
		
		// Link 처리  - 이건 나중에
// 		for (var i=0; i<this.dsUpload.rowcount; i++) {
// 			var sShareFlag = this.dsUpload.getColumn(i, "SHARE_FLAG");
// 			if (sShareFlag == "1") {
// 				if (this.dsUpload.getRowType(i) == 2) 	// Dataset.ROWTYPE_INSERT
// 				{
// 					var nRow = this.ds_FileInsert.addRow();
// 					this.ds_FileInsert.copyRow(nRow, this.dsUpload, i);
// 
// 					insertCnt++;
// 				}
// 			}
// 		}
		
		this.uploadFiles();
		if (deleteCnt > 0 || this.ds_FileInsert.rowcount > 0) 
		{
			//this.uploadFiles();
// 			this.gfnAddInputDataset("ds_FileDelete", "ds_FileDelete", "A");
// 			this.gfnAddInputDataset("ds_FileInsert", "ds_FileInsert", "A");
// 			this.gfnAddOutputDataset("dsRtnArgs", "dsRtnArgs");
// 
// 			var strSvcID = "FileDeleteCall";
// 			var strModelNm = "CF_NFileMM_R02";
// 			this.gfnCommonTransaction(strSvcID, strModelNm, "");
		}
		else 
		{
// 			if(this.isUpdateDataset(this.dsUpload))
// 			{
// 				this.uploadFiles();
// 			}
// 			else 
// 			{
// 				this.fnCallBack("FileDelete", "0", "");
// 			}
		}		
	}
};






/**
 * @description 파일업로드수행
*/ 
this.uploadFiles = function ()
{
	var i, len, rowtype, 
		type, fileid, addFileLen,
		ds_files = this.dsUpload;
		
	var extUp = this.extUp;	
	addFileLen = extUp.getAddedFileLength() || 0;
	
	if (addFileLen > 0 || this.ds_FileDelete.rowcount > 0)
	{
		if (!extUp.support.XHR2 || !extUp.support.FileAPI)
		{
			if (!this.imgLoading.visible)
			{
				var topform = this.gfnGetTopLevelForm(this);
				var l = Math.round((topform.getOffsetWidth() - this.imgLoading.getOffsetWidth())/2);
				var t = Math.round((topform.getOffsetHeight() - this.imgLoading.getOffsetHeight())/2);
				
				this.imgLoading.move(l, t, this.imgLoading.getOffsetWidth(), this.imgLoading.getOffsetHeight());
				this.imgLoading.set_visible(true);
			}
		}
		
		var url = this.fileConfig.host + this.fileConfig.uploadUrl;
		
		/*
		런타임에서는 url parameter 설정만 가능!
		HTML5는 아래 내용 참고
			//  upload files
			//  @param {=string} path upload url 정보. default는 상단의 extUp.set_uploadurl()에서 설정한 정보.
			//  @param {string} inDatasetsParam input dataset 정보
			//  @param {string} outDatasetsParam output dataset 정보
			//  @param {string} transferType 전송유형.(all: 대상파일을 한번에 전송(defalut), each: 개별 전송)
			//  @param {number} datatype data 전송방식. 0:XML, 1:Binary(Runtime only), 2:SSV		
			
			ds_download에 output dataset 결과는 extUpload_onsuccess 이벤트의 e.datasets에서 수신한다.
		*/
		
		//[전체전송]
		var arrStatusCD = new Array();
		for(var i=0; i<this.dsUpload.getRowCountNF(); i++)
		{
			if(this.dsUpload.getRowTypeNF(i)==Dataset.ROWTYPE_INSERT)
				arrStatusCD.push(this.dsUpload.getColumnNF(i, "STATUS_CD"));
		}
		this.opts.STATUS_CD = arrStatusCD;

		var rtn = this.extUp.upload(url, this.ds_FileInsert,this.ds_FileDelete
						, this.transferType
						, 0
						, this.opts.SOURCE_CD
						, this.opts.SOURCE_SEQ
						, this.opts.STATUS_CD
						, "MapFile"
						, "MasterFile");
		if(rtn)
		{
			this.gfnAlert('msg.save.success',[],"SAVE",
			function() {
				if(this.opts.SOURCE_CD != "MTM")
				{
					this.fn_Close("");
				}
			});

		}
		
		//[개별전송]
		//this.transferType = "all";
		//extUp.upload(url, "ds_input=ds_input","", this.transferType, 0);
	}
};


this.dsUpload_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	obj.setColumn(e.row, "STATUS", obj.getRowType(e.row));
};

//===========================================================
//				File DownLoad
//===========================================================
/**
 * @description 그리드 다운로드 더블클릭시 다운로드 실행
*/ 
this.grdUpload_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	/*	검수확인서는 사업그룹에서 다운로드 불가	*/
// 	if (this.dsUpload.getColumn(e.row, "STATUS_CD") == "002") {
// 		if (this.commUtil.getFormAuthority(242,21)) {
// 			this.alert(this.gfnGetTransTxt(1217, "사업그룹의 사람이 다운하려고 하면 사업지원팀에 문의 후 진행 바랍니다 "));
// 			return;
// 		}
// 	}
// 	
	
	this.downloadFile(e.row);
	
};


//=======================================================================================================================================
//              ExtFileUpload Event 
//=======================================================================================================================================
/**
 * @description 파일업로드 컴포넌트 체인지 이벤트 (파일 다이얼로그 파일을 선택)
*/
this.extUpload_onchange = function(obj, e)
{
	var ds = this.dsUpload;
	var index = e.index;
 	var fileList = e.files;
 	var fileCount = fileList.length;
 	var fileSupport = (this.extUp.support.XHR2 && this.extUp.support.FileAPI);
	
	// 전체영역인 경우 ?
	
	//var seq = this.opts.SOURCE_CD + "" +  this.opts.SOURCE_SEQ + (ds.getColumn(ds.rowpositon, "CODE")||"");
	var fmSeq = "";
	var bStop = false;
	for(var i=0; i<fileCount; i++)
	{
		var file = fileList[i];
		var fileId   = file.id;
		var fileName = file.name;
        var fileSize = file.size;
        var fileType = file.type;
        var fileFullpath = file.fullpath; 	//RUMTIME만 제공됨(HTML5는 빈문자열 반환). 2016.02.02
		
		if(bStop == true) {
			this.extUp.removeFile(fileId);
			continue;
		}
        			
		var dsCount = ds.getRowCount();
		var cond;
		if (fileSupport)
		{
			var totalSize = ds.getSum("FILE_SIZE") + fileSize;
			cond = {"name" : fileName, "length" : dsCount, "size" : fileSize, "totalSize" : totalSize};
		}
		else
		{
			cond = {"name" : fileName, "length" : dsCount};
		}
		
		var valid = this.validateFile(cond);
		
		//파일 유형 에러
		if (valid == 0)
		{
			this.extUp.removeFile(fileId);
			bStop = true;
			continue;
		}
		else if (valid == -1) //최대 파일첨부가능 건수 또는 size 에러.
		{
			this.extUp.removeFile(fileId);
			bStop = true;
			continue;
		}
		
		
		var findRow = ds.findRow("FILE_NAME", fileName);

		if(findRow > -1) {
			this.gfnAlert('msg.file.exist',['fileName'],"DUP",
				function() {
				}
			);		
			bStop = true;
			this.extUp.removeFile(fileId);
			continue;			
		}
		
		fmSeq = ds.getColumn(addidx-1, "FM_SEQ");
		if(this.gfnIsNull(fmSeq)) {
			fmSeq = fileId;
		}
		
		// 업로드 파일 정보 데이타 구성
		var addidx = ds.addRow();
		var downImage = this.getFileIcon(fileName); 
		// ds.setColumn(addidx, "fileimg", downImage);
		ds.setColumn(addidx, "fileid",		fileId);
		
		ds.setColumn(addidx, "FILE_NAME",	fileName);
		ds.setColumn(addidx, "FM_SEQ",		fmSeq);
		ds.setColumn(addidx, "FILE_TYPE",	"0");
		ds.setColumn(addidx, "DEL_FLAG",	"N");
		ds.setColumn(addidx, "SOURCE_CD",	this.opts.SOURCE_CD);
		ds.setColumn(addidx, "SOURCE_SEQ",	this.opts.SOURCE_SEQ);
		ds.setColumn(addidx, "FILE_STATUS",	"I");
		
		var statusCd = this.opts.STATUS_CD;
		if(this.gfnIsEmpty(statusCd))
		{
			statusCd = this.ds_NextFileType.getColumn(this.ds_NextFileType.rowposition, "CODE");
		}
		ds.setColumn(addidx, "STATUS_CD",	statusCd);
			
		if(this.opts.SOURCE_CD=="P" && this.gfnIsEmpty(statusCd))
		{
			if(this.confirm("첨부파일이 견적서 파일입니까?"))
			{
				statusCd = "004";
			}
		}
		if(this.gfnIsEmpty(statusCd)&&this.opts.USE_NEXT_FILE_TYPE)
		{
			bStop = true;
			this.alert("파일종류를 선택후 업로드 바랍니다.");
			ds.deleteRow(addidx);
			return;
		}
		ds.setColumn(addidx, "STATUS_CD",	statusCd);
		if(fileSize > 0)
		{
			ds.setColumn(addidx, "FILE_SIZE", fileSize);
		}
		
		var nRow = this.ds_FileInsert.addRow();
		this.ds_FileInsert.copyRow(nRow, ds, addidx);		
	}
	
};


/**
 * @description [HTML5 Only] XMLHttpRequest 통신시 readystate 속성 변경 event
 * @param {ExtFileUpload} obj ExtFileUpload
 * @param {ExtFileReadystateChangEventInfo} e ExtFileReadystateChangEventInfo 
*/ 
this.extUpload_onreadystatechange = function(obj, e)
{
	if(e.readyState == 4 ){
		if(e.status != 200) {
//			trace("extUpload_onreadystatechange > Fail request!!");
			//TODO
			//에러 발생에 따른 UI 처리
			
			var ds = this.dsUpload;
			var count = ds.rowcount;
			for(var i=0; i<count; i++)
			{
				ds.setColumn(i, "prog", -1);
			}
			
		} else if(e.status == 200) {
			
		}
	}
};


//=======================================================================================================================================
//              ExtFileDownload Event 
//=======================================================================================================================================
/**
 * @description 통신 오류 시 발생하는 이벤트입니다
*/ 
this.extDownload_onerror = function(obj, e)
{
  //런타임에서 e.errortype; <-- 원하는 type이 아닌 error object 가 전송됨.
//	trace("An error occurred: extDownload_onerror index=" + e.index  + ", errortype=" + e.errortype   + "\n, statuscode=" + e.statuscode + ", requesturi=" + e.requesturi);
	
	if (this.imgLoading.visible)
	{
		this.imgLoading.set_visible(false);
	}	
};






/************************************************************************************************
 * CALLBACK 콜백 처리부분(Transaction, Popup)
 ************************************************************************************************/
//===========================================================
//				File UpLoad
//===========================================================
/**
 * @description 파일업로드 성공!
*/
this.extUpload_onsuccess = function(obj, e)
{
	trace("extUpload_onsuccess !!");
	
	//e.fildId는 개별전송("each")시 수신.	
	if (this.imgLoading.visible)
	{
		this.imgLoading.set_visible(false);
	}
	
	this.dsUpload.applyChange();
	
	if(e.datasets)
	{
		var outputDatasets = e.datasets;
//		trace(outputDatasets[0].saveXML());
		
		
		if(outputDatasets.length == 0) return;
		
		
		var outDs = outputDatasets[0];
		
		// SOURCE_SEQ 리턴 받아서 넘겨주기 (임시 SOURCE_SEQ)
		if(outDs.rowcount > 0)
		{
			if(this.opts.SOURCE_CD == "MTM" && this.opts.SOURCE_SEQ == "0")
			{
				this.dsRtnArgs.copyData(outDs);
			}
			else
			{
				var nRow = this.dsRtnArgs.addRow();
				this.dsRtnArgs.setColumn(nRow, "SOURCE_SEQ", this.opts.SOURCE_SEQ);
			}
			this.fn_Close(this.dsRtnArgs);
		}

		//개별전송 처리로직
		if(this.transferType == "each") 
		{
			if (this.extUp.support.XHR2) {
				//var row = ds.addRow();
				//ds.copyRow(row, outDs, 0);
				
				//개별파일 전송시. "each"
				var fileId = e.fileId;
				if(fileId){
					var ds = this.dsUpload;
					var row = ds.findRow("FILE_NAME", fileId);
//					trace("### [개별전송] extUpload_onsuccess :" +" e.fileId=" + e.fileId);
					//ds.setColumn(row, "prog", 100);
				}				
				
			}
		} 
	}
};


//===========================================================
//				File DownLoad
//===========================================================
/**
 * @description 다운로드 성공시에 발생하는 이벤트입니다
*/  
this.extDownload_onsuccess = function(obj, e)
{
//	trace("	 ★ extFileDownload_onsuccess url=" + e.url);
	
	if (this.imgLoading.visible)
	{
		this.imgLoading.set_visible(false);
	}
	
	if(!this.gfnIsNull(e.url))
	{
		alert("Successfully downloaded.");
	}
	else
	{
		this.alert(this.gfnGetTransTxt(1216, "다운로드 실패"));
	}
	
};



 /************************************************************************************************
 * TRANSACTION 및 추가 FUNCTION 영역
 ************************************************************************************************/
// 파일조회
this.fnRetrieve = function ()
{
	var state = "";
	if (this.opts.STATUS_CD == 'INSERT') 
	{
		state = "INSERT";
	}

	this.gfnGetFiles(
						"FileRetrieve"
						,{
							 DS_OUT_NAME	:	"dsUpload"
							,SOURCE_CD		:	this.opts.SOURCE_CD
							,SOURCE_SEQ		:	this.opts.SOURCE_SEQ
							,STATUS_CD		:	this.opts.STATUS_CD
							,ARR_GRD		:	null//[this.grdUpload]
							,STATE			:	state
						}					
					);		// 신규등록여부
};



// callback
this.fnCallBack = function (strSvcID, nErrorCode, strErrorMag)
{
	if (nErrorCode != 0) 
	{
		//this.alert(nErrorCode + " : " + strErrorMag);
		return;
	}
	
	if (strSvcID == "FileRetrieve") 
	{
		if (this.dsUpload.rowcount > 0)
		{
			if(this.staHelpMessage.visible)	this.staHelpMessage.set_visible(false);	
		}
		this.ds_FileInsert.copyData(this.dsUpload);
		this.ds_FileDelete.copyData(this.dsUpload);
		
		this.ds_FileInsert.clearData();
		this.ds_FileDelete.clearData();
		
		if(this.opts.USE_OPEN_ADD_DIALOG)
		{
			if(this.opts.USE_MULTI_FILE || (!this.opts.USE_MULTI_FILE && this.dsUpload.rowcount == 0))
			{
				//아래코드 두줄 모두 동작안함, 원인파악필요
				this.btnAddFile.click();
				//this.extUp.addFiles();
			}			
		}
		if(this.opts.USE_DELETE_ALL && this.dsUpload.rowcount > 0)
		{
			while(this.dsUpload.rowcount > 0)
			{
				this.removeFile(0);
			}
			this.btnSaveFile_onclick();
		}
	}
	else if (strSvcID == "FileSave") 
	{
//		trace(this.dsRtnArgs.saveXML());
		// this.fn_Close(this.dsRtnArgs);
	}
	else if (strSvcID == "DeleteFile") 
	{
		
	}
	else if (strSvcID == "FileDelete") 
	{
		// this.fn_Close(strSvcID);
		if(this.opts.USE_DELETE_ALL && this.dsUpload.rowcount == 0)
		{
			this.fn_Close("DELETE ALL");
		}
	}
	else if (strSvcID == "FileDeleteCall") 
	{
		if(this.opts.SOURCE_CD == "MTM" && this.opts.STATUS_CD == "INSERT")
		{
			if(this.dsUpload.getRowCount() > 0)
			{
				this.opts.SOURCE_SEQ = this.opts.SOURCE_SEQ == "0" ? (this.dsRtnArgs.getRowCount() > 0 ? this.dsRtnArgs.getColumn(0, "SOURCE_SEQ") : this.opts.SOURCE_SEQ) : this.opts.SOURCE_SEQ;
			}
			else
			{
				this.opts.SOURCE_SEQ = "0"; // 회의 등록하지 않으면 SOURCE_SEQ 값이 없으므로 임시 SOURCE_SEQ : 0 으로 변경
			}
		}
		else
		{
			this.opts.SOURCE_SEQ = this.opts.SOURCE_SEQ == "0" ? (this.dsRtnArgs.getRowCount() > 0 ? this.dsRtnArgs.getColumn(0, "SOURCE_SEQ") : this.opts.SOURCE_SEQ) : this.opts.SOURCE_SEQ;
		}

		if(this.isUpdateDataset(this.dsUpload))
		{
			this.uploadFiles();
		}
		else 
		{
			this.fnCallBack("FileDelete", "0", "");
		}
	}
	else if(strSvcID=="gfnGetCode") 
	{
		if(this.opts.USE_NEXT_FILE_TYPE)
		{
			this.ds_NextFileType.set_enableevent(false);
			this.ds_NextFileType.assign(this.ds_CD_NEXT_FILE_TYPE);
			//this.ds_NextFileType.insertRow(0);
			//this.ds_NextFileType.setColumn(0, "CAPTION", "전체");
			this.ds_NextFileType.set_enableevent(true);
			this.ds_NextFileType.set_rowposition(0);
			this.btnAddFile.set_visible(false);
			
			//매출계약현황품의는 견적서만 나오게
			if(this.opts.SOURCE_CD=="CSR")
				this.ds_NextFileType.filter("CODE=='004'");
		}
	}
	else if (strSvcID=="ContractList")
	{
		this.cmb_ContractList.set_index(0);
	}
	/*
	if (strSvcID == "FileRetrieve") 
	{
		this.ds_FileInsert.clear();
		this.ds_FileDelete.clear();
		for (var i = 0; i < this.ds_File.getColCount(); i++) 
		{
			this.ds_FileInsert.addColumn(this.ds_File.getColID(i), "string");
			this.ds_FileDelete.addColumn(this.ds_File.getColID(i), "string");
		}

		var itemCnt = this.FileUpload.getItemCount(false);
		for (var i = 0; i < itemCnt; i++) 
		{
			this.FileUpload.deleteItem(0);
		}

		for (var i = 0; i < this.ds_File.getRowCount(); i++) 
		{
			this.FileUpload.appendItem();
		}
		this.FileUpload.index = this.ds_File.rowposition;
	}
	else if (strSvcID == "FileSave") 
	{
		this.fn_Close(this.dsRtnArgs);
	}
	else if (strSvcID == "FileDelete") 
	{
		this.fn_Close(strSvcID);
	}
	else if (strSvcID == "FileDeleteCall") 
	{
		this.strSourceSeq = this.strSourceSeq == "0" ? (this.dsRtnArgs.getRowCount() > 0 ? this.dsRtnArgs.getColumn(0, "SOURCE_SEQ") : this.strSourceSeq) : this.strSourceSeq;

		var iCnt = this.FileUpload.getItemCount(true);

		if (iCnt > 0) 
		{
			this.setWaitCursor(true, true);
			this.fnFileUpload();
		}
		else 
		{
			this.fnCallBack("FileDelete", "0", "");
		}
	}
	*/
};

this.fnPopupCallBack = function(sPopupId, Variant)
{
	Variant = this.commUtil.popupReturn();
	if(this.gfnIsEmpty(Variant))
	{
		return;
	}
	else
	{	
		this.recentVariant = Variant;
		switch(sPopupId)
		{
			case "AddLinkFile":
				var ds = new nexacro.Dataset();
				ds.loadXML(Variant);
				this.recentVariant = ds;
				
				// return 정보가 없으면 종료
				if (ds.rowcount<=0) return;

				for (var i=0; i<ds.rowcount; i++) {
					
					var sFmseq = ds.getColumn(i, "FM_SEQ")
					var nFindRow = this.dsUpload.findRow("FM_SEQ", sFmseq);
					// trace(sFmseq + " // "+nFindRow);
					
					if (nFindRow<0) {
						var addidx = this.dsUpload.addRow();
						var sFileNm = ds.getColumn(i, "FILE_NAME");
						// var downImage = this.getFileIcon(sFileNm);					
						
						this.dsUpload.setColumn(addidx, "FM_SEQ",		 ds.getColumn(i, "FM_SEQ"));
						this.dsUpload.setColumn(addidx, "SHARE_FLAG",	"1");
						this.dsUpload.setColumn(addidx, "FILE_NAME",	sFileNm);
						this.dsUpload.setColumn(addidx, "FILE_TYPE",	"0");
						this.dsUpload.setColumn(addidx, "DEL_FLAG",		"N");
						this.dsUpload.setColumn(addidx, "SOURCE_CD",	this.opts.SOURCE_CD);
						this.dsUpload.setColumn(addidx, "SOURCE_SEQ",	this.opts.SOURCE_SEQ);
						this.dsUpload.setColumn(addidx, "STATUS_CD",	ds.getColumn(i, "STATUS_CD"));
					}
				}
				if (this.dsUpload.rowcount>0)	this.staHelpMessage.set_visible(false);
		
			break;
			
			
		}
	}
}

this.fn_Close = function(sArg)
{
	this.popupClose(sArg);
}

this.ds_NextFileType_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	var sStatusCd = obj.getColumn(e.newrow, "CODE");
	if (this.gfnIsEmpty(sStatusCd)) {
		this.dsUpload.filter("");
		this.btnAddFile.set_visible(false);
	} else {
		this.dsUpload.filter("STATUS_CD=='"+sStatusCd+"'");
		this.btnAddFile.set_visible(true);
	}
};


this.cmb_Type_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	if (this.opts.USE_LINK_TYPE) {
		var bLinkFlag = false;
		if (e.postvalue == "1")	bLinkFlag = true;
		else					bLinkFlag = false;

		this.btnAddLinkFile.set_visible(bLinkFlag);
		this.cmb_ContractList.set_visible(bLinkFlag);
	}
};
this.staHelpMessage_onclick = function(obj:nexacro.Static,e:nexacro.ClickEventInfo)
{
	this.btnAddFile.click();
};
]]></Script>
    <Objects>
      <Dataset id="ds_CmbType" firefirstcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">0</Col>
            <Col id="NAME">File</Col>
          </Row>
          <Row>
            <Col id="CODE">1</Col>
            <Col id="NAME">Link</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsUpload" oncolumnchanged="dsUpload_oncolumnchanged">
        <ColumnInfo>
          <Column id="fileid" type="string" size="255"/>
          <Column id="CHK" type="string" size="255"/>
          <Column id="SOURCE_CD" type="string" size="255"/>
          <Column id="SOURCE_SEQ" type="string" size="255"/>
          <Column id="STATUS_CD" type="string" size="255"/>
          <Column id="FM_SEQ" type="string" size="255"/>
          <Column id="FILE_TYPE" type="string" size="255"/>
          <Column id="FILE_NAME" type="string" size="255"/>
          <Column id="SAVE_FILE_NAME" type="string" size="255"/>
          <Column id="SAVE_PATH" type="string" size="255"/>
          <Column id="DEL_FLAG" type="string" size="255"/>
          <Column id="STATUS" type="string" size="255"/>
          <Column id="INSERT_EMP_NAME" type="string" size="255"/>
          <Column id="INSERT_DATE" type="string" size="255"/>
          <Column id="SHARE_FLAG" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_FileInsert" oncolumnchanged="dsUpload_oncolumnchanged">
        <ColumnInfo>
          <Column id="fileid" type="string" size="255"/>
          <Column id="CHK" type="string" size="255"/>
          <Column id="SOURCE_CD" type="string" size="255"/>
          <Column id="SOURCE_SEQ" type="string" size="255"/>
          <Column id="STATUS_CD" type="string" size="255"/>
          <Column id="FM_SEQ" type="string" size="255"/>
          <Column id="FILE_TYPE" type="string" size="255"/>
          <Column id="FILE_NAME" type="string" size="255"/>
          <Column id="SAVE_FILE_NAME" type="string" size="255"/>
          <Column id="SAVE_PATH" type="string" size="255"/>
          <Column id="DEL_FLAG" type="string" size="255"/>
          <Column id="STATUS" type="string" size="255"/>
          <Column id="INSERT_EMP_NAME" type="string" size="255"/>
          <Column id="INSERT_DATE" type="string" size="255"/>
          <Column id="SHARE_FLAG" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_FileDelete" oncolumnchanged="dsUpload_oncolumnchanged">
        <ColumnInfo>
          <Column id="fileid" type="string" size="255"/>
          <Column id="CHK" type="string" size="255"/>
          <Column id="SOURCE_CD" type="string" size="255"/>
          <Column id="SOURCE_SEQ" type="string" size="255"/>
          <Column id="STATUS_CD" type="string" size="255"/>
          <Column id="FM_SEQ" type="string" size="255"/>
          <Column id="FILE_TYPE" type="string" size="255"/>
          <Column id="FILE_NAME" type="string" size="255"/>
          <Column id="SAVE_FILE_NAME" type="string" size="255"/>
          <Column id="SAVE_PATH" type="string" size="255"/>
          <Column id="DEL_FLAG" type="string" size="255"/>
          <Column id="STATUS" type="string" size="255"/>
          <Column id="INSERT_EMP_NAME" type="string" size="255"/>
          <Column id="INSERT_DATE" type="string" size="255"/>
          <Column id="SHARE_FLAG" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsRtnArgs" firefirstcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="SOURCE_SEQ" type="STRING" size="256"/>
          <Column id="FM_SEQ" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_CD_NEXT_FILE_TYPE"/>
      <Dataset id="ds_ContractList"/>
      <Dataset id="ds_NextFileType" onrowposchanged="ds_NextFileType_onrowposchanged">
        <ColumnInfo>
          <Column id="Column0" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsRtn" firefirstcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="SOURCE_SEQ" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <FileDownTransfer id="fdtFile" url="svcUrl::fileDownload.do" onerror="fdtFile_onerror" onsuccess="fdtFile_onsuccess"/>
    </Objects>
  </Form>
</FDL>
