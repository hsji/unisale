{"version":3,"file":"templatemod.bundle.js","mappings":"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","sources":["webpack://template-designer/webpack/universalModuleDefinition","webpack://template-designer/./js/pdf_form/src/Translator/utils.js","webpack://template-designer/./js/pdf_form/src/Translator/translator.js","webpack://template-designer/./js/pdf_form/src/pdf.cursor.tool.js","webpack://template-designer/./js/pdf_form/src/utils/color-picker.js","webpack://template-designer/webpack/bootstrap","webpack://template-designer/webpack/runtime/compat get default export","webpack://template-designer/webpack/runtime/define property getters","webpack://template-designer/webpack/runtime/global","webpack://template-designer/webpack/runtime/harmony module decorator","webpack://template-designer/webpack/runtime/hasOwnProperty shorthand","webpack://template-designer/webpack/runtime/make namespace object","webpack://template-designer/./js/pdf_form/src/Constants.js","webpack://template-designer/./node_modules/animejs/lib/anime.es.js","webpack://template-designer/./js/pdf_form/src/utils/utils.js","webpack://template-designer/./js/pdf_form/src/Fields/BaseField.js","webpack://template-designer/./js/pdf_form/src/template/templatemod.js","webpack://template-designer/./js/pdf_form/src/template/templateMain.js","webpack://template-designer/./js/pdf_form/src/Fields/TextBaseField.js","webpack://template-designer/./js/pdf_form/src/Fields/TextField.js","webpack://template-designer/./js/pdf_form/src/Fields/NumberField.js","webpack://template-designer/./js/pdf_form/src/Fields/DateField.js","webpack://template-designer/./js/pdf_form/src/Fields/SignField.js","webpack://template-designer/./js/pdf_form/src/Fields/ImageField.js","webpack://template-designer/./js/pdf_form/src/Fields/MultiLineTextField.js","webpack://template-designer/./js/pdf_form/src/Fields/CheckboxField.js","webpack://template-designer/./js/pdf_form/src/Fields/RadioField.js","webpack://template-designer/./js/pdf_form/src/Fields/LabelField.js","webpack://template-designer/./js/pdf_form/src/Fields/ComboboxField.js","webpack://template-designer/./js/pdf_form/src/template/templateData.js","webpack://template-designer/./js/pdf_form/src/template/templateDataOwner.js","webpack://template-designer/./js/pdf_form/src/template/templateDataPage.js","webpack://template-designer/./js/pdf_form/src/template/templateUserFieldInfo.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"templatemod\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"templatemod\"] = factory();\n\telse\n\t\troot[\"templatemod\"] = factory();\n})(this, () => {\nreturn ","const CONSOLE_MESSAGES = {\r\n    INVALID_PARAM_LANGUAGE: (param) =>\r\n        `Invalid parameter for \\`language\\` provided. Expected a string, but got ${typeof param}.`,\r\n    INVALID_PARAM_JSON: (param) =>\r\n        `Invalid parameter for \\`json\\` provided. Expected an object, but got ${typeof param}.`,\r\n    EMPTY_PARAM_LANGUAGE: () =>\r\n        `The parameter for \\`language\\` can't be an empty string.`,\r\n    EMPTY_PARAM_JSON: () =>\r\n        `The parameter for \\`json\\` must have at least one key/value pair.`,\r\n    INVALID_PARAM_KEY: (param) =>\r\n        `Invalid parameter for \\`key\\` provided. Expected a string, but got ${typeof param}.`,\r\n    NO_LANGUAGE_REGISTERED: (language) =>\r\n        `No translation for language \"${language}\" has been added, yet. Make sure to register that language using the \\`.add()\\` method first.`,\r\n    TRANSLATION_NOT_FOUND: (key, language) =>\r\n        `No translation found for key \"${key}\" in language \"${language}\". Is there a key/value in your translation file?`,\r\n    INVALID_PARAMETER_SOURCES: (param) =>\r\n        `Invalid parameter for \\`sources\\` provided. Expected either a string or an array, but got ${typeof param}.`,\r\n    FETCH_ERROR: (response) =>\r\n        `Could not fetch \"${response.url}\": ${response.status} (${response.statusText})`,\r\n    INVALID_ENVIRONMENT: () =>\r\n        `You are trying to execute the method \\`translatePageTo()\\`, which is only available in the browser. Your environment is most likely Node.js`,\r\n    MODULE_NOT_FOUND: (message) => message,\r\n    MISMATCHING_ATTRIBUTES: (keys, attributes, element) =>\r\n        `The attributes \"data-i18n\" and \"data-i18n-attr\" must contain the same number of keys.\r\n\r\nValues in \\`data-i18n\\`:      (${keys.length}) \\`${keys.join(' ')}\\`\r\nValues in \\`data-i18n-attr\\`: (${attributes.length}) \\`${attributes.join(' ')}\\`\r\n\r\nThe HTML element is:\r\n${element.outerHTML}`,\r\n    INVALID_OPTIONS: (param) =>\r\n        `Invalid config passed to the \\`Translator\\` constructor. Expected an object, but got ${typeof param}. Using default config instead.`,\r\n};\r\n\r\n/**\r\n *\r\n * @param {Boolean} isEnabled\r\n * @return {Function}\r\n */\r\nexport function logger(isEnabled) {\r\n    return function log(code, ...args) {\r\n        if (isEnabled) {\r\n            try {\r\n                const message = CONSOLE_MESSAGES[code];\r\n                throw new TypeError(message ? message(...args) : 'Unhandled Error');\r\n            } catch (ex) {\r\n                const line = ex.stack.split(/\\n/g)[1];\r\n                const [method, filepath] = line.split(/@/);\r\n\r\n                console.error(`${ex.message}\r\n\r\nThis error happened in the method \\`${method}\\` from: \\`${filepath}\\`.\r\n\r\nIf you don't want to see these error messages, turn off debugging by passing \\`{ debug: false }\\` to the constructor.\r\n\r\nError code: ${code}\r\n\r\nCheck out the documentation for more details about the API:\r\nhttps://github.com/andreasremdt/simple-translator#usage\r\n        `);\r\n            }\r\n        }\r\n    };\r\n}","import { logger } from './utils.js';\r\n\r\n/**\r\n * simple-translator\r\n * A small JavaScript library to translate webpages into different languages.\r\n * https://github.com/andreasremdt/simple-translator\r\n *\r\n * Author: Andreas Remdt <me@andreasremdt.com> (https://andreasremdt.com)\r\n * License: MIT (https://mit-license.org/)\r\n */\r\nclass Translator {\r\n    /**\r\n     * Initialize the Translator by providing options.\r\n     *\r\n     * @param {Object} options\r\n     */\r\n    constructor(options = {}) {\r\n        this.debug = logger(true);\r\n\r\n        if (typeof options != 'object' || Array.isArray(options)) {\r\n            this.debug('INVALID_OPTIONS', options);\r\n            options = {};\r\n        }\r\n\r\n        this.languages = new Map();\r\n        this.config = Object.assign(Translator.defaultConfig, options);\r\n\r\n        const { debug, registerGlobally, detectLanguage } = this.config;\r\n\r\n        this.debug = logger(debug);\r\n\r\n        if (registerGlobally) {\r\n            this._globalObject[registerGlobally] = this.translateForKey.bind(this);\r\n        }\r\n\r\n        if (detectLanguage && this._env == 'browser') {\r\n            this._detectLanguage();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the global object, depending on the environment.\r\n     * If the script is executed in a browser, return the window object,\r\n     * otherwise, in Node.js, return the global object.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    get _globalObject() {\r\n        if (this._env == 'browser') {\r\n            return window;\r\n        }\r\n\r\n        return global;\r\n    }\r\n\r\n    /**\r\n     * Check and return the environment in which the script is executed.\r\n     *\r\n     * @return {String} The environment\r\n     */\r\n    get _env() {\r\n        if (typeof window != 'undefined') {\r\n            return 'browser';\r\n        } else if (typeof module !== 'undefined' && module.exports) {\r\n            return 'node';\r\n        }\r\n\r\n        return 'browser';\r\n    }\r\n\r\n    /**\r\n     * Detect the users preferred language. If the language is stored in\r\n     * localStorage due to a previous interaction, use it.\r\n     * If no localStorage entry has been found, use the default browser language.\r\n     */\r\n    _detectLanguage() {\r\n        const inMemory = localStorage.getItem(this.config.persistKey);\r\n\r\n        if (inMemory) {\r\n            this.config.defaultLanguage = inMemory;\r\n        } else {\r\n            const lang = navigator.languages\r\n                ? navigator.languages[0]\r\n                : navigator.language;\r\n\r\n            this.config.defaultLanguage = lang.substr(0, 2);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a translated value from a JSON by providing a key. Additionally,\r\n     * the target language can be specified as the second parameter.\r\n     *\r\n     * @param {String} key\r\n     * @param {String} toLanguage\r\n     * @return {String}\r\n     */\r\n    _getValueFromJSON(key, toLanguage) {\r\n        const json = this.languages.get(toLanguage);\r\n\r\n        return key.split('.').reduce((obj, i) => (obj ? obj[i] : null), json);\r\n    }\r\n\r\n    /**\r\n     * Replace a given DOM nodes' attribute values (by default innerHTML) with\r\n     * the translated text.\r\n     *\r\n     * @param {HTMLElement} element\r\n     * @param {String} toLanguage\r\n     */\r\n    _replace(element, toLanguage) {\r\n        const keys = element.getAttribute('data-i18n')?.split(/\\s/g);\r\n        const attributes = element?.getAttribute('data-i18n-attr')?.split(/\\s/g);\r\n\r\n        if (attributes && keys.length != attributes.length) {\r\n            this.debug('MISMATCHING_ATTRIBUTES', keys, attributes, element);\r\n        }\r\n\r\n        keys.forEach((key, index) => {\r\n            const text = this._getValueFromJSON(key, toLanguage);\r\n            const attr = attributes ? attributes[index] : 'innerHTML';\r\n\r\n            if (text) {\r\n                if (attr == 'innerHTML') {\r\n                    element[attr] = text;\r\n                } else {\r\n                    element.setAttribute(attr, text);\r\n                }\r\n            } else {\r\n                this.debug('TRANSLATION_NOT_FOUND', key, toLanguage);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Translate all DOM nodes that match the given selector into the\r\n     * specified target language.\r\n     *\r\n     * @param {String} toLanguage The target language\r\n     */\r\n    translatePageTo(toLanguage = this.config.defaultLanguage) {\r\n        if (this._env == 'node') {\r\n            this.debug('INVALID_ENVIRONMENT');\r\n            return;\r\n        }\r\n\r\n        if (typeof toLanguage != 'string') {\r\n            this.debug('INVALID_PARAM_LANGUAGE', toLanguage);\r\n            return;\r\n        }\r\n\r\n        if (toLanguage.length == 0) {\r\n            this.debug('EMPTY_PARAM_LANGUAGE');\r\n            return;\r\n        }\r\n\r\n        if (!this.languages.has(toLanguage)) {\r\n            this.debug('NO_LANGUAGE_REGISTERED', toLanguage);\r\n            return;\r\n        }\r\n\r\n        const elements =\r\n            typeof this.config.selector == 'string'\r\n                ? Array.from(document.querySelectorAll(this.config.selector))\r\n                : this.config.selector;\r\n\r\n        if (elements.length && elements.length > 0) {\r\n            elements.forEach((element) => this._replace(element, toLanguage));\r\n        } else if (elements.length == undefined) {\r\n            this._replace(elements, toLanguage);\r\n        }\r\n\r\n        this._currentLanguage = toLanguage;\r\n        document.documentElement.lang = toLanguage;\r\n\r\n        if (this.config.persist) {\r\n            localStorage.setItem(this.config.persistKey, toLanguage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate a given key into the specified language if it exists\r\n     * in the translation file. If not or if the language hasn't been added yet,\r\n     * the return value is `null`.\r\n     *\r\n     * @param {String} key The key from the language file to translate\r\n     * @param {String} toLanguage The target language\r\n     * @return {(String|null)}\r\n     */\r\n    translateForKey(key, toLanguage = this.config.defaultLanguage) {\r\n        if (typeof key != 'string') {\r\n            this.debug('INVALID_PARAM_KEY', key);\r\n            return null;\r\n        }\r\n\r\n        if (!this.languages.has(toLanguage)) {\r\n            this.debug('NO_LANGUAGE_REGISTERED', toLanguage);\r\n            return null;\r\n        }\r\n\r\n        const text = this._getValueFromJSON(key, toLanguage);\r\n\r\n        if (!text) {\r\n            this.debug('TRANSLATION_NOT_FOUND', key, toLanguage);\r\n            return null;\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    /**\r\n     * Add a translation resource to the Translator object. The language\r\n     * can then be used to translate single keys or the entire page.\r\n     *\r\n     * @param {String} language The target language to add\r\n     * @param {String} json The language resource file as JSON\r\n     * @return {Object} Translator instance\r\n     */\r\n    add(language, json) {\r\n        if (typeof language != 'string') {\r\n            this.debug('INVALID_PARAM_LANGUAGE', language);\r\n            return this;\r\n        }\r\n\r\n        if (language.length == 0) {\r\n            this.debug('EMPTY_PARAM_LANGUAGE');\r\n            return this;\r\n        }\r\n\r\n        if (Array.isArray(json) || typeof json != 'object') {\r\n            this.debug('INVALID_PARAM_JSON', json);\r\n            return this;\r\n        }\r\n\r\n        if (Object.keys(json).length == 0) {\r\n            this.debug('EMPTY_PARAM_JSON');\r\n            return this;\r\n        }\r\n\r\n        this.languages.set(language, json);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove a translation resource from the Translator object. The language\r\n     * won't be available afterwards.\r\n     *\r\n     * @param {String} language The target language to remove\r\n     * @return {Object} Translator instance\r\n     */\r\n    remove(language) {\r\n        if (typeof language != 'string') {\r\n            this.debug('INVALID_PARAM_LANGUAGE', language);\r\n            return this;\r\n        }\r\n\r\n        if (language.length == 0) {\r\n            this.debug('EMPTY_PARAM_LANGUAGE');\r\n            return this;\r\n        }\r\n\r\n        this.languages.delete(language);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Fetch a translation resource from the web server. It can either fetch\r\n     * a single resource or an array of resources. After all resources are fetched,\r\n     * return a Promise.\r\n     * If the optional, second parameter is set to true, the fetched translations\r\n     * will be added to the Translator object.\r\n     *\r\n     * @param {String|Array} sources The files to fetch\r\n     * @param {Boolean} save Save the translation to the Translator object\r\n     * @return {(Promise|null)}\r\n     */\r\n    fetch(sources, save = true) {\r\n        if (!Array.isArray(sources) && typeof sources != 'string') {\r\n            this.debug('INVALID_PARAMETER_SOURCES', sources);\r\n            return null;\r\n        }\r\n\r\n        if (!Array.isArray(sources)) {\r\n            sources = [sources];\r\n        }\r\n\r\n        const urls = sources.map((source) => {\r\n            const filename = source.replace(/\\.json$/, '').replace(/^\\//, '');\r\n            const path = this.config.filesLocation.replace(/\\/$/, '');\r\n\r\n            return `${path}/${filename}.json`;\r\n        });\r\n\r\n        if (this._env == 'browser') {\r\n            return Promise.all(urls.map((url) => fetch(url)))\r\n                .then((responses) =>\r\n                    Promise.all(\r\n                        responses.map((response) => {\r\n                            if (response.ok) {\r\n                                return response.json();\r\n                            }\r\n\r\n                            this.debug('FETCH_ERROR', response);\r\n                        })\r\n                    )\r\n                )\r\n                .then((languageFiles) => {\r\n                    // If a file could not be fetched, it will be `undefined` and filtered out.\r\n                    languageFiles = languageFiles.filter((file) => file);\r\n\r\n                    if (save) {\r\n                        languageFiles.forEach((file, index) => {\r\n                            this.add(sources[index], file);\r\n                        });\r\n                    }\r\n\r\n                    return languageFiles.length > 1 ? languageFiles : languageFiles[0];\r\n                });\r\n        } else if (this._env == 'node') {\r\n            // return new Promise((resolve) => {\r\n            //     const languageFiles = [];\r\n\r\n            //     urls.forEach((url, index) => {\r\n            //         try {\r\n            //             const json = JSON.parse(\r\n            //                 require('fs').readFileSync(process.cwd() + url, 'utf-8')\r\n            //             );\r\n\r\n            //             if (save) {\r\n            //                 this.add(sources[index], json);\r\n            //             }\r\n\r\n            //             languageFiles.push(json);\r\n            //         } catch (err) {\r\n            //             this.debug('MODULE_NOT_FOUND', err.message);\r\n            //         }\r\n            //     });\r\n\r\n            //     resolve(languageFiles.length > 1 ? languageFiles : languageFiles[0]);\r\n            // });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the default language of the translator instance.\r\n     *\r\n     * @param {String} language\r\n     * @return {void}\r\n     */\r\n    setDefaultLanguage(language) {\r\n        if (typeof language != 'string') {\r\n            this.debug('INVALID_PARAM_LANGUAGE', language);\r\n            return;\r\n        }\r\n\r\n        if (language.length == 0) {\r\n            this.debug('EMPTY_PARAM_LANGUAGE');\r\n            return;\r\n        }\r\n\r\n        if (!this.languages.has(language)) {\r\n            this.debug('NO_LANGUAGE_REGISTERED', language);\r\n            return null;\r\n        }\r\n\r\n        this.config.defaultLanguage = language;\r\n    }\r\n\r\n    /**\r\n     * Return the currently selected language.\r\n     *\r\n     * @return {String}\r\n     */\r\n    get currentLanguage() {\r\n        return this._currentLanguage || this.config.defaultLanguage;\r\n    }\r\n\r\n    /**\r\n     * Returns the current default language;\r\n     *\r\n     * @return {String}\r\n     */\r\n    get defaultLanguage() {\r\n        return this.config.defaultLanguage;\r\n    }\r\n\r\n    /**\r\n     * Return the default config object whose keys can be overriden\r\n     * by the user's config passed to the constructor.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    static get defaultConfig() {\r\n        return {\r\n            defaultLanguage: 'en',\r\n            detectLanguage: true,\r\n            selector: '[data-i18n]',\r\n            debug: false,\r\n            registerGlobally: '__',\r\n            persist: false,\r\n            persistKey: 'preferred_language',\r\n            filesLocation: '/i18n',\r\n        };\r\n    }\r\n}\r\n\r\nexport default Translator;","//import * as GrabToPan from './grab-to-pan.js';\r\n\r\nconst isNotIEorIsIE10plus = !document.documentMode || document.documentMode > 9;\r\nconst chrome2 = window.chrome;\r\nconst isChrome15OrOpera15plus = chrome2 && (chrome2.webstore || chrome2.app);\r\nconst isSafari6plus = /Apple/.test(navigator.vendor) && /Version\\/([6-9]\\d*|[1-5]\\d+)/.test(navigator.userAgent);\r\n\r\nfunction isLeftMouseReleased(event) {\r\n        if (\"buttons\" in event && isNotIEorIsIE10plus) {\r\n                return !(event.buttons & 1);\r\n        }\r\n\r\n        if (isChrome15OrOpera15plus || isSafari6plus) {\r\n                return event.which === 0;\r\n        }\r\n\r\n        return false;\r\n}\r\n                \r\nlet matchesSelector;\r\n[\"webkitM\", \"mozM\", \"msM\", \"oM\", \"m\"].some(function (prefix) {\r\n        let name = prefix + \"atches\";\r\n\r\n        if (name in document.documentElement) {\r\n                matchesSelector = name;\r\n        }\r\n\r\n        name += \"Selector\";\r\n\r\n        if (name in document.documentElement) {\r\n                matchesSelector = name;\r\n        }\r\n\r\n        return matchesSelector;\r\n});\r\n\r\nconst CursorTool = {\r\n        SELECT: 0,\r\n        HAND: 1,\r\n        ZOOM: 2\r\n};\r\n\r\nexport class PDFCursorTools {\r\n        constructor({\r\n                container,\r\n                eventBus,\r\n                cursorToolOnLoad = 1\r\n        }) {\r\n                this.container = container;\r\n                this.eventBus = eventBus;\r\n                this.active = 0;\r\n                this.activeBeforePresentationMode = null;\r\n                this.handTool = new GrabToPan({\r\n                        element: this.container\r\n                });\r\n\r\n                this._addEventListeners();\r\n\r\n                Promise.resolve().then(() => {\r\n                        this.switchTool(cursorToolOnLoad);\r\n                });\r\n        }\r\n\r\n        get activeTool() {\r\n                return this.active;\r\n        }\r\n\r\n        switchTool(tool) {\r\n                if (this.activeBeforePresentationMode !== null) {\r\n                        return;\r\n                }\r\n\r\n                if (tool === this.active) {\r\n                        return;\r\n                }\r\n\r\n                const disableActiveTool = () => {\r\n                        switch (this.active) {\r\n                                case CursorTool.SELECT:\r\n                                        break;\r\n\r\n                                case CursorTool.HAND:\r\n                                        this.handTool.deactivate();\r\n                                        break;\r\n\r\n                                case CursorTool.ZOOM:\r\n                                        break;\r\n                        }\r\n                };\r\n\r\n                switch (tool) {\r\n                        case CursorTool.SELECT:\r\n                                disableActiveTool();\r\n                                break;\r\n\r\n                        case CursorTool.HAND:\r\n                                disableActiveTool();\r\n                                this.handTool.activate();\r\n                                break;\r\n\r\n                        case CursorTool.ZOOM:\r\n                                break;\r\n                        default:\r\n                                console.error(`switchTool: \"${tool}\" is an unsupported value.`);\r\n                                return;\r\n                }\r\n\r\n                this.active = tool;\r\n\r\n                this._dispatchEvent();\r\n        }\r\n\r\n        _dispatchEvent() {\r\n                this.eventBus.dispatch(\"cursortoolchanged\", {\r\n                        source: this,\r\n                        tool: this.active\r\n                });\r\n        }\r\n\r\n        _addEventListeners() {\r\n                this.eventBus._on(\"switchcursortool\", evt => {\r\n                        this.switchTool(evt.tool);\r\n                });\r\n\r\n                this.eventBus._on(\"presentationmodechanged\", evt => {\r\n                        if (evt.switchInProgress) {\r\n                                return;\r\n                        }\r\n\r\n                        let previouslyActive;\r\n\r\n                        if (evt.active) {\r\n                                previouslyActive = this.active;\r\n                                this.switchTool(CursorTool.SELECT);\r\n                                this.activeBeforePresentationMode = previouslyActive;\r\n                        } else {\r\n                                previouslyActive = this.activeBeforePresentationMode;\r\n                                this.activeBeforePresentationMode = null;\r\n                                this.switchTool(previouslyActive);\r\n                        }\r\n                });\r\n        }\r\n\r\n}","/*!\r\n *\r\n * The MIT License (MIT)\r\n *\r\n * Copyright © 2021 Taufik Nurrohman\r\n *\r\n * <https://github.com/taufik-nurrohman/color-picker>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the “Software”), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.CP = factory());\r\n})(this, function () {\r\n    'use strict';\r\n    var isArray = function isArray(x) {\r\n        return Array.isArray(x);\r\n    };\r\n    var isDefined = function isDefined(x) {\r\n        return 'undefined' !== typeof x;\r\n    };\r\n    var isFunction = function isFunction(x) {\r\n        return 'function' === typeof x;\r\n    };\r\n    var isInstance = function isInstance(x, of) {\r\n        return x && isSet(of) && x instanceof of;\r\n    };\r\n    var isNull = function isNull(x) {\r\n        return null === x;\r\n    };\r\n    var isNumber = function isNumber(x) {\r\n        return 'number' === typeof x;\r\n    };\r\n    var isNumeric = function isNumeric(x) {\r\n        return /^-?(?:\\d*.)?\\d+$/.test(x + \"\");\r\n    };\r\n    var isObject = function isObject(x, isPlain) {\r\n        if (isPlain === void 0) {\r\n            isPlain = true;\r\n        }\r\n        if ('object' !== typeof x) {\r\n            return false;\r\n        }\r\n        return isPlain ? isInstance(x, Object) : true;\r\n    };\r\n    var isSet = function isSet(x) {\r\n        return isDefined(x) && !isNull(x);\r\n    };\r\n    var isString = function isString(x) {\r\n        return 'string' === typeof x;\r\n    };\r\n    var fromJSON = function fromJSON(x) {\r\n        var value = null;\r\n        try {\r\n            value = JSON.parse(x);\r\n        } catch (e) { }\r\n        return value;\r\n    };\r\n    var fromStates = function fromStates() {\r\n        for (var _len = arguments.length, lot = new Array(_len), _key = 0; _key < _len; _key++) {\r\n            lot[_key] = arguments[_key];\r\n        }\r\n        return Object.assign.apply(Object, [{}].concat(lot));\r\n    };\r\n    var fromValue = function fromValue(x) {\r\n        if (isArray(x)) {\r\n            return x.map(function (v) {\r\n                return fromValue(x);\r\n            });\r\n        }\r\n        if (isObject(x)) {\r\n            for (var k in x) {\r\n                x[k] = fromValue(x[k]);\r\n            }\r\n            return x;\r\n        }\r\n        if (false === x) {\r\n            return 'false';\r\n        }\r\n        if (null === x) {\r\n            return 'null';\r\n        }\r\n        if (true === x) {\r\n            return 'true';\r\n        }\r\n        return \"\" + x;\r\n    };\r\n    var toCaseCamel = function toCaseCamel(x) {\r\n        return x.replace(/[-_.](\\w)/g, function (m0, m1) {\r\n            return toCaseUpper(m1);\r\n        });\r\n    };\r\n    var toCaseUpper = function toCaseUpper(x) {\r\n        return x.toUpperCase();\r\n    };\r\n    var toCount = function toCount(x) {\r\n        return x.length;\r\n    };\r\n    var toEdge = function toEdge(x, edges) {\r\n        if (isSet(edges[0]) && x < edges[0]) {\r\n            return edges[0];\r\n        }\r\n        if (isSet(edges[1]) && x > edges[1]) {\r\n            return edges[1];\r\n        }\r\n        return x;\r\n    };\r\n    var toJSON = function toJSON(x) {\r\n        return JSON.stringify(x);\r\n    };\r\n    var toNumber = function toNumber(x, base) {\r\n        if (base === void 0) {\r\n            base = 10;\r\n        }\r\n        return base ? parseInt(x, base) : parseFloat(x);\r\n    };\r\n    var toObjectCount = function toObjectCount(x) {\r\n        return toCount(toObjectKeys(x));\r\n    };\r\n    var toObjectKeys = function toObjectKeys(x) {\r\n        return Object.keys(x);\r\n    };\r\n    var toRound = function toRound(x) {\r\n        return isNumber(x) ? Math.round(x) : null;\r\n    };\r\n    var toString = function toString(x, base) {\r\n        if (base === void 0) {\r\n            base = 10;\r\n        }\r\n        return isNumber(x) ? x.toString(base) : \"\" + x;\r\n    };\r\n    var toValue = function toValue(x) {\r\n        if (isArray(x)) {\r\n            return x.map(function (v) {\r\n                return toValue(v);\r\n            });\r\n        }\r\n        if (isNumeric(x)) {\r\n            return toNumber(x);\r\n        }\r\n        if (isObject(x)) {\r\n            for (var k in x) {\r\n                x[k] = toValue(x[k]);\r\n            }\r\n            return x;\r\n        }\r\n        if ('false' === x) {\r\n            return false;\r\n        }\r\n        if ('null' === x) {\r\n            return null;\r\n        }\r\n        if ('true' === x) {\r\n            return true;\r\n        }\r\n        return x;\r\n    };\r\n    var D = document;\r\n    var W = window;\r\n    var B = D.body;\r\n    var R = D.documentElement;\r\n    var getAttribute = function getAttribute(node, attribute, parseValue) {\r\n        if (parseValue === void 0) {\r\n            parseValue = true;\r\n        }\r\n        if (!hasAttribute(node, attribute)) {\r\n            return null;\r\n        }\r\n        var value = node.getAttribute(attribute);\r\n        return parseValue ? toValue(value) : value;\r\n    };\r\n    var getDatum = function getDatum(node, datum, parseValue) {\r\n        if (parseValue === void 0) {\r\n            parseValue = true;\r\n        }\r\n        var value = getAttribute(node, 'data-' + datum, parseValue),\r\n            v = (value + \"\").trim();\r\n        if (parseValue && v && ('[' === v[0] && ']' === v.slice(-1) || '{' === v[0] && '}' === v.slice(-1)) && null !== (v = fromJSON(value))) {\r\n            return v;\r\n        }\r\n        return value;\r\n    };\r\n    var getParent = function getParent(node) {\r\n        return node.parentNode || null;\r\n    };\r\n    var getState = function getState(node, state) {\r\n        return hasState(node, state) && node[state] || null;\r\n    };\r\n    var getText = function getText(node, trim) {\r\n        if (trim === void 0) {\r\n            trim = true;\r\n        }\r\n        var state = 'textContent';\r\n        if (!hasState(node, state)) {\r\n            return false;\r\n        }\r\n        var content = node[state];\r\n        content = trim ? content.trim() : content;\r\n        return \"\" !== content ? content : null;\r\n    };\r\n    var hasAttribute = function hasAttribute(node, attribute) {\r\n        return node.hasAttribute(attribute);\r\n    };\r\n    var hasState = function hasState(node, state) {\r\n        return state in node;\r\n    };\r\n    var isWindow = function isWindow(node) {\r\n        return node === W;\r\n    };\r\n    var letAttribute = function letAttribute(node, attribute) {\r\n        return node.removeAttribute(attribute), node;\r\n    };\r\n    var letElement = function letElement(node) {\r\n        var parent = getParent(node);\r\n        return node.remove(), parent;\r\n    };\r\n    var setAttribute = function setAttribute(node, attribute, value) {\r\n        if (true === value) {\r\n            value = attribute;\r\n        }\r\n        return node.setAttribute(attribute, fromValue(value)), node;\r\n    };\r\n    var setAttributes = function setAttributes(node, attributes) {\r\n        var value;\r\n        for (var attribute in attributes) {\r\n            value = attributes[attribute];\r\n            if (value || \"\" === value || 0 === value) {\r\n                setAttribute(node, attribute, value);\r\n            } else {\r\n                letAttribute(node, attribute);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    var setChildLast = function setChildLast(parent, node) {\r\n        return parent.appendChild(node), node;\r\n    };\r\n    var setDatum = function setDatum(node, datum, value) {\r\n        if (isArray(value) || isObject(value)) {\r\n            value = toJSON(value);\r\n        }\r\n        return setAttribute(node, 'data-' + datum, value);\r\n    };\r\n    var setElement = function setElement(node, content, attributes) {\r\n        node = isString(node) ? D.createElement(node) : node;\r\n        if (isObject(content)) {\r\n            attributes = content;\r\n            content = false;\r\n        }\r\n        if (isString(content)) {\r\n            setHTML(node, content);\r\n        }\r\n        if (isObject(attributes)) {\r\n            setAttributes(node, attributes);\r\n        }\r\n        return node;\r\n    };\r\n    var setHTML = function setHTML(node, content, trim) {\r\n        if (trim === void 0) {\r\n            trim = true;\r\n        }\r\n        if (null === content) {\r\n            return node;\r\n        }\r\n        var state = 'innerHTML';\r\n        return hasState(node, state) && (node[state] = trim ? content.trim() : content), node;\r\n    };\r\n    var setState = function setState(node, key, value) {\r\n        return node[key] = value, node;\r\n    };\r\n    var setStyle = function setStyle(node, style, value) {\r\n        if (isNumber(value)) {\r\n            value += 'px';\r\n        }\r\n        return node.style[toCaseCamel(style)] = fromValue(value), node;\r\n    };\r\n    var setText = function setText(node, content, trim) {\r\n        if (trim === void 0) {\r\n            trim = true;\r\n        }\r\n        if (null === content) {\r\n            return node;\r\n        }\r\n        var state = 'textContent';\r\n        return hasState(node, state) && (node[state] = trim ? content.trim() : content), node;\r\n    };\r\n    var offEvent = function offEvent(name, node, then) {\r\n        node.removeEventListener(name, then);\r\n    };\r\n    var offEventDefault = function offEventDefault(e) {\r\n        return e;// && e.preventDefault();\r\n    };\r\n    var offEvents = function offEvents(names, node, then) {\r\n        names.forEach(function (name) {\r\n            return offEvent(name, node, then);\r\n        });\r\n    };\r\n    var onEvent = function onEvent(name, node, then, options) {\r\n        if (options === void 0 || options === false) {\r\n            var supportsPassive = false;\r\n            try {\r\n                var opts = Object.defineProperty({}, 'passive', {\r\n                    get: function () {\r\n                        supportsPassive = true;\r\n                    }\r\n                });\r\n                window.addEventListener(\"testPassive\", null, opts);\r\n                window.removeEventListener(\"testPassive\", null, opts);\r\n            } catch (e) { }\r\n            options = supportsPassive ? { passive: true } : false;\r\n        }\r\n        \r\n        node.addEventListener(name, then, options);\r\n    };\r\n    var onEvents = function onEvents(names, node, then, options) {\r\n        if (options === void 0) {\r\n            options = false;\r\n        }\r\n        names.forEach(function (name) {\r\n            return onEvent(name, node, then, options);\r\n        });\r\n    };\r\n\r\n    function hook($) {\r\n        var hooks = {};\r\n\r\n        function fire(name, data) {\r\n            if (!isSet(hooks[name])) {\r\n                return $;\r\n            }\r\n            hooks[name].forEach(function (then) {\r\n                return then.apply($, data);\r\n            });\r\n            return $;\r\n        }\r\n\r\n        function off(name, then) {\r\n            if (!isSet(name)) {\r\n                return hooks = {}, $;\r\n            }\r\n            if (isSet(hooks[name])) {\r\n                if (isSet(then)) {\r\n                    for (var i = 0, _j = hooks[name].length; i < _j; ++i) {\r\n                        if (then === hooks[name][i]) {\r\n                            hooks[name].splice(i, 1);\r\n                            break;\r\n                        }\r\n                    } // Clean-up empty hook(s)\r\n                    if (0 === j) {\r\n                        delete hooks[name];\r\n                    }\r\n                } else {\r\n                    delete hooks[name];\r\n                }\r\n            }\r\n            return $;\r\n        }\r\n\r\n        function on(name, then) {\r\n            if (!isSet(hooks[name])) {\r\n                hooks[name] = [];\r\n            }\r\n            if (isSet(then)) {\r\n                hooks[name].push(then);\r\n            }\r\n            return $;\r\n        }\r\n        $.hooks = hooks;\r\n        $.fire = fire;\r\n        $.off = off;\r\n        $.on = on;\r\n        return $;\r\n    }\r\n    var getAxis = function getAxis(event, node) {\r\n        var touches = event.touches,\r\n            x = touches ? touches[0].clientX : event.clientX,\r\n            y = touches ? touches[0].clientY : event.clientY;\r\n        if (node) {\r\n            var rect = getRect(node);\r\n            return [x - rect[0], y - rect[1], rect[0], rect[1]];\r\n        }\r\n        return [x, y];\r\n    };\r\n    var getRect = function getRect(node) {\r\n        var h, rect, w, x, y, X, Y;\r\n        if (isWindow(node)) {\r\n            x = node.pageXOffset || R.scrollLeft || B.scrollLeft;\r\n            y = node.pageYOffset || R.scrollTop || B.scrollTop;\r\n            w = node.innerWidth;\r\n            h = node.innerHeight;\r\n        } else {\r\n            rect = node.getBoundingClientRect();\r\n            x = rect.left;\r\n            y = rect.top;\r\n            w = rect.width;\r\n            h = rect.height;\r\n            X = rect.right;\r\n            Y = rect.bottom;\r\n        }\r\n        return [x, y, w, h, X, Y];\r\n    };\r\n    let name = 'CP',\r\n        delay = W.setTimeout,\r\n        hex = 'HEX';\r\n\r\n    function getClosest(a, b) {\r\n        if (a === b) {\r\n            return a;\r\n        }\r\n        while ((a = a.parentElement) && a !== b);\r\n        return a;\r\n    } // Convert cursor position to RGBA\r\n    function P2RGB(a) {\r\n        let h = +a[0],\r\n            s = +a[1],\r\n            v = +a[2],\r\n            r,\r\n            g,\r\n            b,\r\n            i,\r\n            f,\r\n            p,\r\n            q,\r\n            t;\r\n        i = Math.floor(h * 6);\r\n        f = h * 6 - i;\r\n        p = v * (1 - s);\r\n        q = v * (1 - f * s);\r\n        t = v * (1 - (1 - f) * s);\r\n        i = i || 0;\r\n        q = q || 0;\r\n        t = t || 0;\r\n        switch (i % 6) {\r\n            case 0:\r\n                r = v, g = t, b = p;\r\n                break;\r\n            case 1:\r\n                r = q, g = v, b = p;\r\n                break;\r\n            case 2:\r\n                r = p, g = v, b = t;\r\n                break;\r\n            case 3:\r\n                r = p, g = q, b = v;\r\n                break;\r\n            case 4:\r\n                r = t, g = p, b = v;\r\n                break;\r\n            case 5:\r\n                r = v, g = p, b = q;\r\n                break;\r\n        }\r\n        return [toRound(r * 255), toRound(g * 255), toRound(b * 255), isSet(a[3]) ? +a[3] : 1];\r\n    } // Convert RGBA to HSVA\r\n    function RGB2HSV(a) {\r\n        let r = +a[0] / 255,\r\n            g = +a[1] / 255,\r\n            b = +a[2] / 255,\r\n            max = Math.max(r, g, b),\r\n            min = Math.min(r, g, b),\r\n            h,\r\n            s,\r\n            v = max,\r\n            d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n        if (max === min) {\r\n            h = 0; // Achromatic\r\n        } else {\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / d + (g < b ? 6 : 0);\r\n                    break;\r\n                case g:\r\n                    h = (b - r) / d + 2;\r\n                    break;\r\n                case b:\r\n                    h = (r - g) / d + 4;\r\n                    break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        return [h, s, v, isSet(a[3]) ? +a[3] : 1];\r\n    }\r\n    const EVENTS_DOWN = ['touchstart', 'mousedown'];\r\n    const EVENTS_MOVE = ['touchmove', 'mousemove'];\r\n    const EVENTS_RESIZE = ['orientationchange', 'resize'];\r\n    const EVENTS_UP = ['touchend', 'mouseup'];\r\n\r\n    function CP(source, state = {}) {\r\n        if (!D) {\r\n            D = document;\r\n        }\r\n        if (!W) {\r\n            W = window;\r\n        }\r\n        if (!B) {\r\n            B = D.body;\r\n        }\r\n        if (!R) {\r\n            R = D.documentElement;\r\n        }\r\n        if (!source) return;\r\n        const $ = this; // Return new instance if `CP` was called without the `new` operator\r\n        if (!isInstance($, CP)) {\r\n            return new CP(source, state);\r\n        } // Already instantiated, skip!\r\n        if (source[name]) {\r\n            return;\r\n        }\r\n        let {\r\n            fire,\r\n            hooks\r\n        } = hook($);\r\n        $.state = state = fromStates(CP.state, isString(state) ? {\r\n            color: state\r\n        } : state || {});\r\n        $.source = source;\r\n        $.visible = false; // Store current instance to `CP.instances`\r\n        CP.instances[source.id || source.name || toObjectCount(CP.instances)] = $; // Mark current DOM as active color picker to prevent duplicate instance\r\n        source[name] = 1;\r\n\r\n        function theValue(from) {\r\n            let to = CP[isFunction(CP[state.color]) ? state.color : hex],\r\n                theColor; // Get value from `data-color` attribute\r\n            if (theColor = getDatum(source, 'color')) {\r\n                if (isSet(from)) {\r\n                    return setDatum(source, 'color', to(from));\r\n                }\r\n                return to(theColor);\r\n            } // Get value from `value` attribute\r\n            if (theColor = getState(source, 'value')) {\r\n                if (isSet(from)) {\r\n                    return setState(source, 'value', to(from));\r\n                }\r\n                return to(theColor);\r\n            } // Get value from content\r\n            if (theColor = getText(source)) {\r\n                if (isSet(from)) {\r\n                    return setText(source, to(from));\r\n                }\r\n                return to(theColor);\r\n            }\r\n            if (isSet(from)) {\r\n                return; // Do nothing\r\n            }\r\n            return [0, 0, 0, 1]; // Default to black\r\n        }\r\n        let className = state['class'],\r\n            doEnter,\r\n            doExit,\r\n            doFit,\r\n            doResize,\r\n            theColor = theValue(),\r\n            theData = RGB2HSV(theColor),\r\n            self = setElement('div', {\r\n                'class': className\r\n            }),\r\n            C = setElement('div'),\r\n            SV = setElement('div', {\r\n                'class': className + ':sv'\r\n            }),\r\n            H = setElement('div', {\r\n                'class': className + ':h'\r\n            }),\r\n            A = setElement('div', {\r\n                'class': className + ':a'\r\n            }),\r\n            SVColor = setElement('div'),\r\n            SVSaturation = setElement('div'),\r\n            SVValue = setElement('div'),\r\n            SVCursor = setElement('i'),\r\n            HColor = setElement('div'),\r\n            HCursor = setElement('i'),\r\n            AColor = setElement('div'),\r\n            APattern = setElement('div'),\r\n            ACursor = setElement('i'),\r\n            SVStarting = 0,\r\n            HStarting = 0,\r\n            AStarting = 0,\r\n            SVDragging = 0,\r\n            HDragging = 0,\r\n            ADragging = 0;\r\n        setChildLast(self, C);\r\n        setChildLast(C, SV);\r\n        setChildLast(C, H);\r\n        setChildLast(C, A);\r\n        setChildLast(SV, SVColor);\r\n        setChildLast(SV, SVSaturation);\r\n        setChildLast(SV, SVValue);\r\n        setChildLast(SV, SVCursor);\r\n        setChildLast(H, HColor);\r\n        setChildLast(H, HCursor);\r\n        setChildLast(A, AColor);\r\n        setChildLast(A, APattern);\r\n        setChildLast(A, ACursor);\r\n\r\n        function doApply(isFirst, toParent) {\r\n            // Refresh data\r\n            theData = RGB2HSV(theColor = theValue());\r\n            if (!isFirst) {\r\n                setChildLast(toParent || state.parent || B, self);\r\n                $.visible = true;\r\n            }\r\n            doEnter = toParent => {\r\n                return doApply(0, toParent), fire('enter', theColor), $;\r\n            };\r\n            doExit = () => {\r\n                if (getParent(self)) {\r\n                    letElement(self);\r\n                    $.current = null;\r\n                    $.visible = false;\r\n                }\r\n                offEvents(EVENTS_DOWN, SV, doDownSV);\r\n                offEvents(EVENTS_DOWN, H, doDownH);\r\n                offEvents(EVENTS_DOWN, A, doDownA);\r\n                offEvents(EVENTS_MOVE, D, doMove);\r\n                offEvents(EVENTS_UP, D, doStop);\r\n                offEvents(EVENTS_RESIZE, W, doResize);\r\n                return fire('exit', theColor);\r\n            };\r\n            doFit = to => {\r\n                let rootRect = getRect(R),\r\n                    sourceRect = getRect(source),\r\n                    winRect = getRect(W),\r\n                    scrollBarHeight = winRect[3] - R.clientHeight,\r\n                    // Horizontal scroll bar\r\n                    scrollBarWidth = winRect[2] - rootRect[2],\r\n                    // Vertical scroll bar\r\n                    selfRect = getRect(self),\r\n                    selfHeight = selfRect[3],\r\n                    selfWidth = selfRect[2],\r\n                    selfLeft = sourceRect[0] + winRect[0],\r\n                    selfTop = sourceRect[1] + winRect[1] + sourceRect[3]; // Drop!\r\n                if (isObject(to)) {\r\n                    isSet(to[0]) && (selfLeft = to[0]);\r\n                    isSet(to[1]) && (selfTop = to[1]);\r\n                } else {\r\n                    let minX = winRect[0],\r\n                        minY = winRect[1],\r\n                        maxX = winRect[0] + winRect[2] - selfWidth - scrollBarWidth,\r\n                        maxY = winRect[1] + winRect[3] - selfHeight - scrollBarHeight;\r\n                    selfLeft = toEdge(selfLeft, [minX, maxX]) >> 0;\r\n                    selfTop = toEdge(selfTop, [minY, maxY]) >> 0;\r\n                }\r\n                setStyle(self, 'left', selfLeft);\r\n                setStyle(self, 'top', selfTop);\r\n                return fire('fit', theColor);\r\n            };\r\n            doResize = () => doFit();\r\n\r\n            function doDownA(e) {\r\n                $.current = A;\r\n                AStarting = ADragging = 1;\r\n                doMove(e);\r\n                offEventDefault(e);\r\n            }\r\n\r\n            function doDownH(e) {\r\n                $.current = H;\r\n                HStarting = HDragging = 1;\r\n                doMove(e);\r\n                offEventDefault(e);\r\n            }\r\n\r\n            function doDownSV(e) {\r\n                $.current = SV;\r\n                SVStarting = SVDragging = 1;\r\n                doMove(e);\r\n                offEventDefault(e);\r\n            }\r\n\r\n            function doMove(e) {\r\n                SVDragging && doSetSVCursor(e);\r\n                HDragging && doSetHCursor(e);\r\n                ADragging && doSetACursor(e);\r\n                theColor = P2RGB(theData);\r\n                if (SVDragging || HDragging || ADragging) {\r\n                    fire(SVStarting || HStarting || AStarting ? 'start' : 'drag', theColor);\r\n                    fire('change', theColor);\r\n                }\r\n                SVStarting = HStarting = AStarting = 0;\r\n            }\r\n\r\n            function doSetColor() {\r\n                doSetCursor(theData);\r\n                let a = P2RGB(theData),\r\n                    b = P2RGB([theData[0], 1, 1]);\r\n                setStyle(SVColor, 'background-color', 'rgb(' + b[0] + ',' + b[1] + ',' + b[2] + ')');\r\n                setStyle(AColor, 'background-image', 'linear-gradient(rgb(' + a[0] + ',' + a[1] + ',' + a[2] + '),transparent)');\r\n            }\r\n\r\n            function doSetCursor(x) {\r\n                isSet(x[1]) && setStyle(SVCursor, 'right', SVWidth - SVWidthCursor / 2 - SVWidth * +x[1]);\r\n                isSet(x[2]) && setStyle(SVCursor, 'top', SVHeight - SVHeightCursor / 2 - SVHeight * +x[2]);\r\n                isSet(x[0]) && setStyle(HCursor, 'top', HHeight - HHeightCursor / 2 - HHeight * +x[0]);\r\n                isSet(x[3]) && setStyle(ACursor, 'top', AHeight - AHeightCursor / 2 - AHeight * +x[3]);\r\n            }\r\n\r\n            function doSetACursor(e) {\r\n                theData[3] = (AHeight - toEdge(getAxis(e, A)[1], [0, AHeight])) / AHeight;\r\n                doSetColor();\r\n            }\r\n\r\n            function doSetHCursor(e) {\r\n                theData[0] = (HHeight - toEdge(getAxis(e, H)[1], [0, HHeight])) / HHeight;\r\n                doSetColor();\r\n            }\r\n\r\n            function doSetSVCursor(e) {\r\n                let SVPoint = getAxis(e, SV),\r\n                    x = toEdge(SVPoint[0], [0, SVWidth]),\r\n                    y = toEdge(SVPoint[1], [0, SVHeight]);\r\n                theData[1] = 1 - (SVWidth - x) / SVWidth;\r\n                theData[2] = (SVHeight - y) / SVHeight;\r\n                doSetColor();\r\n            }\r\n\r\n            function doStop(e) {\r\n                theColor = P2RGB(theData);\r\n                let t = e.target,\r\n                    isSource = source === getClosest(t, source),\r\n                    isSelf = self === getClosest(t, self);\r\n                $.current = null;\r\n                if (!isSource && !isSelf) {\r\n                    if (hooks.blur) {\r\n                        fire('blur', theColor);\r\n                    } else {\r\n                        // Click outside the source or picker element to exit\r\n                        if (SVDragging || HDragging || ADragging);\r\n                        else {\r\n                            getParent(self) && doExit();\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (isSelf) {\r\n                        if (SVDragging || HDragging || ADragging) {\r\n                            fire('stop', theColor);\r\n                        }\r\n                    }\r\n                }\r\n                SVDragging = HDragging = ADragging = 0;\r\n            }\r\n            let SVRect = getRect(SV),\r\n                SVRectCursor = getRect(SVCursor),\r\n                HRect = getRect(H),\r\n                HRectCursor = getRect(HCursor),\r\n                ARect = getRect(A),\r\n                ARectCursor = getRect(ACursor),\r\n                SVHeight = SVRect[3],\r\n                SVHeightCursor = SVRectCursor[3],\r\n                SVWidth = SVRect[2],\r\n                SVWidthCursor = SVRectCursor[2],\r\n                HHeight = HRect[3],\r\n                HHeightCursor = HRectCursor[3],\r\n                AHeight = ARect[3],\r\n                AHeightCursor = ARectCursor[3];\r\n            if (isFirst) {\r\n                onEvents(EVENTS_DOWN, source, doClick);\r\n                delay(() => {\r\n                    fire('change', theColor);\r\n                }, 1);\r\n            } else {\r\n                onEvents(EVENTS_DOWN, SV, doDownSV);\r\n                onEvents(EVENTS_DOWN, H, doDownH);\r\n                onEvents(EVENTS_DOWN, A, doDownA);\r\n                onEvents(EVENTS_MOVE, D, doMove);\r\n                onEvents(EVENTS_UP, D, doStop);\r\n                onEvents(EVENTS_RESIZE, W, doResize);\r\n                doFit();\r\n            }\r\n            doSetColor();\r\n            $.color = (r, g, b, a) => CP[isFunction(CP[state.color]) ? state.color : hex]([r, g, b, a]);\r\n            $.current = null;\r\n            $.enter = doEnter;\r\n            $.exit = doExit;\r\n            $.fit = doFit;\r\n            $.get = () => theValue();\r\n            $.pop = () => {\r\n                if (!source[name]) {\r\n                    return $; // Already ejected\r\n                }\r\n                delete source[name];\r\n                offEvents(EVENTS_DOWN, source, doClick);\r\n                return doExit(), fire('pop', theColor);\r\n            };\r\n            $.set = (r, g, b, a) => {\r\n                theData = RGB2HSV([r, g, b, a]);\r\n                return doSetColor(), $;\r\n            };\r\n            $.self = self;\r\n            $.value = (r, g, b, a) => ($.set(r, g, b, a), fire('change', [r, g, b, a]));\r\n        }\r\n        doApply(1);\r\n\r\n        function doClick(e) {\r\n            if (hooks.focus) {\r\n                fire('focus', theColor);\r\n            } else {\r\n                let t = e.target,\r\n                    isSource = source === getClosest(t, source);\r\n                if (isSource) {\r\n                    !getParent(self) && doEnter(state.parent);\r\n                } else {\r\n                    doExit();\r\n                }\r\n            }\r\n        }\r\n        return $;\r\n    }\r\n    CP[hex] = x => {\r\n        if (isString(x)) {\r\n            let count = (x = x.trim()).length;\r\n            if ((4 === count || 7 === count) && '#' === x[0]) {\r\n                if (/^#([a-f\\d]{3}){1,2}$/i.test(x)) {\r\n                    if (4 === count) {\r\n                        return [toNumber(x[1] + x[1], 16), toNumber(x[2] + x[2], 16), toNumber(x[3] + x[3], 16), 1];\r\n                    }\r\n                    return [toNumber(x[1] + x[2], 16), toNumber(x[3] + x[4], 16), toNumber(x[5] + x[6], 16), 1];\r\n                }\r\n            } else if ((5 === count || 9 === count) && '#' === x[0]) {\r\n                if (/^#([a-f\\d]{3,4}){1,2}$/i.test(x)) {\r\n                    if (5 === count) {\r\n                        return [toNumber(x[1] + x[1], 16), toNumber(x[2] + x[2], 16), toNumber(x[3] + x[3], 16), toNumber(x[4] + x[4], 16) / 255];\r\n                    }\r\n                    return [toNumber(x[1] + x[2], 16), toNumber(x[3] + x[4], 16), toNumber(x[5] + x[6], 16), toNumber(x[7] + x[8], 16) / 255];\r\n                }\r\n            }\r\n            return [0, 0, 0, 1]; // Default to black\r\n        }\r\n        return '#' + ('000000' + toString(+x[2] | +x[1] << 8 | +x[0] << 16, 16)).slice(-6) + (isSet(x[3]) && x[3] < 1 ? toString(toRound(x[3] * 255) + 0x10000, 16).substr(-2) : \"\");\r\n    };\r\n    CP.instances = {};\r\n    CP.state = {\r\n        'class': 'color-picker',\r\n        'color': hex,\r\n        'parent': null\r\n    };\r\n    CP.version = '2.2.0';\r\n    return CP;\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\r\n/**\r\n * @module Template/CONSTANTS\r\n */\r\n\r\n\r\n/**\r\n * @description 프로젝트에서 사용하는 상수 모음\r\n *\r\n * @property {String} ASTERISK_ICON_CLASS {@link module:Template/CONSTANTS.CONSTANTS#ASTERISK_ICON_CLASS}\r\n * @property {Number} ASTREISK_DIV_HEIGHT {@link module:Template/CONSTANTS.CONSTANTS#ASTREISK_DIV_HEIGHT}\r\n * @property {String} CREATE_FIELD_ACTION  {@link module:Template/CONSTANTS.CONSTANTS#CREATE_FIELD_ACTION }\r\n * @property {String} DIVIDER_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#DIVIDER_CLASS }\r\n * @property {String} DRAG_BOX_NAME  {@link module:Template/CONSTANTS.CONSTANTS#DRAG_BOX_NAME }\r\n * @property {String} EDITOR_ATTR_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_CLASS }\r\n * @property {String} EDITOR_ATTR_CONTENTS_ROW_CLASS {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_CONTENTS_ROW_CLASS}\r\n * @property {String} EDITOR_ATTR_DATE_INPUT_CLASS {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_DATE_INPUT_CLASS}\r\n * @property {String} EDITOR_ATTR_INPUT_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_INPUT_CLASS }\r\n * @property {String} EDITOR_ATTR_INPUT_WRAP_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_INPUT_WRAP_CLASS }\r\n * @property {String} EDITOR_ATTR_KIND_CLASS {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_KIND_CLASS}\r\n * @property {String} EDITOR_ATTR_PANEL_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_PANEL_CLASS }\r\n * @property {String} EDITOR_ATTR_PANEL_ID  {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_PANEL_ID }\r\n * @property {String} EDITOR_ATTR_ROW_WRAP_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_ROW_WRAP_CLASS }\r\n * @property {String} EDITOR_ATTR_SELECT_CLASS {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_SELECT_CLASS}\r\n * @property {String} EDITOR_ATTR_TEXTAREA_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_TEXTAREA_CLASS }\r\n * @property {String} EDITOR_COMPONENT_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#EDITOR_COMPONENT_CLASS }\r\n * @property {String} FIELD_ATTR_CHANGE_ACTION  {@link module:Template/CONSTANTS.CONSTANTS#FIELD_ATTR_CHANGE_ACTION }\r\n * @property {String} FIELD_DELETE_BUTTON_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#FIELD_DELETE_BUTTON_CLASS }\r\n * @property {String} GROUP_ATTR_CHANGE_ACTION {@link module:Template/CONSTANTS.CONSTANTS#GROUP_ATTR_CHANGE_ACTION}\r\n * @property {String} GROUP_ATTR_OWNER_CHANGE_ACTION {@link module:Template/CONSTANTS.CONSTANTS#GROUP_ATTR_OWNER_CHANGE_ACTION}\r\n * @property {String} GROUP_REMOVE_ACTION {@link module:Template/CONSTANTS.CONSTANTS#GROUP_REMOVE_ACTION}\r\n * @property {String} HIDE_CLASS {@link module:Template/CONSTANTS.CONSTANTS#HIDE_CLASS}\r\n * @property {String} MAIN_GROUP_NAME {@link module:Template/CONSTANTS.CONSTANTS#MAIN_GROUP_NAME}\r\n * @property {Number} MINIMUM_DRAG_SIZE  {@link module:Template/CONSTANTS.CONSTANTS#MINIMUM_DRAG_SIZE }\r\n * @property {String} PREVIEW_READER_PDF_VIEWER {@link module:Template/CONSTANTS.CONSTANTS#PREVIEW_READER_PDF_VIEWER}\r\n * @property {String} PREVIEW_READER_PDF_VIEWER_CONTAINER  {@link module:Template/CONSTANTS.CONSTANTS#PREVIEW_READER_PDF_VIEWER_CONTAINER }\r\n * @property {String} READER_PAGE_FIELD_LAYER_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#READER_PAGE_FIELD_LAYER_CLASS }\r\n * @property {String} READER_PDF_VIEWER  {@link module:Template/CONSTANTS.CONSTANTS#READER_PDF_VIEWER }\r\n * @property {String} READER_PDF_VIEWER_CONTAINER  {@link module:Template/CONSTANTS.CONSTANTS#READER_PDF_VIEWER_CONTAINER }\r\n * @property {String} REMOVE_FIELD_ACTION {@link module:Template/CONSTANTS.CONSTANTS#REMOVE_FIELD_ACTION}\r\n * @property {String} SHOW_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#SHOW_CLASS }\r\n * @property {String} SWITCH_LABEL_CLASS {@link module:Template/CONSTANTS.CONSTANTS#SWITCH_LABEL_CLASS}\r\n * @property {String} SWITCH_LABEL_SLIDER_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#SWITCH_LABEL_SLIDER_CLASS }\r\n * @property {String} SWITCH_LABEL_SLIDER_ROUND_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#SWITCH_LABEL_SLIDER_ROUND_CLASS }\r\n * @property {String} TEMPLATE_LAYER_ASTERISK_NAME  {@link module:Template/CONSTANTS.CONSTANTS#TEMPLATE_LAYER_ASTERISK_NAME }\r\n * @property {String} TEMPLATE_LAYER_NAME {@link module:Template/CONSTANTS.CONSTANTS#TEMPLATE_LAYER_NAME}\r\n * @property {String} TEMPLATE_LAYER_RECT_NAME  {@link module:Template/CONSTANTS.CONSTANTS#TEMPLATE_LAYER_RECT_NAME }\r\n * @property {String} TEMPLATE_PDF_VIEWER  {@link module:Template/CONSTANTS.CONSTANTS#TEMPLATE_PDF_VIEWER }\r\n * @property {String} TEMPLATE_PDF_VIEWER_CONTAINER  {@link module:Template/CONSTANTS.CONSTANTS#TEMPLATE_PDF_VIEWER_CONTAINER }\r\n * @property {String} TITLE_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#TITLE_CLASS }\r\n * @property {String} TITLE_WRAP_CLASS  {@link module:Template/CONSTANTS.CONSTANTS#TITLE_WRAP_CLASS }\r\n * \r\n * @class\r\n * @FileName CONSTANTS.js\r\n * @since 2021.05.31\r\n */\r\nexport class CONSTANTS {\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#MAIN_GROUP_NAME\r\n     * @description (Static) Canvas의 메인 노드\r\n     */\r\n    static MAIN_GROUP_NAME = \"MainContainer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#TEMPLATE_PDF_VIEWER_CONTAINER\r\n     * @description (Static) Template모드에서의 PDF Viewer Container\r\n     */\r\n    static TEMPLATE_PDF_VIEWER_CONTAINER = \"TemplateViewerContainer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#TEMPLATE_PDF_VIEWER\r\n     * @description (Static) Template모드에서의 PDF Viewer\r\n     */\r\n    static TEMPLATE_PDF_VIEWER = \"TemplatePDFViewer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#READER_PDF_VIEWER_CONTAINER\r\n     * @description (Static) 서명모드에서의 PDF Viewer Container\r\n     */\r\n    static READER_PDF_VIEWER_CONTAINER = \"ReaderViewerContainer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#READER_PDF_VIEWER\r\n     * @description (Static) 서명모드에서의 PDF Viewer\r\n     */\r\n    static READER_PDF_VIEWER = \"ReaderPDFViewer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#PREVIEW_READER_PDF_VIEWER_CONTAINER\r\n     * @description (Static) 미리보기 모드에서의 PDF Viewer Container\r\n     */\r\n    static PREVIEW_READER_PDF_VIEWER_CONTAINER = \"PreviewReaderViewerContainer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#PREVIEW_READER_PDF_VIEWER\r\n     * @description (Static) 미리보기 모드에서의 PDF Viewer\r\n     */\r\n    static PREVIEW_READER_PDF_VIEWER = \"PreviewReaderPDFViewer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#TEMPLATE_LAYER_NAME\r\n     * @description (Static) Template 레이어 이름\r\n     */\r\n    static TEMPLATE_LAYER_NAME = \"TemplateLayer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#TEMPLATE_LAYER_ASTERISK_NAME\r\n     * @description (Static) Template에서 필수 여부 마크가 있는 레이어 이름\r\n     */\r\n    static TEMPLATE_LAYER_ASTERISK_NAME = \"TemplateAsteriskLayer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#TEMPLATE_LAYER_RECT_NAME\r\n     * @description (Static) Template에서 필드를 만들기 위해 생성하는 임시 div 이름\r\n     */\r\n    static TEMPLATE_LAYER_RECT_NAME = \"TemplateRect\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#DRAG_BOX_NAME\r\n     * @description (Static) Template에서 드래그 했을때 필드들이 있을 경우 만드는 SVG 그룹 노드 이름\r\n     */\r\n    static DRAG_BOX_NAME = \"DragBoxGroup\";\r\n\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#SHOW_CLASS\r\n     * @description (Static) 노드를 보이도록 하는 CSS 클래스 이름\r\n     */\r\n    static SHOW_CLASS = \"Template-Show\"\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#HIDE_CLASS\r\n     * @description (Static) 노드를 안보이도록 하는 CSS 클래스 이름\r\n     */\r\n    static HIDE_CLASS = \"Template-Hide\"\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_COMPONENT_CLASS\r\n     * @description (Static) Template모드에서 사이드 탭의 클라스 이름.\r\n     */\r\n    static EDITOR_COMPONENT_CLASS = \"Editor-Component_Box\";\r\n\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 노드 클래스 이름.\r\n     */\r\n    static EDITOR_ATTR_CLASS = \"Editor-Attribute\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#FIELD_DELETE_BUTTON_CLASS\r\n     * @description (Static) Template모드에서 삭제버튼 노드 클래스 이름.\r\n     */\r\n    static FIELD_DELETE_BUTTON_CLASS = \"Field-Delete-Button\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#MEMO_PROPERTY_BUTTON_CLASS\r\n     * @description (Static) Reader모드에서 메모 속성 버튼 노드 클래스 이름.\r\n     */\r\n    static MEMO_PROPERTY_BUTTON_CLASS = \"MEMO-Property-Button\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_KIND_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 종류 노드 클래스 이름.\r\n     */\r\n    static EDITOR_ATTR_KIND_CLASS = \"Attribute-kind\";\r\n\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_PANEL_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 판넬 노드 클래스 이름.\r\n     */\r\n    static EDITOR_ATTR_PANEL_CLASS = \"Attribute-Contents\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_PANEL_ID\r\n     * @description (Static) Template모드에서 필드의 속성 판넬 노드 ID.\r\n     */\r\n    static EDITOR_ATTR_PANEL_ID = \"Attribute-Panel\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_CONTENTS_ROW_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 컨텐츠 열의 클래스 이름\r\n     */\r\n    static EDITOR_ATTR_CONTENTS_ROW_CLASS = \"Attribute-Contents-Row\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_ROW_WRAP_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 컨텐츠 열을 감싸고 있는 노드의 클래스 이름\r\n     */\r\n    static EDITOR_ATTR_ROW_WRAP_CLASS = \"Attribute-Contents-Row-Wrap\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#TITLE_WRAP_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 컨텐츠 열의 타이틀을 감싸고 있는 노드의 클래스 이름\r\n     */\r\n    static TITLE_WRAP_CLASS = \"Title-Wrap\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#TITLE_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 컨텐츠 열의 타이틀 노드의 클래스 이름\r\n     */\r\n    static TITLE_CLASS = \"Title\";\r\n\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_SELECT_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 의 Select 노드의 클래스 이름\r\n     */\r\n    static EDITOR_ATTR_SELECT_CLASS = \"Attribute-Select\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#SWITCH_LABEL_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 의 Switch버튼  노드의 클래스 이름\r\n     */\r\n    static SWITCH_LABEL_CLASS = \"Attribute-Switch-Label\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#SWITCH_LABEL_SLIDER_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 의 Switch버튼의 슬라이더 노드의 클래스 이름\r\n     */\r\n    static SWITCH_LABEL_SLIDER_CLASS = \"Attribute-Switch-Slider\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#SWITCH_LABEL_SLIDER_ROUND_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 의 Switch버튼의 슬라이더의 도그란 Div 노드의 클래스 이름\r\n     */\r\n    static SWITCH_LABEL_SLIDER_ROUND_CLASS = \"Round\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#DIVIDER_CLASS\r\n     * @description (Static) 구분자 노드의 클래스 이름\r\n     */\r\n    static DIVIDER_CLASS = \"Divider\";\r\n\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_INPUT_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 의 input 노드의 클래스 이름\r\n     */\r\n    static EDITOR_ATTR_INPUT_CLASS = \"Attribute-Input\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_TEXTAREA_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 의 Textarea 노드의 클래스 이름\r\n     */\r\n    static EDITOR_ATTR_TEXTAREA_CLASS = \"Attribute-Textarea\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_DATE_INPUT_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 의 Date input 노드의 클래스 이름\r\n     */\r\n    static EDITOR_ATTR_DATE_INPUT_CLASS = \"Attribute-Date-Input\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#EDITOR_ATTR_INPUT_WRAP_CLASS\r\n     * @description (Static) Template모드에서 필드의 속성 의 input 노드를 감싸고 있는 노드의 클래스 이름\r\n     */\r\n    static EDITOR_ATTR_INPUT_WRAP_CLASS = \"Attribute-Input-Wrap\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#CREATE_FIELD_ACTION\r\n     * @description (Static) Template모드에서 UNDO REDO의 필드 생성 Action의 이름\r\n     */\r\n    static CREATE_FIELD_ACTION = \"CreateFieldAction\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#REMOVE_FIELD_ACTION\r\n     * @description (Static) Template모드에서 UNDO REDO의 필드 삭제 Action의 이름\r\n     */\r\n    static REMOVE_FIELD_ACTION = \"RemoveFieldAction\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#FIELD_ATTR_CHANGE_ACTION\r\n     * @description (Static) Template모드에서 UNDO REDO의 필드 속성 변경 Action의 이름\r\n     */\r\n    static FIELD_ATTR_CHANGE_ACTION = \"FieldAttrChangeAction\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#GROUP_REMOVE_ACTION\r\n     * @description (Static) Template모드에서 UNDO REDO의 필드 삭제 Action의 이름\r\n     */\r\n    static GROUP_REMOVE_ACTION = \"GroupRemoveAction\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#GROUP_ATTR_CHANGE_ACTION\r\n     * @description (Static) Template모드에서 UNDO REDO의 필드들의 속성 변경 Action의 이름\r\n     */\r\n    static GROUP_ATTR_CHANGE_ACTION = \"GroupAttrChangeAction\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#GROUP_ATTR_OWNER_CHANGE_ACTION\r\n     * @description (Static) Template모드에서 UNDO REDO의 필드들의 서명자 변경 Action의 이름\r\n     */\r\n    static GROUP_ATTR_OWNER_CHANGE_ACTION = \"GroupAttrOwnerChangeAction\";\r\n\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#READER_PAGE_FIELD_LAYER_CLASS\r\n     * @description (Static) 서명 모드에서 Field들이 올라갈 레이어 클래스 이름.\r\n     */\r\n    static READER_PAGE_FIELD_LAYER_CLASS = \"Reader-Page-Field-Layer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#READER_PAGE_MEMO_LAYER_CLASS\r\n     * @description (Static) 서명 모드에서 MEMO들이 올라갈 레이어 클래스 이름.\r\n     */\r\n    static READER_PAGE_MEMO_LAYER_CLASS = \"Reader-Page-Memo-Layer\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#ASTERISK_ICON_CLASS\r\n     * @description (Static) Template모드에서 필수 여부 아이콘 클래스 이름\r\n     */\r\n    static ASTERISK_ICON_CLASS = \"Asterisk-Icon\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {Number}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#ASTREISK_DIV_HEIGHT\r\n     * @description (Static) Template모드에서 필수 여부 아이콘 세로길이\r\n     */\r\n    static ASTREISK_DIV_HEIGHT = 12;\r\n\r\n    /**\r\n     * @static\r\n     * @type {Number}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#MINIMUM_DRAG_SIZE\r\n     * @description (Static) Template모드에서 드래그를 했다는 최소의 사이즈 기준\r\n     */\r\n    static MINIMUM_DRAG_SIZE = 10;\r\n\r\n    static RADIO_TYPE_1 = '1';\r\n    static RAIOD_TYPE_1_PATH = `<path d=\"M24,12c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S30.6,\r\n            12,24,12zM24,0C10.8,0,0,10.8,0,24s10.8,24,24,24s24-10.8,24-24S37.2,0,24,0zM24,43.2C13.4,43.2,4.8,34.6,4.8,24S13.4,\r\n            4.8,24,4.8S43.2,13.4,43.2,24S34.6,43.2,24,43.2z\"/>`;\r\n    static RADIO_TYPE_2 = '2';\r\n    static RAIOD_TYPE_2_PATH = `<path d=\"M24,0C10.8,0,0,10.8,0,24s10.8,24,24,24s24-10.8,24-24S37.2,0,24,0zM24,43.2C13.4,43.2,4.8,34.6,4.8,24S13.4,\\\r\n            4.8,24,4.8S43.2,13.4,43.2,24S34.6,43.2,24,43.2z\"/>`;\r\n\r\n            \r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/CONSTANTS.CONSTANTS#NO_EVENT_LAYER\r\n     * @description (Static) 이벤트를 받지 않는 class.\r\n     */\r\n    static NO_EVENT_LAYER = \"No-Event-Layer\";\r\n\r\n    static READER_FIELD_INPUT_MODE      = 0;\r\n    static READER_FIELD_MEMO_MODE       = 1;\r\n    static READER_FIELD_MEMO_MAKE_MODE  = 2;\r\n}\r\n\r\n","/*\n * anime.js v3.2.1\n * (c) 2020 Julian Garnier\n * Released under the MIT license\n * animejs.com\n */\n\n// Defaults\n\nvar defaultInstanceSettings = {\n  update: null,\n  begin: null,\n  loopBegin: null,\n  changeBegin: null,\n  change: null,\n  changeComplete: null,\n  loopComplete: null,\n  complete: null,\n  loop: 1,\n  direction: 'normal',\n  autoplay: true,\n  timelineOffset: 0\n};\n\nvar defaultTweenSettings = {\n  duration: 1000,\n  delay: 0,\n  endDelay: 0,\n  easing: 'easeOutElastic(1, .5)',\n  round: 0\n};\n\nvar validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\n\n// Caching\n\nvar cache = {\n  CSS: {},\n  springs: {}\n};\n\n// Utils\n\nfunction minMax(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction stringContains(str, text) {\n  return str.indexOf(text) > -1;\n}\n\nfunction applyArguments(func, args) {\n  return func.apply(null, args);\n}\n\nvar is = {\n  arr: function (a) { return Array.isArray(a); },\n  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },\n  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },\n  svg: function (a) { return a instanceof SVGElement; },\n  inp: function (a) { return a instanceof HTMLInputElement; },\n  dom: function (a) { return a.nodeType || is.svg(a); },\n  str: function (a) { return typeof a === 'string'; },\n  fnc: function (a) { return typeof a === 'function'; },\n  und: function (a) { return typeof a === 'undefined'; },\n  nil: function (a) { return is.und(a) || a === null; },\n  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },\n  rgb: function (a) { return /^rgb/.test(a); },\n  hsl: function (a) { return /^hsl/.test(a); },\n  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },\n  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; },\n};\n\n// Easings\n\nfunction parseEasingParameters(string) {\n  var match = /\\(([^)]+)\\)/.exec(string);\n  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];\n}\n\n// Spring solver inspired by Webkit Copyright © 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js\n\nfunction spring(string, duration) {\n\n  var params = parseEasingParameters(string);\n  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);\n  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);\n  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);\n  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  function solver(t) {\n    var progress = duration ? (duration * t) / 1000 : t;\n    if (zeta < 1) {\n      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n    } else {\n      progress = (a + b * progress) * Math.exp(-progress * w0);\n    }\n    if (t === 0 || t === 1) { return t; }\n    return 1 - progress;\n  }\n\n  function getDuration() {\n    var cached = cache.springs[string];\n    if (cached) { return cached; }\n    var frame = 1/6;\n    var elapsed = 0;\n    var rest = 0;\n    while(true) {\n      elapsed += frame;\n      if (solver(elapsed) === 1) {\n        rest++;\n        if (rest >= 16) { break; }\n      } else {\n        rest = 0;\n      }\n    }\n    var duration = elapsed * frame * 1000;\n    cache.springs[string] = duration;\n    return duration;\n  }\n\n  return duration ? solver : getDuration;\n\n}\n\n// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n\nfunction steps(steps) {\n  if ( steps === void 0 ) steps = 10;\n\n  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };\n}\n\n// BezierEasing https://github.com/gre/bezier-easing\n\nvar bezier = (function () {\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }\n  function C(aA1)      { return 3.0 * aA1 }\n\n  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }\n  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }\n    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) { return aGuessT; }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function bezier(mX1, mY1, mX2, mY2) {\n\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }\n    var sampleValues = new Float32Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n\n      var intervalStart = 0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= 0.001) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n\n    }\n\n    return function (x) {\n      if (mX1 === mY1 && mX2 === mY2) { return x; }\n      if (x === 0 || x === 1) { return x; }\n      return calcBezier(getTForX(x), mY1, mY2);\n    }\n\n  }\n\n  return bezier;\n\n})();\n\nvar penner = (function () {\n\n  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n  var eases = { linear: function () { return function (t) { return t; }; } };\n\n  var functionEasings = {\n    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },\n    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },\n    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },\n    Bounce: function () { return function (t) {\n      var pow2, b = 4;\n      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}\n      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)\n    }; },\n    Elastic: function (amplitude, period) {\n      if ( amplitude === void 0 ) amplitude = 1;\n      if ( period === void 0 ) period = .5;\n\n      var a = minMax(amplitude, 1, 10);\n      var p = minMax(period, .1, 2);\n      return function (t) {\n        return (t === 0 || t === 1) ? t : \n          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);\n      }\n    }\n  };\n\n  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n\n  baseEasings.forEach(function (name, i) {\n    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };\n  });\n\n  Object.keys(functionEasings).forEach(function (name) {\n    var easeIn = functionEasings[name];\n    eases['easeIn' + name] = easeIn;\n    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };\n    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : \n      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };\n    eases['easeOutIn' + name] = function (a, b) { return function (t) { return t < 0.5 ? (1 - easeIn(a, b)(1 - t * 2)) / 2 : \n      (easeIn(a, b)(t * 2 - 1) + 1) / 2; }; };\n  });\n\n  return eases;\n\n})();\n\nfunction parseEasings(easing, duration) {\n  if (is.fnc(easing)) { return easing; }\n  var name = easing.split('(')[0];\n  var ease = penner[name];\n  var args = parseEasingParameters(easing);\n  switch (name) {\n    case 'spring' : return spring(easing, duration);\n    case 'cubicBezier' : return applyArguments(bezier, args);\n    case 'steps' : return applyArguments(steps, args);\n    default : return applyArguments(ease, args);\n  }\n}\n\n// Strings\n\nfunction selectString(str) {\n  try {\n    var nodes = document.querySelectorAll(str);\n    return nodes;\n  } catch(e) {\n    return;\n  }\n}\n\n// Arrays\n\nfunction filterArray(arr, callback) {\n  var len = arr.length;\n  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    if (i in arr) {\n      var val = arr[i];\n      if (callback.call(thisArg, val, i, arr)) {\n        result.push(val);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenArray(arr) {\n  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);\n}\n\nfunction toArray(o) {\n  if (is.arr(o)) { return o; }\n  if (is.str(o)) { o = selectString(o) || o; }\n  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }\n  return [o];\n}\n\nfunction arrayContains(arr, val) {\n  return arr.some(function (a) { return a === val; });\n}\n\n// Objects\n\nfunction cloneObject(o) {\n  var clone = {};\n  for (var p in o) { clone[p] = o[p]; }\n  return clone;\n}\n\nfunction replaceObjectProps(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }\n  return o;\n}\n\nfunction mergeObjects(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }\n  return o;\n}\n\n// Colors\n\nfunction rgbToRgba(rgbValue) {\n  var rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n  return rgb ? (\"rgba(\" + (rgb[1]) + \",1)\") : rgbValue;\n}\n\nfunction hexToRgba(hexValue) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return (\"rgba(\" + r + \",\" + g + \",\" + b + \",1)\");\n}\n\nfunction hslToRgba(hslValue) {\n  var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n  var h = parseInt(hsl[1], 10) / 360;\n  var s = parseInt(hsl[2], 10) / 100;\n  var l = parseInt(hsl[3], 10) / 100;\n  var a = hsl[4] || 1;\n  function hue2rgb(p, q, t) {\n    if (t < 0) { t += 1; }\n    if (t > 1) { t -= 1; }\n    if (t < 1/6) { return p + (q - p) * 6 * t; }\n    if (t < 1/2) { return q; }\n    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }\n    return p;\n  }\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n  return (\"rgba(\" + (r * 255) + \",\" + (g * 255) + \",\" + (b * 255) + \",\" + a + \")\");\n}\n\nfunction colorToRgb(val) {\n  if (is.rgb(val)) { return rgbToRgba(val); }\n  if (is.hex(val)) { return hexToRgba(val); }\n  if (is.hsl(val)) { return hslToRgba(val); }\n}\n\n// Units\n\nfunction getUnit(val) {\n  var split = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n  if (split) { return split[1]; }\n}\n\nfunction getTransformUnit(propName) {\n  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }\n  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }\n}\n\n// Values\n\nfunction getFunctionValue(val, animatable) {\n  if (!is.fnc(val)) { return val; }\n  return val(animatable.target, animatable.id, animatable.total);\n}\n\nfunction getAttribute(el, prop) {\n  return el.getAttribute(prop);\n}\n\nfunction convertPxToUnit(el, value, unit) {\n  var valueUnit = getUnit(value);\n  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }\n  var cached = cache.CSS[value + unit];\n  if (!is.und(cached)) { return cached; }\n  var baseline = 100;\n  var tempEl = document.createElement(el.tagName);\n  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;\n  parentEl.appendChild(tempEl);\n  tempEl.style.position = 'absolute';\n  tempEl.style.width = baseline + unit;\n  var factor = baseline / tempEl.offsetWidth;\n  parentEl.removeChild(tempEl);\n  var convertedUnit = factor * parseFloat(value);\n  cache.CSS[value + unit] = convertedUnit;\n  return convertedUnit;\n}\n\nfunction getCSSValue(el, prop, unit) {\n  if (prop in el.style) {\n    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';\n    return unit ? convertPxToUnit(el, value, unit) : value;\n  }\n}\n\nfunction getAnimationType(el, prop) {\n  if (is.dom(el) && !is.inp(el) && (!is.nil(getAttribute(el, prop)) || (is.svg(el) && el[prop]))) { return 'attribute'; }\n  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }\n  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }\n  if (el[prop] != null) { return 'object'; }\n}\n\nfunction getElementTransforms(el) {\n  if (!is.dom(el)) { return; }\n  var str = el.style.transform || '';\n  var reg  = /(\\w+)\\(([^)]*)\\)/g;\n  var transforms = new Map();\n  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }\n  return transforms;\n}\n\nfunction getTransformValue(el, propName, animatable, unit) {\n  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);\n  var value = getElementTransforms(el).get(propName) || defaultVal;\n  if (animatable) {\n    animatable.transforms.list.set(propName, value);\n    animatable.transforms['last'] = propName;\n  }\n  return unit ? convertPxToUnit(el, value, unit) : value;\n}\n\nfunction getOriginalTargetValue(target, propName, unit, animatable) {\n  switch (getAnimationType(target, propName)) {\n    case 'transform': return getTransformValue(target, propName, animatable, unit);\n    case 'css': return getCSSValue(target, propName, unit);\n    case 'attribute': return getAttribute(target, propName);\n    default: return target[propName] || 0;\n  }\n}\n\nfunction getRelativeValue(to, from) {\n  var operator = /^(\\*=|\\+=|-=)/.exec(to);\n  if (!operator) { return to; }\n  var u = getUnit(to) || 0;\n  var x = parseFloat(from);\n  var y = parseFloat(to.replace(operator[0], ''));\n  switch (operator[0][0]) {\n    case '+': return x + y + u;\n    case '-': return x - y + u;\n    case '*': return x * y + u;\n  }\n}\n\nfunction validateValue(val, unit) {\n  if (is.col(val)) { return colorToRgb(val); }\n  if (/\\s/g.test(val)) { return val; }\n  var originalUnit = getUnit(val);\n  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n  if (unit) { return unitLess + unit; }\n  return unitLess;\n}\n\n// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes\n// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el) {\n  return Math.PI * 2 * getAttribute(el, 'r');\n}\n\nfunction getRectLength(el) {\n  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);\n}\n\nfunction getLineLength(el) {\n  return getDistance(\n    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, \n    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}\n  );\n}\n\nfunction getPolylineLength(el) {\n  var points = el.points;\n  var totalLength = 0;\n  var previousPos;\n  for (var i = 0 ; i < points.numberOfItems; i++) {\n    var currentPos = points.getItem(i);\n    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el) {\n  var points = el.points;\n  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n}\n\n// Path animation\n\nfunction getTotalLength(el) {\n  if (el.getTotalLength) { return el.getTotalLength(); }\n  switch(el.tagName.toLowerCase()) {\n    case 'circle': return getCircleLength(el);\n    case 'rect': return getRectLength(el);\n    case 'line': return getLineLength(el);\n    case 'polyline': return getPolylineLength(el);\n    case 'polygon': return getPolygonLength(el);\n  }\n}\n\nfunction setDashoffset(el) {\n  var pathLength = getTotalLength(el);\n  el.setAttribute('stroke-dasharray', pathLength);\n  return pathLength;\n}\n\n// Motion path\n\nfunction getParentSvgEl(el) {\n  var parentEl = el.parentNode;\n  while (is.svg(parentEl)) {\n    if (!is.svg(parentEl.parentNode)) { break; }\n    parentEl = parentEl.parentNode;\n  }\n  return parentEl;\n}\n\nfunction getParentSvg(pathEl, svgData) {\n  var svg = svgData || {};\n  var parentSvgEl = svg.el || getParentSvgEl(pathEl);\n  var rect = parentSvgEl.getBoundingClientRect();\n  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');\n  var width = rect.width;\n  var height = rect.height;\n  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);\n  return {\n    el: parentSvgEl,\n    viewBox: viewBox,\n    x: viewBox[0] / 1,\n    y: viewBox[1] / 1,\n    w: width,\n    h: height,\n    vW: viewBox[2],\n    vH: viewBox[3]\n  }\n}\n\nfunction getPath(path, percent) {\n  var pathEl = is.str(path) ? selectString(path)[0] : path;\n  var p = percent || 100;\n  return function(property) {\n    return {\n      property: property,\n      el: pathEl,\n      svg: getParentSvg(pathEl),\n      totalLength: getTotalLength(pathEl) * (p / 100)\n    }\n  }\n}\n\nfunction getPathProgress(path, progress, isPathTargetInsideSVG) {\n  function point(offset) {\n    if ( offset === void 0 ) offset = 0;\n\n    var l = progress + offset >= 1 ? progress + offset : 0;\n    return path.el.getPointAtLength(l);\n  }\n  var svg = getParentSvg(path.el, path.svg);\n  var p = point();\n  var p0 = point(-1);\n  var p1 = point(+1);\n  var scaleX = isPathTargetInsideSVG ? 1 : svg.w / svg.vW;\n  var scaleY = isPathTargetInsideSVG ? 1 : svg.h / svg.vH;\n  switch (path.property) {\n    case 'x': return (p.x - svg.x) * scaleX;\n    case 'y': return (p.y - svg.y) * scaleY;\n    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n  }\n}\n\n// Decompose value\n\nfunction decomposeValue(val, unit) {\n  // const rgx = /-?\\d*\\.?\\d+/g; // handles basic numbers\n  // const rgx = /[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var rgx = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n  return {\n    original: value,\n    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n    strings: (is.str(val) || unit) ? value.split(rgx) : []\n  }\n}\n\n// Animatables\n\nfunction parseTargets(targets) {\n  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });\n}\n\nfunction getAnimatables(targets) {\n  var parsed = parseTargets(targets);\n  return parsed.map(function (t, i) {\n    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };\n  });\n}\n\n// Properties\n\nfunction normalizePropertyTweens(prop, tweenSettings) {\n  var settings = cloneObject(tweenSettings);\n  // Override duration if easing is a spring\n  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }\n  if (is.arr(prop)) {\n    var l = prop.length;\n    var isFromTo = (l === 2 && !is.obj(prop[0]));\n    if (!isFromTo) {\n      // Duration divided by the number of tweens\n      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }\n    } else {\n      // Transform [from, to] values shorthand to a valid tween value\n      prop = {value: prop};\n    }\n  }\n  var propArray = is.arr(prop) ? prop : [prop];\n  return propArray.map(function (v, i) {\n    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};\n    // Default delay value should only be applied to the first tween\n    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }\n    // Default endDelay value should only be applied to the last tween\n    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }\n    return obj;\n  }).map(function (k) { return mergeObjects(k, settings); });\n}\n\n\nfunction flattenKeyframes(keyframes) {\n  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })\n  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);\n  var properties = {};\n  var loop = function ( i ) {\n    var propName = propertyNames[i];\n    properties[propName] = keyframes.map(function (key) {\n      var newKey = {};\n      for (var p in key) {\n        if (is.key(p)) {\n          if (p == propName) { newKey.value = key[p]; }\n        } else {\n          newKey[p] = key[p];\n        }\n      }\n      return newKey;\n    });\n  };\n\n  for (var i = 0; i < propertyNames.length; i++) loop( i );\n  return properties;\n}\n\nfunction getProperties(tweenSettings, params) {\n  var properties = [];\n  var keyframes = params.keyframes;\n  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }\n  for (var p in params) {\n    if (is.key(p)) {\n      properties.push({\n        name: p,\n        tweens: normalizePropertyTweens(params[p], tweenSettings)\n      });\n    }\n  }\n  return properties;\n}\n\n// Tweens\n\nfunction normalizeTweenValues(tween, animatable) {\n  var t = {};\n  for (var p in tween) {\n    var value = getFunctionValue(tween[p], animatable);\n    if (is.arr(value)) {\n      value = value.map(function (v) { return getFunctionValue(v, animatable); });\n      if (value.length === 1) { value = value[0]; }\n    }\n    t[p] = value;\n  }\n  t.duration = parseFloat(t.duration);\n  t.delay = parseFloat(t.delay);\n  return t;\n}\n\nfunction normalizeTweens(prop, animatable) {\n  var previousTween;\n  return prop.tweens.map(function (t) {\n    var tween = normalizeTweenValues(t, animatable);\n    var tweenValue = tween.value;\n    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;\n    var toUnit = getUnit(to);\n    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);\n    var previousValue = previousTween ? previousTween.to.original : originalValue;\n    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n    var fromUnit = getUnit(from) || getUnit(originalValue);\n    var unit = toUnit || fromUnit;\n    if (is.und(to)) { to = previousValue; }\n    tween.from = decomposeValue(from, unit);\n    tween.to = decomposeValue(getRelativeValue(to, from), unit);\n    tween.start = previousTween ? previousTween.end : 0;\n    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;\n    tween.easing = parseEasings(tween.easing, tween.duration);\n    tween.isPath = is.pth(tweenValue);\n    tween.isPathTargetInsideSVG = tween.isPath && is.svg(animatable.target);\n    tween.isColor = is.col(tween.from.original);\n    if (tween.isColor) { tween.round = 1; }\n    previousTween = tween;\n    return tween;\n  });\n}\n\n// Tween progress\n\nvar setProgressValue = {\n  css: function (t, p, v) { return t.style[p] = v; },\n  attribute: function (t, p, v) { return t.setAttribute(p, v); },\n  object: function (t, p, v) { return t[p] = v; },\n  transform: function (t, p, v, transforms, manual) {\n    transforms.list.set(p, v);\n    if (p === transforms.last || manual) {\n      var str = '';\n      transforms.list.forEach(function (value, prop) { str += prop + \"(\" + value + \") \"; });\n      t.style.transform = str;\n    }\n  }\n};\n\n// Set Value helper\n\nfunction setTargetsValue(targets, properties) {\n  var animatables = getAnimatables(targets);\n  animatables.forEach(function (animatable) {\n    for (var property in properties) {\n      var value = getFunctionValue(properties[property], animatable);\n      var target = animatable.target;\n      var valueUnit = getUnit(value);\n      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);\n      var unit = valueUnit || getUnit(originalValue);\n      var to = getRelativeValue(validateValue(value, unit), originalValue);\n      var animType = getAnimationType(target, property);\n      setProgressValue[animType](target, property, to, animatable.transforms, true);\n    }\n  });\n}\n\n// Animations\n\nfunction createAnimation(animatable, prop) {\n  var animType = getAnimationType(animatable.target, prop.name);\n  if (animType) {\n    var tweens = normalizeTweens(prop, animatable);\n    var lastTween = tweens[tweens.length - 1];\n    return {\n      type: animType,\n      property: prop.name,\n      animatable: animatable,\n      tweens: tweens,\n      duration: lastTween.end,\n      delay: tweens[0].delay,\n      endDelay: lastTween.endDelay\n    }\n  }\n}\n\nfunction getAnimations(animatables, properties) {\n  return filterArray(flattenArray(animatables.map(function (animatable) {\n    return properties.map(function (prop) {\n      return createAnimation(animatable, prop);\n    });\n  })), function (a) { return !is.und(a); });\n}\n\n// Create Instance\n\nfunction getInstanceTimings(animations, tweenSettings) {\n  var animLength = animations.length;\n  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };\n  var timings = {};\n  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;\n  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;\n  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;\n  return timings;\n}\n\nvar instanceID = 0;\n\nfunction createNewInstance(params) {\n  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n  var properties = getProperties(tweenSettings, params);\n  var animatables = getAnimatables(params.targets);\n  var animations = getAnimations(animatables, properties);\n  var timings = getInstanceTimings(animations, tweenSettings);\n  var id = instanceID;\n  instanceID++;\n  return mergeObjects(instanceSettings, {\n    id: id,\n    children: [],\n    animatables: animatables,\n    animations: animations,\n    duration: timings.duration,\n    delay: timings.delay,\n    endDelay: timings.endDelay\n  });\n}\n\n// Core\n\nvar activeInstances = [];\n\nvar engine = (function () {\n  var raf;\n\n  function play() {\n    if (!raf && (!isDocumentHidden() || !anime.suspendWhenDocumentHidden) && activeInstances.length > 0) {\n      raf = requestAnimationFrame(step);\n    }\n  }\n  function step(t) {\n    // memo on algorithm issue:\n    // dangerous iteration over mutable `activeInstances`\n    // (that collection may be updated from within callbacks of `tick`-ed animation instances)\n    var activeInstancesLength = activeInstances.length;\n    var i = 0;\n    while (i < activeInstancesLength) {\n      var activeInstance = activeInstances[i];\n      if (!activeInstance.paused) {\n        activeInstance.tick(t);\n        i++;\n      } else {\n        activeInstances.splice(i, 1);\n        activeInstancesLength--;\n      }\n    }\n    raf = i > 0 ? requestAnimationFrame(step) : undefined;\n  }\n\n  function handleVisibilityChange() {\n    if (!anime.suspendWhenDocumentHidden) { return; }\n\n    if (isDocumentHidden()) {\n      // suspend ticks\n      raf = cancelAnimationFrame(raf);\n    } else { // is back to active tab\n      // first adjust animations to consider the time that ticks were suspended\n      activeInstances.forEach(\n        function (instance) { return instance ._onDocumentVisibility(); }\n      );\n      engine();\n    }\n  }\n  if (typeof document !== 'undefined') {\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n  }\n\n  return play;\n})();\n\nfunction isDocumentHidden() {\n  return !!document && document.hidden;\n}\n\n// Public Instance\n\nfunction anime(params) {\n  if ( params === void 0 ) params = {};\n\n\n  var startTime = 0, lastTime = 0, now = 0;\n  var children, childrenLength = 0;\n  var resolve = null;\n\n  function makePromise(instance) {\n    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });\n    instance.finished = promise;\n    return promise;\n  }\n\n  var instance = createNewInstance(params);\n  var promise = makePromise(instance);\n\n  function toggleInstanceDirection() {\n    var direction = instance.direction;\n    if (direction !== 'alternate') {\n      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';\n    }\n    instance.reversed = !instance.reversed;\n    children.forEach(function (child) { return child.reversed = instance.reversed; });\n  }\n\n  function adjustTime(time) {\n    return instance.reversed ? instance.duration - time : time;\n  }\n\n  function resetTime() {\n    startTime = 0;\n    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);\n  }\n\n  function seekChild(time, child) {\n    if (child) { child.seek(time - child.timelineOffset); }\n  }\n\n  function syncInstanceChildren(time) {\n    if (!instance.reversePlayback) {\n      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }\n    } else {\n      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }\n    }\n  }\n\n  function setAnimationsProgress(insTime) {\n    var i = 0;\n    var animations = instance.animations;\n    var animationsLength = animations.length;\n    while (i < animationsLength) {\n      var anim = animations[i];\n      var animatable = anim.animatable;\n      var tweens = anim.tweens;\n      var tweenLength = tweens.length - 1;\n      var tween = tweens[tweenLength];\n      // Only check for keyframes if there is more than one tween\n      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }\n      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);\n      var strings = tween.to.strings;\n      var round = tween.round;\n      var numbers = [];\n      var toNumbersLength = tween.to.numbers.length;\n      var progress = (void 0);\n      for (var n = 0; n < toNumbersLength; n++) {\n        var value = (void 0);\n        var toNumber = tween.to.numbers[n];\n        var fromNumber = tween.from.numbers[n] || 0;\n        if (!tween.isPath) {\n          value = fromNumber + (eased * (toNumber - fromNumber));\n        } else {\n          value = getPathProgress(tween.value, eased * toNumber, tween.isPathTargetInsideSVG);\n        }\n        if (round) {\n          if (!(tween.isColor && n > 2)) {\n            value = Math.round(value * round) / round;\n          }\n        }\n        numbers.push(value);\n      }\n      // Manual Array.reduce for better performances\n      var stringsLength = strings.length;\n      if (!stringsLength) {\n        progress = numbers[0];\n      } else {\n        progress = strings[0];\n        for (var s = 0; s < stringsLength; s++) {\n          var a = strings[s];\n          var b = strings[s + 1];\n          var n$1 = numbers[s];\n          if (!isNaN(n$1)) {\n            if (!b) {\n              progress += n$1 + ' ';\n            } else {\n              progress += n$1 + b;\n            }\n          }\n        }\n      }\n      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);\n      anim.currentValue = progress;\n      i++;\n    }\n  }\n\n  function setCallback(cb) {\n    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }\n  }\n\n  function countIteration() {\n    if (instance.remaining && instance.remaining !== true) {\n      instance.remaining--;\n    }\n  }\n\n  function setInstanceProgress(engineTime) {\n    var insDuration = instance.duration;\n    var insDelay = instance.delay;\n    var insEndDelay = insDuration - instance.endDelay;\n    var insTime = adjustTime(engineTime);\n    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);\n    instance.reversePlayback = insTime < instance.currentTime;\n    if (children) { syncInstanceChildren(insTime); }\n    if (!instance.began && instance.currentTime > 0) {\n      instance.began = true;\n      setCallback('begin');\n    }\n    if (!instance.loopBegan && instance.currentTime > 0) {\n      instance.loopBegan = true;\n      setCallback('loopBegin');\n    }\n    if (insTime <= insDelay && instance.currentTime !== 0) {\n      setAnimationsProgress(0);\n    }\n    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {\n      setAnimationsProgress(insDuration);\n    }\n    if (insTime > insDelay && insTime < insEndDelay) {\n      if (!instance.changeBegan) {\n        instance.changeBegan = true;\n        instance.changeCompleted = false;\n        setCallback('changeBegin');\n      }\n      setCallback('change');\n      setAnimationsProgress(insTime);\n    } else {\n      if (instance.changeBegan) {\n        instance.changeCompleted = true;\n        instance.changeBegan = false;\n        setCallback('changeComplete');\n      }\n    }\n    instance.currentTime = minMax(insTime, 0, insDuration);\n    if (instance.began) { setCallback('update'); }\n    if (engineTime >= insDuration) {\n      lastTime = 0;\n      countIteration();\n      if (!instance.remaining) {\n        instance.paused = true;\n        if (!instance.completed) {\n          instance.completed = true;\n          setCallback('loopComplete');\n          setCallback('complete');\n          if (!instance.passThrough && 'Promise' in window) {\n            resolve();\n            promise = makePromise(instance);\n          }\n        }\n      } else {\n        startTime = now;\n        setCallback('loopComplete');\n        instance.loopBegan = false;\n        if (instance.direction === 'alternate') {\n          toggleInstanceDirection();\n        }\n      }\n    }\n  }\n\n  instance.reset = function() {\n    var direction = instance.direction;\n    instance.passThrough = false;\n    instance.currentTime = 0;\n    instance.progress = 0;\n    instance.paused = true;\n    instance.began = false;\n    instance.loopBegan = false;\n    instance.changeBegan = false;\n    instance.completed = false;\n    instance.changeCompleted = false;\n    instance.reversePlayback = false;\n    instance.reversed = direction === 'reverse';\n    instance.remaining = instance.loop;\n    children = instance.children;\n    childrenLength = children.length;\n    for (var i = childrenLength; i--;) { instance.children[i].reset(); }\n    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }\n    setAnimationsProgress(instance.reversed ? instance.duration : 0);\n  };\n\n  // internal method (for engine) to adjust animation timings before restoring engine ticks (rAF)\n  instance._onDocumentVisibility = resetTime;\n\n  // Set Value helper\n\n  instance.set = function(targets, properties) {\n    setTargetsValue(targets, properties);\n    return instance;\n  };\n\n  instance.tick = function(t) {\n    now = t;\n    if (!startTime) { startTime = now; }\n    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);\n  };\n\n  instance.seek = function(time) {\n    setInstanceProgress(adjustTime(time));\n  };\n\n  instance.pause = function() {\n    instance.paused = true;\n    resetTime();\n  };\n\n  instance.play = function() {\n    if (!instance.paused) { return; }\n    if (instance.completed) { instance.reset(); }\n    instance.paused = false;\n    activeInstances.push(instance);\n    resetTime();\n    engine();\n  };\n\n  instance.reverse = function() {\n    toggleInstanceDirection();\n    instance.completed = instance.reversed ? false : true;\n    resetTime();\n  };\n\n  instance.restart = function() {\n    instance.reset();\n    instance.play();\n  };\n\n  instance.remove = function(targets) {\n    var targetsArray = parseTargets(targets);\n    removeTargetsFromInstance(targetsArray, instance);\n  };\n\n  instance.reset();\n\n  if (instance.autoplay) { instance.play(); }\n\n  return instance;\n\n}\n\n// Remove targets from animation\n\nfunction removeTargetsFromAnimations(targetsArray, animations) {\n  for (var a = animations.length; a--;) {\n    if (arrayContains(targetsArray, animations[a].animatable.target)) {\n      animations.splice(a, 1);\n    }\n  }\n}\n\nfunction removeTargetsFromInstance(targetsArray, instance) {\n  var animations = instance.animations;\n  var children = instance.children;\n  removeTargetsFromAnimations(targetsArray, animations);\n  for (var c = children.length; c--;) {\n    var child = children[c];\n    var childAnimations = child.animations;\n    removeTargetsFromAnimations(targetsArray, childAnimations);\n    if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }\n  }\n  if (!animations.length && !children.length) { instance.pause(); }\n}\n\nfunction removeTargetsFromActiveInstances(targets) {\n  var targetsArray = parseTargets(targets);\n  for (var i = activeInstances.length; i--;) {\n    var instance = activeInstances[i];\n    removeTargetsFromInstance(targetsArray, instance);\n  }\n}\n\n// Stagger helpers\n\nfunction stagger(val, params) {\n  if ( params === void 0 ) params = {};\n\n  var direction = params.direction || 'normal';\n  var easing = params.easing ? parseEasings(params.easing) : null;\n  var grid = params.grid;\n  var axis = params.axis;\n  var fromIndex = params.from || 0;\n  var fromFirst = fromIndex === 'first';\n  var fromCenter = fromIndex === 'center';\n  var fromLast = fromIndex === 'last';\n  var isRange = is.arr(val);\n  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);\n  var val2 = isRange ? parseFloat(val[1]) : 0;\n  var unit = getUnit(isRange ? val[1] : val) || 0;\n  var start = params.start || 0 + (isRange ? val1 : 0);\n  var values = [];\n  var maxValue = 0;\n  return function (el, i, t) {\n    if (fromFirst) { fromIndex = 0; }\n    if (fromCenter) { fromIndex = (t - 1) / 2; }\n    if (fromLast) { fromIndex = t - 1; }\n    if (!values.length) {\n      for (var index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(Math.abs(fromIndex - index));\n        } else {\n          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;\n          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;\n          var toX = index%grid[0];\n          var toY = Math.floor(index/grid[0]);\n          var distanceX = fromX - toX;\n          var distanceY = fromY - toY;\n          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') { value = -distanceX; }\n          if (axis === 'y') { value = -distanceY; }\n          values.push(value);\n        }\n        maxValue = Math.max.apply(Math, values);\n      }\n      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }\n      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }\n    }\n    var spacing = isRange ? (val2 - val1) / maxValue : val1;\n    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;\n  }\n}\n\n// Timeline\n\nfunction timeline(params) {\n  if ( params === void 0 ) params = {};\n\n  var tl = anime(params);\n  tl.duration = 0;\n  tl.add = function(instanceParams, timelineOffset) {\n    var tlIndex = activeInstances.indexOf(tl);\n    var children = tl.children;\n    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }\n    function passThrough(ins) { ins.passThrough = true; }\n    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }\n    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));\n    insParams.targets = insParams.targets || params.targets;\n    var tlDuration = tl.duration;\n    insParams.autoplay = false;\n    insParams.direction = tl.direction;\n    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);\n    passThrough(tl);\n    tl.seek(insParams.timelineOffset);\n    var ins = anime(insParams);\n    passThrough(ins);\n    children.push(ins);\n    var timings = getInstanceTimings(children, params);\n    tl.delay = timings.delay;\n    tl.endDelay = timings.endDelay;\n    tl.duration = timings.duration;\n    tl.seek(0);\n    tl.reset();\n    if (tl.autoplay) { tl.play(); }\n    return tl;\n  };\n  return tl;\n}\n\nanime.version = '3.2.1';\nanime.speed = 1;\n// TODO:#review: naming, documentation\nanime.suspendWhenDocumentHidden = true;\nanime.running = activeInstances;\nanime.remove = removeTargetsFromActiveInstances;\nanime.get = getOriginalTargetValue;\nanime.set = setTargetsValue;\nanime.convertPx = convertPxToUnit;\nanime.path = getPath;\nanime.setDashoffset = setDashoffset;\nanime.stagger = stagger;\nanime.timeline = timeline;\nanime.easing = parseEasings;\nanime.penner = penner;\nanime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };\n\nexport default anime;\n","/**\r\n * @module Template/Utils\r\n */\r\n\r\nimport { CONSTANTS } from './../Constants.js';\r\n\r\nimport Translator from './../Translator/translator.js';\r\n\r\n/**\r\n * @description  Util 모음 Class\r\n *\r\n * @property {Array} fontFamilyComboBox {@link module:Template/Utils.Utils#fontFamilyComboBox}\r\n * @property {Array} dateFormatComboBox {@link module:Template/Utils.Utils#dateFormatComboBox}\r\n * @property {Array} fontSizeComboBox {@link module:Template/Utils.Utils#fontSizeComboBox}\r\n * @property {Array} signPenWidthComboBox {@link module:Template/Utils.Utils#signPenWidthComboBox}\r\n * @property {Array} userInfoOptionList {@link module:Template/Utils.Utils#userInfoOptionList}\r\n * @property {Number} userInfoOptionListCount {@link module:Template/Utils.Utils#userInfoOptionListCount}\r\n * @property {Array} dvFieldOptionList {@link module:Template/Utils.Utils#dvFieldOptionList}\r\n *\r\n * @property {Function} addObjectsToCanvas {@link module:Template/Utils.Utils#addObjectsToCanvas}\r\n * @property {Function} addSignSvgToCanvas {@link module:Template/Utils.Utils#addSignSvgToCanvas}\r\n * @property {Function} boundingRectToRect {@link module:Template/Utils.Utils#boundingRectToRect}\r\n * @property {Function} cloneFabricCanvas {@link module:Template/Utils.Utils#cloneFabricCanvas}\r\n * @property {Function} cloneObject {@link module:Template/Utils.Utils#cloneObject}\r\n * @property {Function} cloneObjectToObject {@link module:Template/Utils.Utils#cloneObjectToObject}\r\n * @property {Function} closeSelect2Tag {@link module:Template/Utils.Utils#closeSelect2Tag}\r\n * @property {Function} createAsteriskDiv {@link module:Template/Utils.Utils#createAsteriskDiv}\r\n * @property {Function} createAttrbutePopup {@link module:Template/Utils.Utils#createAttrbutePopup}\r\n * @property {Function} createAttributeCheckBoxNode {@link module:Template/Utils.Utils#createAttributeCheckBoxNode}\r\n * @property {Function} createAttributeColorInputNode {@link module:Template/Utils.Utils#createAttributeColorInputNode}\r\n * @property {Function} createAttributeDateInputNode {@link module:Template/Utils.Utils#createAttributeDateInputNode}\r\n * @property {Function} createAttributeInputNode {@link module:Template/Utils.Utils#createAttributeInputNode}\r\n * @property {Function} createAttributeInputNode {@link module:Template/Utils.Utils#createAttributeInputNode}\r\n * @property {Function} createAttributePanelNode {@link module:Template/Utils.Utils#createAttributePanelNode}\r\n * @property {Function} createAttributeSelectInnerNode {@link module:Template/Utils.Utils#createAttributeSelectInnerNode}\r\n * @property {Function} createAttributeSelectNode {@link module:Template/Utils.Utils#createAttributeSelectNode}\r\n * @property {Function} createAttributeToggleButtonNode {@link module:Template/Utils.Utils#createAttributeToggleButtonNode}\r\n * @property {Function} createDividerNode {@link module:Template/Utils.Utils#createDividerNode}\r\n * @property {Function} createFieldDeleteBtn {@link module:Template/Utils.Utils#createFieldDeleteBtn}\r\n * @property {Function} createTextAlignButtonNode {@link module:Template/Utils.Utils#createTextAlignButtonNode}\r\n * @property {Function} createTextAttrbuteNode {@link module:Template/Utils.Utils#createTextAttrbuteNode}\r\n * @property {Function} createTextBoldButtonNode {@link module:Template/Utils.Utils#createTextBoldButtonNode}\r\n * @property {Function} createTextColorButtonNode {@link module:Template/Utils.Utils#createTextColorButtonNode}\r\n * @property {Function} fieldAncestors {@link module:Template/Utils.Utils#fieldAncestors}\r\n * @property {Function} findSameAncestor {@link module:Template/Utils.Utils#findSameAncestor}\r\n * @property {Function} getFonSizeComboBox {@link module:Template/Utils.Utils#getFonSizeComboBox}\r\n * @property {Function} getUserInfoOptsList {@link module:Template/Utils.Utils#getUserInfoOptsList}\r\n * @property {Function} imageFileToBase64 {@link module:Template/Utils.Utils#imageFileToBase64}\r\n * @property {Function} isEmptyObject {@link module:Template/Utils.Utils#isEmptyObject}\r\n * @property {Function} isShowAsteriskDiv {@link module:Template/Utils.Utils#isShowAsteriskDiv}\r\n * @property {Function} isStringEmpty {@link module:Template/Utils.Utils#isStringEmpty}\r\n * @property {Function} mergeFieldsBBox {@link module:Template/Utils.mergeFieldsBBox#addObjectsToCanvas}\r\n * @property {Function} mergeObjectsRect {@link module:Template/Utils.Utils#mergeObjectsRect}\r\n * @property {Function} mergeRect {@link module:Template/Utils.Utils#mergeRect}\r\n * @property {Function} repositionFieldDeleteBtn {@link module:Template/Utils.Utils#repositionFieldDeleteBtn}\r\n * @property {Function} setDVFieldOptsList {@link module:Template/Utils.Utils#setDVFieldOptsList}\r\n * @property {Function} setUserInfoOptsList {@link module:Template/Utils.Utils#setUserInfoOptsList}\r\n * @property {Function} setUserInfoOptsListCount {@link module:Template/Utils.Utils#setUserInfoOptsListCount}\r\n * @property {Function} showAsteriskDiv {@link module:Template/Utils.Utils#showAsteriskDiv}\r\n * \r\n * @FileName utils.js\r\n * @since 2021.05.31\r\n */\r\nexport class Utils {\r\n\r\n    /**\r\n     * @static\r\n     * @type {Array}\r\n     * @name module:Template/Utils.Utils#fontFamilyComboBox\r\n     * @description (Static) 폰트 종류\r\n     */\r\n    static fontFamilyComboBox = [\r\n        {\r\n            text: \"맑은 고딕\",\r\n            value: \"MalgunGothic\"\r\n        },\r\n        {\r\n            text: \"바탕체\",\r\n            value: \"Batang\"\r\n        }\r\n    ];\r\n\r\n    /**\r\n     * @static\r\n     * @type {Array}\r\n     * @name module:Template/Utils.Utils#dateFormatComboBox\r\n     * @description (Static) 날짜 포멧 리스트\r\n     */\r\n    static dateFormatComboBox = [\r\n        {\r\n            text: \"YYYY-MM-DD\",\r\n            value: \"Y-m-d\"\r\n        },\r\n        {\r\n            text: \"YYYY/MM/DD\",\r\n            value: \"Y/m/d\"\r\n        },\r\n        {\r\n            text: \"YYYY.MM.DD\",\r\n            value: \"Y.m.d\"\r\n        }\r\n    ]\r\n\r\n    static radioTypeList = [\r\n        {\r\n            text: \"Type 1\",\r\n            value: CONSTANTS.RADIO_TYPE_1\r\n        },\r\n        {\r\n            text: \"Type 2\",\r\n            value: CONSTANTS.RADIO_TYPE_2\r\n        }\r\n    ]\r\n    /**\r\n     * @static\r\n     * @type {Array}\r\n     * @name module:Template/Utils.Utils#fontSizeComboBox\r\n     * @description (Static) 폰트 사이즈 콤보박스 리스트\r\n     */\r\n    static fontSizeComboBox = [];\r\n\r\n    /**\r\n     * @static\r\n     * @type {Array}\r\n     * @name module:Template/Utils.Utils#signPenWidthComboBox\r\n     * @description (Static) 서명펜 두께 콤보박스 리스트\r\n     */\r\n    static signPenWidthComboBox = [];\r\n\r\n    /**\r\n     * @static\r\n     * @type {Array}\r\n     * @name module:Template/Utils.Utils#userInfoOptionList\r\n     * @description (Static) 서명자 리스트\r\n     */\r\n    static userInfoOptionList = [];\r\n\r\n    /**\r\n     * @static\r\n     * @type {Number}\r\n     * @name module:Template/Utils.Utils#userInfoOptionListCount\r\n     * @description (Static) 서명자 리스트 갯수\r\n     */\r\n    static userInfoOptionListCount = 0;\r\n\r\n    /**\r\n     * @static\r\n     * @type {Array}\r\n     * @name module:Template/Utils.Utils#dvFieldOptionList\r\n     * @description (Static) 기본값 옵션 리스트\r\n     */\r\n    static dvFieldOptionList = [];\r\n\r\n    /**\r\n     * @static\r\n     * @type {Object}\r\n     * @name module:Template/Utils.Utils#signTabShowOpt\r\n     * @description (Static) 서명탭 보임/안보임 기본값 옵션\r\n     */\r\n    static signTabShowOpt = {};\r\n\r\n    /**\r\n     * @static\r\n     * @type {String}\r\n     * @name module:Template/Utils.Utils#locale\r\n     * @description (Static) 현재 언어\r\n     */\r\n    static locale = \"ko\";\r\n\r\n    /**\r\n     * @static\r\n     * @type {Object}\r\n     * @name module:Template/Utils.Utils#translator\r\n     * @description (Static) 다국어 사용을 위한 Object\r\n     */\r\n    static translator = new Translator({\r\n        filesLocation: '/js/pdf_form/i18n'\r\n    });\r\n\r\n    /**\r\n     *\r\n     * @constructor\r\n     * \r\n    */\r\n    constructor() {\r\n        \r\n    }\r\n\r\n\r\n    /**\r\n     * @static\r\n     * @function isEmptyObject\r\n     * @name module:Template/Utils.Utils#isEmptyObject\r\n     * @description (Static)  Object가 비어있는지 체크\r\n     * \r\n     * @param {Object} param\r\n     * @return {Boolean} param\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static isEmptyObject(param) {\r\n        if (param === undefined ||\r\n            param === null) {\r\n            return true;\r\n        }\r\n        return Object.keys(param).length === 0;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function closeSelect2Tag\r\n     * @name module:Template/Utils.Utils#closeSelect2Tag\r\n     * @description (Static) Select2가 열려있는 태그를 체크하여 닫는다.\r\n     *\r\n     * @param {Element} node\r\n     * @return {Boolean}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static closeSelect2Tag(node) {\r\n        node.querySelectorAll(\"li .\" + CONSTANTS.EDITOR_ATTR_SELECT_CLASS).forEach((el) => {\r\n            if (el.classList.contains(\"select2-hidden-accessible\")) {\r\n                $(el).select2('close');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function removeAllChildNode\r\n     * @name module:Template/Utils.Utils#removeAllChildNode\r\n     * @description (Static) 해당하는 Node의 모든 Child를 제거한다.\r\n     *\r\n     * @param {Element} node\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static removeAllChildNode(node) {\r\n        if (node === null) {\r\n            return;\r\n        }\r\n        while (node.firstChild) {\r\n            if (node.lastChild.id === CONSTANTS.EDITOR_ATTR_PANEL_ID) {\r\n                Utils.closeSelect2Tag(node.lastChild);\r\n            }\r\n            node.removeChild(node.lastChild);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttributePanelNode\r\n     * @name module:Template/Utils.Utils#createAttributePanelNode\r\n     * @description (Static) 필드의 속성을 보여줄 Panel를 생성한다.\r\n     *\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttributePanelNode() {\r\n        var panel = document.createElement(\"ul\");\r\n        panel.className = CONSTANTS.EDITOR_ATTR_PANEL_CLASS;\r\n        panel.id = CONSTANTS.EDITOR_ATTR_PANEL_ID;\r\n\r\n        return panel;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttributeInputNode\r\n     * @name module:Template/Utils.Utils#createAttributeInputNode\r\n     * @description (Static) 필드의 속성중 input을 사용하는 Element를 만든다.\r\n     *\r\n     * @param {String} fieldID 사용할 Field의 ID\r\n     * @param {String} fieldPropetyName 사용할 Field의 속성 이름\r\n     * @param {String} title  Element에 사용할 이름\r\n     * @param {String} value  input에 들어갈 값\r\n     * @param {String} nodeTooltip  ToolTip에 들어갈 내용\r\n     * @param {callback} changeEventFunc  값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttributeInputNode(fieldId, fieldPropetyName, title, value, type, nodeTooltip, changeEventFunc) {\r\n        var row = document.createElement(\"li\");\r\n        row.className = CONSTANTS.EDITOR_ATTR_CONTENTS_ROW_CLASS;\r\n        var titleWrap = document.createElement(\"div\");\r\n        titleWrap.className = CONSTANTS.TITLE_WRAP_CLASS;\r\n        var titleSpan = document.createElement(\"span\");\r\n        titleSpan.className = CONSTANTS.TITLE_CLASS;\r\n        titleSpan.textContent = Utils.translateForKey(title);\r\n        titleSpan.setAttribute(\"data-i18n\", title);\r\n        titleWrap.appendChild(titleSpan);\r\n        var input = document.createElement(\"input\");\r\n        input.className = CONSTANTS.EDITOR_ATTR_INPUT_CLASS;\r\n        input.setAttribute(\"data-field-id\", fieldId);\r\n        input.setAttribute(\"data-field-property-name\", fieldPropetyName);\r\n        if (value !== \"\") {\r\n            input.value = value;\r\n        }\r\n        if (type !== \"\" ) {\r\n            input.type = type;\r\n        }\r\n        input.addEventListener(\"change\", changeEventFunc, true);\r\n        \r\n        row.appendChild(titleWrap);\r\n        row.appendChild(input);\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttributeInputNode\r\n     * @name module:Template/Utils.Utils#createAttributeInputNode\r\n     * @description (Static) 필드의 속성중 textare를 사용하는 Element를 만든다.\r\n     *\r\n     * @param {String} fieldID 사용할 Field의 ID\r\n     * @param {String} fieldPropetyName 사용할 Field의 속성 이름\r\n     * @param {String} title  Element에 사용할 이름\r\n     * @param {String} value  textare에 들어갈 값\r\n     * @param {callback} changeEventFunc 값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttributeTextAreaNode(fieldId, fieldPropetyName, title, value, type, changeEventFunc) {\r\n        var row = document.createElement(\"li\");\r\n        row.className = CONSTANTS.EDITOR_ATTR_CONTENTS_ROW_CLASS;\r\n        var titleWrap = document.createElement(\"div\");\r\n        titleWrap.className = CONSTANTS.TITLE_WRAP_CLASS;\r\n        var titleSpan = document.createElement(\"span\");\r\n        titleSpan.className = CONSTANTS.TITLE_CLASS;\r\n        titleSpan.textContent = Utils.translateForKey(title);\r\n        titleWrap.appendChild(titleSpan);\r\n        var textarea = document.createElement(\"textarea\");\r\n        textarea.className = CONSTANTS.EDITOR_ATTR_TEXTAREA_CLASS;\r\n        textarea.setAttribute(\"data-field-id\", fieldId);\r\n        textarea.setAttribute(\"data-field-property-name\", fieldPropetyName);\r\n        if (value !== \"\") {\r\n            textarea.value = value;\r\n        }\r\n        if (type !== \"\") {\r\n            textarea.type = type;\r\n        }\r\n        textarea.addEventListener(\"change\", changeEventFunc, true);\r\n\r\n        row.appendChild(titleWrap);\r\n        row.appendChild(textarea);\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttributeCheckBoxNode\r\n     * @name module:Template/Utils.Utils#createAttributeCheckBoxNode\r\n     * @description (Static)  필드의 속성중 checkbox를 사용하는 Element를 만든다.\r\n     *\r\n     * @param {String} fieldID 사용할 Field의 ID\r\n     * @param {String} fieldPropetyName 사용할 Field의 속성 이름\r\n     * @param {String} title  Element에 사용할 이름\r\n     * @param {String} value  input에 들어갈 값\r\n     * @param {callback} changeEventFunc 값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttributeCheckBoxNode(fieldId, fieldPropetyName, title, value, changeEventFunc) {\r\n        var row = document.createElement(\"li\");\r\n        row.className = CONSTANTS.EDITOR_ATTR_CONTENTS_ROW_CLASS;\r\n\r\n        var inputText = document.createElement(\"input\");\r\n        inputText.type = \"text\";\r\n        inputText.className = CONSTANTS.EDITOR_ATTR_INPUT_CLASS;\r\n        inputText.setAttribute(\"data-field-id\", fieldId);\r\n        inputText.setAttribute(\"data-field-property-name\", fieldPropetyName);\r\n        inputText.style.display = \"none\";\r\n        inputText.addEventListener(\"change\", changeEventFunc, true);\r\n\r\n        var input = document.createElement(\"input\");\r\n        input.type = \"checkbox\";\r\n        input.id = fieldPropetyName + \"_chkbox\";\r\n        input.addEventListener(\"change\", function (evt) {\r\n            if (input.checked) {\r\n                inputText.value = \"true\";\r\n            } else {\r\n                inputText.value = \"false\";\r\n            }\r\n            inputText.dispatchEvent(new Event(\"change\"));\r\n        });\r\n\r\n        if (value === 'true') {\r\n            input.checked = true;\r\n            inputText.value = \"true\";\r\n        } else {\r\n            input.checked = false;\r\n            inputText.value = \"false\";\r\n        }\r\n\r\n        var checkBoxContainerNode = document.createElement(\"p\");\r\n        checkBoxContainerNode.className = \"Attribute-Contents-Row-CheckBox-Container\"\r\n        checkBoxContainerNode.appendChild(input);\r\n        var checkBoxLabelNode = document.createElement(\"label\");\r\n        checkBoxLabelNode.htmlFor = fieldPropetyName + \"_chkbox\";\r\n        checkBoxLabelNode.textContent = title;\r\n        checkBoxContainerNode.appendChild(checkBoxLabelNode);\r\n\r\n        row.appendChild(checkBoxContainerNode);\r\n        row.appendChild(inputText);\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttributeDateInputNode\r\n     * @name module:Template/Utils.Utils#createAttributeDateInputNode\r\n     * @description (Static)  필드의 속성중 Date를 사용하는 Element를 만든다.\r\n     *\r\n     * @param {String} fieldID  사용할 Field의 ID\r\n     * @param {String} fieldPropetyName  사용할 Field의 속성 이름\r\n     * @param {String} title  Element에 사용할 이름\r\n     * @param {String} value  input에 들어갈 값\r\n     * @param {String} nodeTooltip  ToolTip에 들어갈 내용\r\n     * @param {callback} changeEventFunc  값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttributeDateInputNode(fieldId, fieldPropetyName, title, value, nodeTooltip, changeEventFunc) {\r\n        var row = document.createElement(\"li\");\r\n        row.className = CONSTANTS.EDITOR_ATTR_CONTENTS_ROW_CLASS;\r\n        var titleWrap = document.createElement(\"div\");\r\n        titleWrap.className = CONSTANTS.TITLE_WRAP_CLASS;\r\n        var titleSpan = document.createElement(\"span\");\r\n        titleSpan.className = CONSTANTS.TITLE_CLASS;\r\n        titleSpan.textContent = title;\r\n        titleWrap.appendChild(titleSpan);\r\n        var input = document.createElement(\"input\");\r\n        input.className = CONSTANTS.EDITOR_ATTR_INPUT_CLASS;\r\n        input.id = fieldPropetyName + \"_date-picker\";\r\n        input.style.display = \"none\";\r\n        input.setAttribute(\"data-field-id\", fieldId);\r\n        input.setAttribute(\"data-field-property-name\", fieldPropetyName);\r\n        if (value !== \"\") {\r\n            input.value = value;\r\n        }\r\n        var inputPicker = document.createElement(\"input\");\r\n        inputPicker.className = CONSTANTS.EDITOR_ATTR_DATE_INPUT_CLASS;\r\n        if (value !== \"\") {\r\n            inputPicker.value = value;\r\n        }\r\n        \r\n        input.addEventListener(\"change\", changeEventFunc, true);\r\n        row.appendChild(titleWrap);\r\n        row.appendChild(input);\r\n        row.appendChild(inputPicker);\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttributeColorInputNode\r\n     * @name module:Template/Utils.Utils#createAttributeColorInputNode\r\n     * @description (Static) 필드의 속성중 Color Picker를 사용하는 Element를 만든다.\r\n     *\r\n     * @param {String} fieldID  사용할 Field의 ID\r\n     * @param {String} fieldPropetyName  사용할 Field의 속성 이름\r\n     * @param {String} title  Element에 사용할 이름\r\n     * @param {String} value  input에 들어갈 값\r\n     * @param {String} type  input의 type에 들어갈 값 - 사용하지 않음.\r\n     * @param {String} nodeTooltip  ToolTip에 들어갈 내용\r\n     * @param {callback} changeEventFunc  값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttributeColorInputNode(fieldId, fieldPropetyName, title, value, type, nodeTooltip, changeEventFunc) {\r\n        var row = document.createElement(\"li\");\r\n        row.className = CONSTANTS.EDITOR_ATTR_CONTENTS_ROW_CLASS;\r\n        var titleWrap = document.createElement(\"div\");\r\n        titleWrap.className = CONSTANTS.TITLE_WRAP_CLASS;\r\n        var titleSpan = document.createElement(\"span\");\r\n        titleSpan.className = CONSTANTS.TITLE_CLASS;\r\n        titleSpan.textContent = title;\r\n        titleWrap.appendChild(titleSpan);\r\n        var input = document.createElement(\"input\");\r\n        input.className = CONSTANTS.EDITOR_ATTR_INPUT_CLASS;\r\n        input.setAttribute(\"data-field-id\", fieldId);\r\n        input.setAttribute(\"data-field-property-name\", fieldPropetyName);\r\n        if (value !== \"\") {\r\n            input.value = value;\r\n        }\r\n        input.type = \"text\";\r\n        input.id = fieldId + \"_color\";\r\n        input.addEventListener(\"change\", changeEventFunc, true);\r\n        \r\n        var inputBtn = document.createElement(\"input\");\r\n        inputBtn.type = \"button\";\r\n        var inputWrap = document.createElement(\"div\");\r\n        inputWrap.className = CONSTANTS.EDITOR_ATTR_INPUT_WRAP_CLASS;\r\n        inputWrap.appendChild(input);\r\n        inputWrap.appendChild(inputBtn);\r\n\r\n        row.appendChild(titleWrap);\r\n        row.appendChild(inputWrap);\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttributeToggleButtonNode\r\n     * @name module:Template/Utils.Utils#createAttributeToggleButtonNode\r\n     * @description (Static)  필드의 속성중 Toggle button을 사용하는 Element를 만든다.\r\n     *\r\n     * @param {String} fieldID  사용할 Field의 ID\r\n     * @param {String} fieldPropetyName  사용할 Field의 속성 이름\r\n     * @param {String} title  Element에 사용할 이름\r\n     * @param {String} value  input에 들어갈 값\r\n     * @param {callback} changeEventFunc  값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttributeToggleButtonNode(fieldId, fieldPropetyName, title, value, changeEventFunc) {\r\n        var row = document.createElement(\"li\");\r\n        row.className = CONSTANTS.EDITOR_ATTR_CONTENTS_ROW_CLASS;\r\n        var rowWrap = document.createElement(\"div\");\r\n        rowWrap.className = CONSTANTS.EDITOR_ATTR_ROW_WRAP_CLASS;\r\n        var titleSpan = document.createElement(\"span\");\r\n        titleSpan.className = CONSTANTS.TITLE_CLASS;\r\n        titleSpan.textContent = Utils.translateForKey(title);\r\n        titleSpan.setAttribute(\"data-i18n\", title);\r\n        rowWrap.appendChild(titleSpan);\r\n        \r\n        var switchLabel = document.createElement(\"label\");\r\n        switchLabel.className = CONSTANTS.SWITCH_LABEL_CLASS;\r\n\r\n        var inputText = document.createElement(\"input\");\r\n        inputText.type = \"text\";\r\n        inputText.setAttribute(\"data-field-id\", fieldId);\r\n        inputText.setAttribute(\"data-field-property-name\", fieldPropetyName);\r\n        inputText.style.display = \"none\";\r\n        inputText.addEventListener(\"change\", changeEventFunc, true);\r\n\r\n        var input = document.createElement(\"input\");\r\n        input.type = \"checkbox\";\r\n        input.addEventListener(\"change\", function (evt) {\r\n            if (input.checked) {\r\n                inputText.value = true;\r\n            } else {\r\n                inputText.value = false;\r\n            }\r\n            inputText.dispatchEvent(new Event(\"change\"));\r\n        });\r\n        if (value === 'true') {\r\n            input.checked = true;\r\n            inputText.value = \"true\";\r\n        } else {\r\n            input.checked = false;\r\n            inputText.value = \"false\";\r\n        }\r\n\r\n        var sliderSpan = document.createElement(\"span\");\r\n        sliderSpan.classList.add(CONSTANTS.SWITCH_LABEL_SLIDER_CLASS);\r\n        sliderSpan.classList.add(CONSTANTS.SWITCH_LABEL_SLIDER_ROUND_CLASS);\r\n\r\n        switchLabel.appendChild(input);\r\n        switchLabel.appendChild(sliderSpan);\r\n\r\n        rowWrap.appendChild(switchLabel);\r\n        rowWrap.appendChild(inputText);\r\n        row.appendChild(rowWrap);\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttributeSelectInnerNode\r\n     * @name module:Template/Utils.Utils#createAttributeSelectInnerNode\r\n     * @description (Static)  필드의 속성중 Select를 사용하는 Element를 만든다.\r\n     *\r\n     * @param {String} fieldID 사용할 Field의 ID\r\n     * @param {String} fieldPropetyName  사용할 Field의 속성 이름\r\n     * @param {Array} options [{value: \"value\", text: \"text\"}] select에 사용되는 Map Array\r\n     * @param { String} title Element에 사용할 이름\r\n     * @param {Boolean} useDefaulOptionNode 대상선택을 사용할지 여부\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttributeSelectInnerNode(fieldId, fieldPropetyName, options, title, useDefaulOptionNode = true) {\r\n        var rowWrap = document.createElement(\"div\");\r\n        rowWrap.className = CONSTANTS.EDITOR_ATTR_ROW_WRAP_CLASS;\r\n\r\n        if (title !== \"\") {\r\n            var titleWrap = document.createElement(\"div\");\r\n            titleWrap.className = CONSTANTS.TITLE_WRAP_CLASS;\r\n            var titleSpan = document.createElement(\"span\");\r\n            titleSpan.className = CONSTANTS.TITLE_CLASS;\r\n            titleSpan.textContent = Utils.translateForKey(title);\r\n            titleSpan.setAttribute(\"data-i18n\", title);\r\n            titleWrap.appendChild(titleSpan);\r\n            rowWrap.appendChild(titleWrap);\r\n        }\r\n\r\n        var selectNode = document.createElement(\"select\");\r\n        selectNode.className = CONSTANTS.EDITOR_ATTR_SELECT_CLASS;\r\n        if (useDefaulOptionNode) {\r\n            var defaultOptionNode = document.createElement(\"option\");\r\n            defaultOptionNode.value = \"\";\r\n            defaultOptionNode.text = Utils.translateForKey(\"Template.selectDefaultText\");\r\n            defaultOptionNode.setAttribute(\"data-i18n\", \"Template.selectDefaultText\");\r\n            selectNode.appendChild(defaultOptionNode);\r\n        }\r\n        for (var idx = 0; idx < options.length; idx++) {\r\n            var optionNode = document.createElement(\"option\");\r\n            optionNode.value = options[idx].value;\r\n            optionNode.text = options[idx].text;\r\n            selectNode.appendChild(optionNode);\r\n        }\r\n\r\n        selectNode.setAttribute(\"data-field-id\", fieldId);\r\n        selectNode.setAttribute(\"data-field-property-name\", fieldPropetyName);\r\n        \r\n        rowWrap.appendChild(selectNode);\r\n        return rowWrap;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttributeSelectNode\r\n     * @name module:Template/Utils.Utils#createAttributeSelectNode\r\n     * @description (Static)   필드의 속성중 Select를 사용하는 Element를 li로 감싸서 만든다.\r\n     *\r\n     * @param {String} fieldID 사용할 Field의 ID\r\n     * @param {String} fieldPropetyName 사용할 Field의 속성 이름\r\n     * @param {Array} options [{value: \"value\", text: \"text\"}] : select에 사용되는 Map Array\r\n     * @param {String} title  Element에 사용할 이름\r\n     * @param {Boolean} useDefaulOptionNode 대상선택을 사용할지 여부\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttributeSelectNode(fieldId, fieldPropetyName, options, title, useDefaulOptionNode = true) {\r\n        var row = document.createElement(\"li\");\r\n        row.className = CONSTANTS.EDITOR_ATTR_CONTENTS_ROW_CLASS;\r\n        var rowWrap = Utils.createAttributeSelectInnerNode(fieldId, fieldPropetyName, options, title, useDefaulOptionNode);\r\n        row.appendChild(rowWrap);\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createDividerNode\r\n     * @name module:Template/Utils.Utils#createDividerNode\r\n     * @description (Static)   li의 구분자를 만든다.\r\n     *\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createDividerNode() {\r\n        var dividerRow = document.createElement(\"li\");\r\n        dividerRow.className = CONSTANTS.DIVIDER_CLASS;\r\n        return dividerRow;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createTextAlignButtonNode\r\n     * @name module:Template/Utils.Utils#createTextAlignButtonNode\r\n     * @description (Static)   필드의 속성중 Text Align Button Element을 만든다.\r\n     *\r\n     * @param {String} fieldID  사용할 Field의 ID\r\n     * @param {String} value  현재의 text align 값\r\n     * @param {callback} changeEventFunc 값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createTextAlignButtonNode(fieldId, value, changeEventFunc) {\r\n        var rowWrap = document.createElement(\"div\");\r\n        rowWrap.className = CONSTANTS.EDITOR_ATTR_ROW_WRAP_CLASS;\r\n\r\n        var titleWrap = document.createElement(\"div\");\r\n        titleWrap.className = CONSTANTS.TITLE_WRAP_CLASS;\r\n        var titleSpan = document.createElement(\"span\");\r\n        titleSpan.className = CONSTANTS.TITLE_CLASS;\r\n        titleSpan.textContent = Utils.translateForKey(\"Template.textAlignText\");\r\n        titleSpan.setAttribute(\"data-i18n\", \"Template.textAlignText\");\r\n        titleWrap.appendChild(titleSpan);\r\n        rowWrap.appendChild(titleWrap);\r\n\r\n        var btnsWrap = document.createElement(\"div\");\r\n        var leftBtn = document.createElement(\"button\");\r\n        leftBtn.classList.add(\"Template-Button\");\r\n        leftBtn.classList.add(\"Text-Align-Left\");\r\n        leftBtn.classList.add(\"Toggle-Button\");\r\n\r\n        var leftIconBtn = document.createElement(\"i\");\r\n        leftBtn.appendChild(leftIconBtn);\r\n\r\n        var centerBtn = document.createElement(\"button\");\r\n        centerBtn.classList.add(\"Template-Button\");\r\n        centerBtn.classList.add(\"Text-Align-Center\");\r\n        centerBtn.classList.add(\"Toggle-Button\");\r\n\r\n        var centerIconBtn = document.createElement(\"i\");\r\n        centerBtn.appendChild(centerIconBtn);\r\n\r\n        var rightBtn = document.createElement(\"button\");\r\n        rightBtn.classList.add(\"Template-Button\");\r\n        rightBtn.classList.add(\"Text-Align-Right\");\r\n        rightBtn.classList.add(\"Toggle-Button\");\r\n\r\n        var rightIconBtn = document.createElement(\"i\");\r\n        rightBtn.appendChild(rightIconBtn);\r\n\r\n        switch (value) {\r\n            case \"left\":\r\n                leftBtn.classList.add(\"Selected\");\r\n                break;\r\n            case \"center\":\r\n                centerBtn.classList.add(\"Selected\");\r\n                break;\r\n            case \"right\":\r\n                rightBtn.classList.add(\"Selected\");\r\n                break;\r\n        }\r\n\r\n        var inputNode = document.createElement(\"input\");\r\n        inputNode.type = \"text\";\r\n        inputNode.style.display = \"none\";\r\n        inputNode.value = value;\r\n        inputNode.setAttribute(\"data-field-id\", fieldId);\r\n        inputNode.setAttribute(\"data-field-property-name\", \"textAlign\");\r\n        inputNode.addEventListener(\"change\", changeEventFunc);\r\n\r\n        leftBtn.addEventListener(\"click\", function (evt) {\r\n            inputNode.value = \"left\";\r\n            inputNode.dispatchEvent(new Event(\"change\"));\r\n            if (!leftBtn.classList.contains(\"Selected\")) {\r\n                leftBtn.classList.toggle(\"Selected\");\r\n            }\r\n            if (rightBtn.classList.contains(\"Selected\")) {\r\n                rightBtn.classList.toggle(\"Selected\");\r\n            }\r\n            if (centerBtn.classList.contains(\"Selected\")) {\r\n                centerBtn.classList.toggle(\"Selected\");\r\n            }\r\n            \r\n        });\r\n        centerBtn.addEventListener(\"click\", function (evt) {\r\n            inputNode.value = \"center\";\r\n            inputNode.dispatchEvent(new Event(\"change\"));\r\n            if (!centerBtn.classList.contains(\"Selected\")) {\r\n                centerBtn.classList.toggle(\"Selected\");\r\n            }\r\n            if (rightBtn.classList.contains(\"Selected\")) {\r\n                rightBtn.classList.toggle(\"Selected\");\r\n            }\r\n            if (leftBtn.classList.contains(\"Selected\")) {\r\n                leftBtn.classList.toggle(\"Selected\");\r\n            }\r\n\r\n        });\r\n        rightBtn.addEventListener(\"click\", function (evt) {\r\n            inputNode.value = \"right\";\r\n            inputNode.dispatchEvent(new Event(\"change\"));\r\n            if (!rightBtn.classList.contains(\"Selected\")) {\r\n                rightBtn.classList.toggle(\"Selected\");\r\n            }\r\n            if (leftBtn.classList.contains(\"Selected\")) {\r\n                leftBtn.classList.toggle(\"Selected\");\r\n            }\r\n            if (centerBtn.classList.contains(\"Selected\")) {\r\n                centerBtn.classList.toggle(\"Selected\");\r\n            }\r\n\r\n        });\r\n\r\n        btnsWrap.appendChild(leftBtn);\r\n        btnsWrap.appendChild(centerBtn);\r\n        btnsWrap.appendChild(rightBtn);\r\n        btnsWrap.appendChild(inputNode);\r\n\r\n        rowWrap.appendChild(btnsWrap);\r\n        return rowWrap;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createTextBoldButtonNode\r\n     * @name module:Template/Utils.Utils#createTextBoldButtonNode\r\n     * @description (Static)  필드의 속성중 Text Bold toggle Button Element을 만든다.\r\n     *\r\n     * @param {String} fieldID  사용할 Field의 ID\r\n     * @param {String} value  현재의 text bold 값\r\n     * @param {callback} changeEventFunc 값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createTextBoldButtonNode(fieldId, value, changeEventFunc) {\r\n        var rowWrap = document.createElement(\"div\");\r\n        rowWrap.className = CONSTANTS.EDITOR_ATTR_ROW_WRAP_CLASS;\r\n\r\n        var titleWrap = document.createElement(\"div\");\r\n        titleWrap.className = CONSTANTS.TITLE_WRAP_CLASS;\r\n        var titleSpan = document.createElement(\"span\");\r\n        titleSpan.className = CONSTANTS.TITLE_CLASS;\r\n        titleSpan.textContent = Utils.translateForKey(\"Template.boldText\");\r\n        titleSpan.setAttribute(\"data-i18n\", \"Template.boldText\");\r\n        titleWrap.appendChild(titleSpan);\r\n        rowWrap.appendChild(titleWrap);\r\n\r\n        var btnsWrap = document.createElement(\"div\");\r\n        var boldBtn = document.createElement(\"button\");\r\n        boldBtn.classList.add(\"Template-Button\");\r\n        boldBtn.classList.add(\"Text-Bold-Button\");\r\n        boldBtn.classList.add(\"Toggle-Button\");\r\n\r\n        var boldBtnIconBtn = document.createElement(\"i\");\r\n        boldBtn.appendChild(boldBtnIconBtn);\r\n\r\n        if (value === \"true\") {\r\n            boldBtn.classList.add(\"Selected\");\r\n        }\r\n\r\n        var inputNode = document.createElement(\"input\");\r\n        inputNode.type = \"text\";\r\n        inputNode.style.display = \"none\";\r\n        inputNode.value = value;\r\n        inputNode.setAttribute(\"data-field-id\", fieldId);\r\n        inputNode.setAttribute(\"data-field-property-name\", \"bold\");\r\n        inputNode.addEventListener(\"change\", changeEventFunc);\r\n\r\n        boldBtn.addEventListener(\"click\", function (evt) {\r\n            if (!boldBtn.classList.contains(\"Selected\")) {\r\n                inputNode.value = \"true\";\r\n            } else {\r\n                inputNode.value = \"false\";\r\n            }\r\n            inputNode.dispatchEvent(new Event(\"change\"));\r\n            boldBtn.classList.toggle(\"Selected\");\r\n\r\n        });\r\n\r\n        btnsWrap.appendChild(boldBtn);\r\n        btnsWrap.appendChild(inputNode);\r\n\r\n        rowWrap.appendChild(btnsWrap);\r\n        return rowWrap;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createTextColorButtonNode\r\n     * @name module:Template/Utils.Utils#createTextColorButtonNode\r\n     * @description (Static)  필드의 속성중 Text Color picker Element을 만든다.\r\n     *\r\n     * @param {String} fieldID  사용할 Field의 ID\r\n     * @param {String} value  현재의 text color 값\r\n     * @param {callback} changeEventFunc 값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createTextColorButtonNode(fieldId, title, value, changeEventFunc) {\r\n        var rowWrap = document.createElement(\"div\");\r\n        rowWrap.className = CONSTANTS.EDITOR_ATTR_ROW_WRAP_CLASS;\r\n\r\n        var titleWrap = document.createElement(\"div\");\r\n        titleWrap.className = CONSTANTS.TITLE_WRAP_CLASS;\r\n        var titleSpan = document.createElement(\"span\");\r\n        titleSpan.className = CONSTANTS.TITLE_CLASS;\r\n        titleSpan.textContent = Utils.translateForKey(title);\r\n        titleSpan.setAttribute(\"data-i18n\", title);\r\n        titleWrap.appendChild(titleSpan);\r\n        rowWrap.appendChild(titleWrap);\r\n\r\n        var btnsWrap = document.createElement(\"div\");\r\n        btnsWrap.className = \"Color-Button-Wrap\";\r\n\r\n        var boldBtn = document.createElement(\"button\");\r\n        boldBtn.classList.add(\"Template-Button\");\r\n        boldBtn.classList.add(\"Color-Button\");\r\n\r\n        var inputNode = document.createElement(\"input\");\r\n        inputNode.type = \"text\";\r\n        inputNode.style.display = \"none\";\r\n        inputNode.value = value;\r\n        inputNode.setAttribute(\"data-field-id\", fieldId);\r\n        inputNode.setAttribute(\"data-field-property-name\", \"fontColor\");\r\n        inputNode.addEventListener(\"change\", changeEventFunc);\r\n\r\n        btnsWrap.appendChild(boldBtn);\r\n        btnsWrap.appendChild(inputNode);\r\n\r\n        rowWrap.appendChild(btnsWrap);\r\n        return rowWrap;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createTextAttrbuteNode\r\n     * @name module:Template/Utils.Utils#createTextAttrbuteNode\r\n     * @description (Static)  필드의 속성중 Text 속성의 Element들을 만든다.\r\n     *\r\n     * @param {String} fieldID  사용할 Field의 ID\r\n     * @param {String} fontColor  현재의 Font Color 값\r\n     * @param {String} fontAlign  현재의 text align 값\r\n     * @param {String} isBold  현재의 text bold 값\r\n     * @param {callback} changeEventFunc  값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createTextAttrbuteNode(fieldId, fontColor, fontAlign, isBold, changeEventFunc) {\r\n        var row = document.createElement(\"li\");\r\n        row.className = CONSTANTS.EDITOR_ATTR_CONTENTS_ROW_CLASS;\r\n        var rowWrap = document.createElement(\"div\");\r\n        rowWrap.className = CONSTANTS.EDITOR_ATTR_ROW_WRAP_CLASS;\r\n        \r\n        var fontAttrTable = document.createElement(\"table\");\r\n        fontAttrTable.style.width = \"100%\";\r\n        var row1 = document.createElement(\"tr\");\r\n        var col1 = document.createElement(\"td\");\r\n        col1.style.paddingRight = \"10px\";\r\n        col1.colSpan = 4;\r\n        var fontFamilyCombo = Utils.createAttributeSelectInnerNode(fieldId, \"fontName\", Utils.fontFamilyComboBox, \"Template.fontNameText\", false);\r\n        col1.appendChild(fontFamilyCombo);\r\n        row1.appendChild(col1);\r\n\r\n        var col2 = document.createElement(\"td\");\r\n        col2.colSpan = 4;\r\n        var fontSizeCombo = Utils.createAttributeSelectInnerNode(fieldId, \"fontSize\", Utils.getFonSizeComboBox(), \"Template.fontSizeText\", false);\r\n        col2.appendChild(fontSizeCombo);\r\n        row1.appendChild(col2);\r\n\r\n        fontAttrTable.appendChild(row1);\r\n\r\n        var row2 = document.createElement(\"tr\");\r\n        var col3 = document.createElement(\"td\");\r\n        col3.style.paddingRight = \"10px\";\r\n        col3.style.paddingTop = \"20px\";\r\n        col3.colSpan = 4;\r\n        row2.appendChild(col3);\r\n\r\n        var alignBtnsNode = Utils.createTextAlignButtonNode(fieldId, fontAlign, changeEventFunc);\r\n        col3.appendChild(alignBtnsNode);\r\n\r\n        var col4 = document.createElement(\"td\");\r\n        col4.style.paddingRight = \"10px\";\r\n        col4.style.paddingTop = \"20px\";\r\n        col4.colSpan = 2;\r\n        var boldBtnNode = Utils.createTextBoldButtonNode(fieldId, isBold, changeEventFunc);\r\n        col4.appendChild(boldBtnNode);\r\n        row2.appendChild(col4);\r\n\r\n        var col5 = document.createElement(\"td\");\r\n        col5.style.paddingRight = \"10px\";\r\n        col5.style.paddingTop = \"20px\";\r\n        col5.colSpan = 2;\r\n        var colorBtnNode = Utils.createTextColorButtonNode(fieldId, \"Template.colorText\", fontColor, changeEventFunc);\r\n        col5.appendChild(colorBtnNode);\r\n        row2.appendChild(col5);\r\n\r\n        fontAttrTable.appendChild(row2);\r\n        rowWrap.appendChild(fontAttrTable);\r\n        row.appendChild(rowWrap);\r\n        \r\n        return {\r\n            row: row,\r\n            fontFamilyCombo: fontFamilyCombo,\r\n            fontSizeCombo: fontSizeCombo,\r\n            colorBtn: colorBtnNode\r\n        };\r\n    }\r\n\r\n     /**\r\n     * @static\r\n     * @function createTextAttrbuteNode\r\n     * @name module:Template/Utils.Utils#createTextMemoAttrbuteNode\r\n     * @description (Static)  메모 속성의 Element들을 만든다.\r\n     *\r\n     * @param {String} fieldID  사용할 Field의 ID\r\n     * @param {String} fontColor  현재의 Font Color 값\r\n     * @param {String} fontAlign  현재의 text align 값\r\n     * @param {String} isBold  현재의 text bold 값\r\n     * @param {callback} changeEventFunc  값이 변할 때 호출되어질 callback\r\n     * @return {Element}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n     static createTextMemoAttrbuteNode(fieldId, fontColor, isBold, backgroundColor, changeEventFunc) {\r\n        let row = document.createElement(\"li\");\r\n        row.className = CONSTANTS.EDITOR_ATTR_CONTENTS_ROW_CLASS;\r\n        let rowWrap = document.createElement(\"div\");\r\n        rowWrap.className = CONSTANTS.EDITOR_ATTR_ROW_WRAP_CLASS;\r\n        \r\n        let fontAttrTable = document.createElement(\"table\");\r\n        fontAttrTable.style.width = \"100%\";\r\n        let row1 = document.createElement(\"tr\");\r\n        let col1 = document.createElement(\"td\");\r\n        col1.style.paddingRight = \"10px\";\r\n        col1.colSpan = 4;\r\n        let fontFamilyCombo = Utils.createAttributeSelectInnerNode(fieldId, \"fontName\", Utils.fontFamilyComboBox, \"Template.fontNameText\", false);\r\n        col1.appendChild(fontFamilyCombo);\r\n        row1.appendChild(col1);\r\n\r\n        let col2 = document.createElement(\"td\");\r\n        col2.colSpan = 4;\r\n        let fontSizeCombo = Utils.createAttributeSelectInnerNode(fieldId, \"fontSize\", Utils.getFonSizeComboBox(), \"Template.fontSizeText\", false);\r\n        col2.appendChild(fontSizeCombo);\r\n        row1.appendChild(col2);\r\n\r\n        fontAttrTable.appendChild(row1);\r\n\r\n        let row2 = document.createElement(\"tr\");\r\n\r\n        let col4 = document.createElement(\"td\");\r\n        col4.style.paddingRight = \"10px\";\r\n        col4.style.paddingTop = \"20px\";\r\n        col4.colSpan = 2;\r\n        let boldBtnNode = Utils.createTextBoldButtonNode(fieldId, isBold, changeEventFunc);\r\n        col4.appendChild(boldBtnNode);\r\n        row2.appendChild(col4);\r\n\r\n        let col5 = document.createElement(\"td\");\r\n        col5.style.paddingRight = \"10px\";\r\n        col5.style.paddingTop = \"20px\";\r\n        col5.colSpan = 2;\r\n        let colorBtnNode = Utils.createTextColorButtonNode(fieldId, \"Template.colorText\", fontColor, changeEventFunc);\r\n        col5.appendChild(colorBtnNode);\r\n        row2.appendChild(col5);\r\n\r\n        \r\n        let col6 = document.createElement(\"td\");\r\n        col6.style.paddingRight = \"10px\";\r\n        col6.style.paddingTop = \"20px\";\r\n        col6.colSpan = 2;\r\n        let backgroundColorBtnNode = Utils.createTextColorButtonNode(fieldId, \"Template.bgColorText\", backgroundColor, changeEventFunc);\r\n        col6.appendChild(backgroundColorBtnNode);\r\n        row2.appendChild(col6);\r\n\r\n        fontAttrTable.appendChild(row2);\r\n        rowWrap.appendChild(fontAttrTable);\r\n        row.appendChild(rowWrap);\r\n        \r\n        return {\r\n            row: row,\r\n            fontFamilyCombo: fontFamilyCombo,\r\n            fontSizeCombo: fontSizeCombo,\r\n            boldBtn: boldBtnNode,\r\n            colorBtn: colorBtnNode,\r\n            backgroundColorBtn: backgroundColorBtnNode\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function assign\r\n     * @name module:Template/Utils.Utils#assign\r\n     * @description (Static)  object에 해당 속성이 있으면 값을 설정한다.\r\n     *\r\n     * @param {Object} obj  사용할 Object\r\n     * @param {Object} prop  사용할 속성\r\n     * @param {Object} value  속성에 사용할 값\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static assign(obj, prop, value) {\r\n        if (typeof prop === \"string\")\r\n            prop = prop.split(\".\");\r\n\r\n        if (prop.length > 1) {\r\n            var e = prop.shift();\r\n            assign(obj[e] =\r\n                    Object.prototype.toString.call(obj[e]) === \"[object Object]\"\r\n                    ? obj[e]\r\n                    : {},\r\n                prop,\r\n                value);\r\n        } else\r\n            obj[prop[0]] = value;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function fieldAncestors\r\n     * @name module:Template/Utils.Utils#fieldAncestors\r\n     * @description (Static) Field에 상속된 부모들을 찾는다..\r\n     *\r\n     * @param {Object} anyclass : 찾을 field\r\n     * @return {Array}: 상속된 부모들\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static fieldAncestors (anyclass)\r\n    {\r\n        switch (true) {\r\n        case (anyclass === undefined): return;\r\n        case (anyclass === null): return [];\r\n        default:\r\n            return [anyclass, ...(Utils.fieldAncestors (Object.getPrototypeOf (anyclass)))];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function findSameAncestor\r\n     * @name module:Template/Utils.Utils#findSameAncestor\r\n     * @description (Static)  Field들의 공통으로 상속된 부모를 찾는다..\r\n     *\r\n     * @param {Array}  fieldList 찾을 field 리스트\r\n     * @return {Object}  공통으로 상속된 부모\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static findSameAncestor(fieldList) {\r\n        // 첫번째 필드의 조상들을 조사한다.\r\n        var firstAncestors = Utils.fieldAncestors(fieldList[0]);\r\n        var sameAncestor = firstAncestors[0];\r\n        // 필드의 갯수가 1개이면 그냥 리턴한다.\r\n        if (fieldList.length === 1) {\r\n            return sameAncestor;\r\n        }\r\n        var cnt = 0;\r\n        // 2번째 필드부터 루프를 한다.\r\n        for (var idx = 1; idx < fieldList.length; idx++) {\r\n            var ancestors = Utils.fieldAncestors(fieldList[idx]);\r\n            // 부모가 1개이면 BaseField이므로 그대로 리턴한다.\r\n            if (ancestors.length === 1) {\r\n                return ancestors[0];\r\n            }\r\n            var startIdx = 0;\r\n            // 첫번째 필드의 조상을 루프하는 index이므로 1부터 시작한다.\r\n            var startIdx2 = 1;\r\n\r\n            // 현재 공통으로 선택된 필드의 조상보다 지금 조사하는 필드의 조상이 갯수가 적으면 \r\n            // 전부 조사할 필요가 없이 둘의 차이나는 만큼 부터 조사한다.\r\n            // ex) TextField와 ImageField를 비교해보면\r\n            // Text TextBase Base, Image Base 이렇게 조상들이 존재한다.\r\n            // 이렇게 1번째는 무조건 다르니 1번째는 패스하고 다음부터 조사를 한다.\r\n            const sameAncestorParents = Utils.fieldAncestors(sameAncestor);\r\n            if (sameAncestorParents.length >= ancestors.length) {\r\n                startIdx = sameAncestorParents.length - ancestors.length;\r\n            }\r\n            for (var secIdx = startIdx; secIdx < ancestors.length; secIdx++) {\r\n                var ancestor = ancestors[secIdx];\r\n                var findSameAncestor = false;\r\n                \r\n                for (var firstIdx = startIdx2; firstIdx < firstAncestors.length; firstIdx++) {\r\n                    cnt++;\r\n                    if (Object.getPrototypeOf(ancestor) == Object.getPrototypeOf(firstAncestors[firstIdx])) {\r\n                        // 같을 경우 +1을 하는 이유는 prototype의 constructor가 하나 위를 바라보기 때문이다.\r\n                        sameAncestor = firstAncestors[firstIdx + 1];\r\n                        const sameAncestorParents = Utils.fieldAncestors(sameAncestor);\r\n                        // 길이가 2면 BaseField이므로 그대로 리턴한다.\r\n                        if (sameAncestorParents.length === 2) {\r\n                            return sameAncestor;\r\n                        }\r\n                        findSameAncestor = true;\r\n                        startIdx2 = firstIdx + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                if (findSameAncestor) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return sameAncestor;\r\n    }\r\n\r\n    static findSameAncestor2(fieldList) {\r\n        if (fieldList.length === 1) {\r\n            return fieldList[0];\r\n        }\r\n        const firstFieldAncestors = fieldList[0].ancestors();\r\n        let commonAncestor = firstFieldAncestors[0];\r\n        for (let idx = 1; idx < fieldList.length; ++idx) {\r\n            if (commonAncestor === \"BF\") {\r\n                return commonAncestor;\r\n            }\r\n            const fieldAncestors = fieldList[idx].ancestors();\r\n            if (fieldAncestors.includes(commonAncestor)) {\r\n                continue;\r\n            }\r\n\r\n            for (let idx2 = 1; idx2 < firstFieldAncestors.length; ++idx2) {\r\n                if (fieldAncestors.includes(firstFieldAncestors[idx2])) {\r\n                    commonAncestor = firstFieldAncestors[idx2];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return commonAncestor;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function getUserInfoOptsList\r\n     * @name module:Template/Utils.Utils#getUserInfoOptsList\r\n     * @description (Static)  서명자들의 정보 리스트를 반환한다.\r\n     *\r\n     * @return {Array} 서명자들의 정보 리스트\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static getUserInfoOptsList() {\r\n        return Utils.userInfoOptionList;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function setUserInfoOptsList\r\n     * @name module:Template/Utils.Utils#setUserInfoOptsList\r\n     * @description (Static)  서명자들의 정보 리스트를 설정한다.\r\n     *\r\n     * @param {Array} fieldList  서명자들의 정보 리스트\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static setUserInfoOptsList(opts) {\r\n        Utils.userInfoOptionList = opts;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function getUserInfoOptsListCount\r\n     * @name module:Template/Utils.Utils#getUserInfoOptsListCount\r\n     * @description (Static) 서명자들의 정보 리스트 길이를 반환한다.\r\n     *\r\n     * @return {Number}: 서명자들의 정보 리스트길이\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static getUserInfoOptsListCount() {\r\n        return Utils.userInfoOptionListCount;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function setUserInfoOptsListCount\r\n     * @name module:Template/Utils.Utils#setUserInfoOptsListCount\r\n     * @description (Static)  서명자들의 정보 리스트 길이를 설정한다.\r\n     *\r\n     * @param {Number} fieldList 서명자들의 정보 리스트 길이\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static setUserInfoOptsListCount(count) {\r\n        Utils.userInfoOptionListCount = count;\r\n    }\r\n\r\n\r\n    /**\r\n     * @static\r\n     * @function getDVFieldOptsList\r\n     * @name module:Template/Utils.Utils#getDVFieldOptsList\r\n     * @description (Static)   기본값으로 사용할 값들의 리스트를 반환한다.\r\n     *\r\n     * @return {Array} 기본값으로 사용할 값들의 리스트\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static getDVFieldOptsList() {\r\n        return Utils.dvFieldOptionList;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function setDVFieldOptsList\r\n     * @name module:Template/Utils.Utils#setDVFieldOptsList\r\n     * @description (Static)  기본값으로 사용할 값들의 리스트를 설정한다.\r\n     *\r\n     * @param fieldList {Array}  기본값으로 사용할 값들의 리스트\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static setDVFieldOptsList(opts) {\r\n        Utils.dvFieldOptionList = opts;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function getSignTabShowOpt\r\n     * @name module:Template/Utils.Utils#getSignTabShowOpt\r\n     * @description (Static)   서명탭 보임/안보임 기본값으로 사용할 값들을 반환한다.\r\n     *\r\n     * @return {Array} 서명탭 보임/안보임 기본값으로 사용할 값들 \r\n     * @Date : 2023. 12. 27\r\n     */\r\n    static getSignTabShowOpt() {\r\n        return Utils.signTabShowOpt;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function setSignTabShowOpt\r\n     * @name module:Template/Utils.Utils#setSignTabShowOpt\r\n     * @description (Static)  서명탭 보임/안보임 기본값으로 사용할 값들을 설정한다.\r\n     *\r\n     * @param signTabShowOpt {Object}  서명탭 보임/안보임 기본값으로 사용할 값들\r\n     * @Date : 2023. 12. 27\r\n     */\r\n    static setSignTabShowOpt(opts) {\r\n        Utils.signTabShowOpt = opts;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function getFonSizeComboBox\r\n     * @name module:Template/Utils.Utils#getFonSizeComboBox\r\n     * @description (Static)  속성에서 사용할 폰트 사이즈 리스트를 반환한다.\r\n     *\r\n     * @return {Array} 속성에서 사용할 폰트 사이즈 리스트\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static getFonSizeComboBox() {\r\n        if (Utils.fontSizeComboBox.length > 0) {\r\n            return Utils.fontSizeComboBox;\r\n        }\r\n        for (var idx = 1; idx <= 50; idx++) {\r\n            Utils.fontSizeComboBox.push({\r\n                text: idx + \"px\",\r\n                value: idx\r\n            });\r\n        }\r\n        return Utils.fontSizeComboBox;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function getSignPenWidthComboBox\r\n     * @name module:Template/Utils.Utils#getSignPenWidthComboBox\r\n     * @description (Static) 속성에서 사용할 펜 두께 리스트를 반환한다.\r\n     *\r\n     * @return {Array} 속성에서 사용할 펜 두께 리스트\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static getSignPenWidthComboBox() {\r\n        //console.log(Utils.signPenWidthComboBox.length);\r\n        if (Utils.signPenWidthComboBox.length > 0) {\r\n            return Utils.signPenWidthComboBox;\r\n        }\r\n        for (var idx = 1; idx <= 20; idx += 1) {\r\n            Utils.signPenWidthComboBox.push({\r\n                text: idx,\r\n                value: idx\r\n            });\r\n        }\r\n        return Utils.signPenWidthComboBox;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAttrbutePopup\r\n     * @name module:Template/Utils.Utils#createAttrbutePopup\r\n     * @description (Static) 속성 팝업의 Element를 만든다.\r\n     *\r\n     * @param {Element} ownerNode 해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @return {Element} 속성 팝업의 element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAttrbutePopup(ownerNode, ownerFieldBBox) {\r\n        let attrDiv = ownerNode.querySelector(\" .\" + CONSTANTS.EDITOR_ATTR_CLASS);\r\n        if (attrDiv === null) {\r\n            attrDiv = document.createElement(\"div\");\r\n            attrDiv.classList.add(CONSTANTS.EDITOR_ATTR_CLASS);\r\n            attrDiv.classList.add(CONSTANTS.SHOW_CLASS);\r\n            let viewer = ownerNode.querySelector(\" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER);\r\n            viewer.appendChild(attrDiv);\r\n        } else {\r\n            Utils.removeAllChildNode(attrDiv);\r\n        }\r\n        if (!attrDiv.classList.contains(CONSTANTS.SHOW_CLASS)) {\r\n            attrDiv.classList.add(CONSTANTS.SHOW_CLASS);\r\n        }\r\n        attrDiv.style.display = \"block\";\r\n        if (ownerFieldBBox !== null && ownerFieldBBox !== undefined) {\r\n            attrDiv.style.left = ownerFieldBBox.x + \"px\";\r\n            attrDiv.style.top = ownerFieldBBox.y + ownerFieldBBox.height + 10 + \"px\";\r\n        }\r\n        return attrDiv;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function showAsteriskDiv\r\n     * @name module:Template/Utils.Utils#showAsteriskDiv\r\n     * @description (Static) 필수 표시 마크를 보이거나 숨긴다.\r\n     *\r\n     * @param {Element} ownerNode  해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {String} fieldId  필수 마크가 사용되는 필드의 id\r\n     * @param {Boolean} isShow  true면 보이고 false면 숨긴다.\r\n     * @param {Number} fieldX  필수 마크가 사용되는 필드의 x좌표\r\n     * @param {Number} fieldY  필수 마크가 사용되는 필드의 y좌표\r\n     * @param {Number} fieldHeight  필수 마크가 사용되는 필드의 높이\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showAsteriskDiv(ownerNode, fieldId, isShow, fieldX, fieldY, fieldHeight) {\r\n        let asteriskDiv = ownerNode.querySelector(\" #\" + fieldId + \"_asterisk\");\r\n        if (asteriskDiv === null) {\r\n            return;\r\n        }\r\n    //    console.log(\"showAsteriskDiv   \" + isShow);\r\n        if (isShow) {\r\n            if (fieldX === null || fieldY === null || fieldHeight === null ||\r\n                fieldX === undefined || fieldY === undefined || fieldHeight === undefined) {\r\n                return;\r\n            }\r\n            let asteriskHeight = CONSTANTS.ASTREISK_DIV_HEIGHT;\r\n            asteriskDiv.style.left = (fieldX - 6 - asteriskHeight) + \"px\";\r\n            let asteriskY = fieldY + (fieldHeight / 2) - (asteriskHeight / 2);\r\n            asteriskDiv.style.top = asteriskY + \"px\";\r\n\r\n            if (!asteriskDiv.classList.contains(CONSTANTS.SHOW_CLASS)) {\r\n                asteriskDiv.classList.toggle(CONSTANTS.SHOW_CLASS);\r\n            }\r\n            if (asteriskDiv.classList.contains(CONSTANTS.HIDE_CLASS)) {\r\n                asteriskDiv.classList.toggle(CONSTANTS.HIDE_CLASS);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (asteriskDiv.classList.contains(CONSTANTS.SHOW_CLASS)) {\r\n            asteriskDiv.classList.toggle(CONSTANTS.SHOW_CLASS);\r\n        }\r\n        if (!asteriskDiv.classList.contains(CONSTANTS.HIDE_CLASS)) {\r\n            asteriskDiv.classList.toggle(CONSTANTS.HIDE_CLASS);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createAsteriskDiv\r\n     * @name module:Template/Utils.Utils#createAsteriskDiv\r\n     * @description (Static) 필수 표시 마크의 Element를 만든다.\r\n     *\r\n     * @param {Element} ownerNode 해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {String} fieldId  필수 마크가 사용되는 필드의 id\r\n     * @return {Element} 필수 표시 마크의 element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createAsteriskDiv(ownerNode, fieldId) {\r\n        let asteriskDiv = ownerNode.querySelector(\" #\" + fieldId + \"_asterisk\");\r\n        if (asteriskDiv === null) {\r\n            asteriskDiv = document.createElement(\"div\");\r\n            asteriskDiv.classList.add(CONSTANTS.ASTERISK_ICON_CLASS);\r\n            asteriskDiv.style.position = \"absolute\"\r\n            asteriskDiv.style.width = \"11px\";\r\n            asteriskDiv.style.height = \"12px\";\r\n            let layerDiv = ownerNode.querySelector(\" #\" + CONSTANTS.TEMPLATE_LAYER_ASTERISK_NAME);\r\n            layerDiv.appendChild(asteriskDiv);\r\n        }\r\n        return asteriskDiv;\r\n    }\r\n    /**\r\n     * @static\r\n     * @function isShowAsteriskDiv\r\n     * @name module:Template/Utils.Utils#isShowAsteriskDiv\r\n     * @description (Static) 필수 표시 마크가 보이는지 여부를 반환한다.\r\n     *\r\n     * @param {Element} ownerNode  해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {String} fieldId  필수 마크가 사용되는 필드의 id\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static isShowAsteriskDiv(ownerNode, fieldId) {\r\n        let asteriskDiv = ownerNode.querySelector(\" #\" + fieldId + \"_asterisk\");\r\n        if (asteriskDiv === null) {\r\n            return false;\r\n        }\r\n\r\n        if (asteriskDiv.classList.contains(CONSTANTS.SHOW_CLASS)) {\r\n            return true;\r\n        }\r\n        if (asteriskDiv.classList.contains(CONSTANTS.HIDE_CLASS)) {\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function createFieldDeleteBtn\r\n     * @name module:Template/Utils.Utils#createFieldDeleteBtn\r\n     * @description (Static) 필드의 Delete버튼의 Element를 만든다.\r\n     *\r\n     * @param {Element} ownerNode  해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {CallBack} btnClickEvtHandler  버튼을 눌렀을 때 동작할 Handler\r\n     * @return {Element} 필드의 Delete버튼의 element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static createFieldDeleteBtn(ownerNode, btnClickEvtHandler) {\r\n        let deleteBtnDiv = ownerNode.querySelector(\" .\" + CONSTANTS.FIELD_DELETE_BUTTON_CLASS);\r\n        if (deleteBtnDiv === null) {\r\n            deleteBtnDiv = document.createElement(\"div\");\r\n            deleteBtnDiv.classList.add(CONSTANTS.FIELD_DELETE_BUTTON_CLASS);\r\n            deleteBtnDiv.classList.add(CONSTANTS.SHOW_CLASS);\r\n            let viewer = ownerNode.querySelector(\" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER);\r\n            viewer.appendChild(deleteBtnDiv);\r\n        }\r\n        if (!deleteBtnDiv.classList.contains(CONSTANTS.SHOW_CLASS)) {\r\n            deleteBtnDiv.classList.add(CONSTANTS.SHOW_CLASS);\r\n        }\r\n        if (deleteBtnDiv.classList.contains(CONSTANTS.HIDE_CLASS)) {\r\n            deleteBtnDiv.classList.toggle(CONSTANTS.HIDE_CLASS);\r\n        }\r\n        \r\n        deleteBtnDiv.addEventListener(\"click\", btnClickEvtHandler);\r\n        return deleteBtnDiv;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function repositionFieldDeleteBtn\r\n     * @name module:Template/Utils.Utils#repositionFieldDeleteBtn\r\n     * @description (Static) 필드의 Delete버튼의 위치를 조정한다.\r\n     *\r\n     * @param {Element} ownerNode  해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {Number} x  Field의 X좌표\r\n     * @param {Number} y  Field의 y좌표\r\n     * @param {Number} width  Field의 width\r\n     * @return {Element} 필드의 Delete버튼의 element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static repositionFieldDeleteBtn(ownerNode, x, y, width) {\r\n\r\n        let deleteBtnDiv = ownerNode.querySelector(\" .\" + CONSTANTS.FIELD_DELETE_BUTTON_CLASS);\r\n        if (deleteBtnDiv === null) {\r\n            console.log(\"deleteBtnDiv empty\");\r\n            return;\r\n        }\r\n        if (deleteBtnDiv.classList.contains(CONSTANTS.HIDE_CLASS)) {\r\n            deleteBtnDiv.classList.toggle(CONSTANTS.HIDE_CLASS);\r\n        }\r\n        deleteBtnDiv.style.left = x + width + 10 + \"px\";\r\n        deleteBtnDiv.style.top = y + 10 + \"px\";\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function addSignSvgToCanvas\r\n     * @name module:Template/Utils.Utils#addSignSvgToCanvas\r\n     * @description (Static) canvas에 SVG를 추가한다.\r\n     *\r\n     * @param {Object} field  추가할 canvas의 Sign Field Object\r\n     * @param {Element} canvasDiv  canvas의 Element\r\n     * @param {Number} signWidth  서명필드의 Width\r\n     * @param {Number} signHeight  서명필드의 height\r\n     * @param {String} svg  SVG String\r\n     * @return {Object} Fabric canvas Object: SVG데이터가 추가된 Canvas\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static addSignSvgToCanvas(field, canvasDiv, signWidth, signHeight, svg) {\r\n        let canvasObj = canvasDiv;\r\n        if (canvasDiv === null || canvasDiv === undefined) {\r\n            canvasObj = field.m_id + \"_canvas\";\r\n        }\r\n        let staticCanvs1 = new fabric.StaticCanvas(canvasObj, { isDrawingMode: false });\r\n        staticCanvs1.setHeight(signHeight);\r\n        staticCanvs1.setWidth(signWidth);\r\n\r\n        fabric.loadSVGFromString(svg, function (objects, options) {\r\n            var obj = fabric.util.groupSVGElements(objects, options);\r\n            let xScale = staticCanvs1.width / obj.width;\r\n            let yScale = staticCanvs1.height / obj.height;\r\n            const scale1 = xScale > yScale ? yScale : xScale;\r\n            obj.scale(scale1);\r\n\r\n            obj.strokeWidth = obj.strokeWidth / scale1;\r\n            if (obj._objects !== null && obj._objects !== undefined) {\r\n                let objects = obj._objects;\r\n                for (var idx = 0; idx < objects.length; ++idx) {\r\n                    objects[idx].strokeWidth = objects[idx].strokeWidth / scale1;\r\n                }\r\n            }\r\n            staticCanvs1.add(obj).centerObject(obj).renderAll();\r\n            obj.setCoords();\r\n        }, \r\n         null,\r\n         {crossOrigin: 'anonymous' // CORS 설정\r\n        });\r\n        return staticCanvs1;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function addObjectsToCanvas\r\n     * @name module:Template/Utils.Utils#addObjectsToCanvas\r\n     * @description (Static) canvas에 Objects를 추가한다.\r\n     *\r\n     * @param {Element} ownerNode  해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {Object} field  추가할 canvas의 Sign Field Object\r\n     * @param {Element} canvasDiv  canvas의 Element\r\n     * @param {Number} signWidth  서명필드의 Width\r\n     * @param {Number} signHeight  서명필드의 height\r\n     * @param {Array} objects  : Path의 리스트\r\n     * @param {Number} orgWidth  추가될 Objects의 Width\r\n     * @param {Number} orgHeight  : 추가될 Objects의 height\r\n     * @return {Object} Fabric canvas Object: Objects가 추가된 Canvas\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static addObjectsToCanvas(_ownerNode, field, canvasDiv, signWidth, signHeight, objects, orgWidth, orgHeight) {\r\n        let canvasObj = canvasDiv;\r\n        if (canvasDiv === null || canvasDiv === undefined) {\r\n            let canvasId = field.m_id + \"_canvas\";\r\n            canvasObj = _ownerNode.querySelector(\"#\" + canvasId);\r\n        }\r\n        let staticCanvs1 = new fabric.StaticCanvas(canvasObj, { isDrawingMode: false });\r\n        staticCanvs1.setHeight(signHeight);\r\n        staticCanvs1.setWidth(signWidth);\r\n        let xScale = staticCanvs1.width / orgWidth;\r\n        let yScale = staticCanvs1.height / orgHeight;\r\n        const scale1 = xScale > yScale ? yScale : xScale;\r\n       // console.log(scale1);\r\n        fabric.util.enlivenObjects(objects, function (objs) {\r\n            var origRenderOnAddRemove = staticCanvs1.renderOnAddRemove;\r\n            staticCanvs1.renderOnAddRemove = false;\r\n            let gotoCenter = true;\r\n            if (objs.length > 1) {\r\n                gotoCenter = false;\r\n            }\r\n\r\n            objs.forEach(function (o) {\r\n                let left = o.left * scale1;\r\n                let top = o.top * scale1;\r\n                if (gotoCenter) {\r\n                   left = ((staticCanvs1.width - o.width * scale1) / 2);\r\n                   top = ((staticCanvs1.height - o.height * scale1) / 2);                    \r\n                }\r\n                o.set({\r\n                    left: left,\r\n                    top: top,\r\n                    scaleY: scale1,\r\n                    scaleX: scale1,\r\n                    strokeWidth: o.strokeWidth / scale1\r\n                });\r\n                staticCanvs1.add(o);\r\n            });\r\n\r\n            staticCanvs1.renderOnAddRemove = origRenderOnAddRemove;\r\n            staticCanvs1.renderAll();\r\n            staticCanvs1.calcOffset();\r\n            if (objs.length > 1) {\r\n                var objs = staticCanvs1.getObjects();\r\n                var group = new fabric.Group(objs, {\r\n                });\r\n                group.set({\r\n                    left: ((staticCanvs1.width - group.width ) / 2),\r\n                    top: ((staticCanvs1.height - group.height ) / 2)\r\n                })\r\n                group.setCoords();\r\n                staticCanvs1.renderAll();\r\n            }\r\n        });\r\n\r\n        return staticCanvs1;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function cloneObject\r\n     * @name module:Template/Utils.Utils#cloneObject\r\n     * @description (Static)  Object deep copy\r\n     *\r\n     * @param {Object} toObj  복사할 object\r\n     * @return {Object}  복사된 object\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static cloneObject(obj) {\r\n        var clone = {};\r\n        for (var key in obj) {\r\n            if (typeof obj[key] == \"object\" && obj[key] != null) {\r\n                if (Array.isArray(obj[key])) {\r\n                    clone[key] = [...obj[key]];\r\n                } else {\r\n                    clone[key] = Utils.cloneObject(obj[key]);\r\n                }\r\n            } else {\r\n                clone[key] = obj[key];\r\n            }\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function cloneObjectToObject\r\n     * @name module:Template/Utils.Utils#cloneObjectToObject\r\n     * @description (Static) fromObj의 데이터를 toObj로 deep copy\r\n     *\r\n     * @param {Object} fromObj 복사할 object\r\n     * @param {Object} toObj  복사될 object\r\n     * @return {Object} 복사된 object\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static cloneObjectToObject(fromObj, toObj) {\r\n        for (var key in fromObj) {\r\n            if (key === \"pages\" || key === \"fields\") {\r\n                continue;\r\n            }\r\n            if (typeof fromObj[key] == \"object\" && fromObj[key] != null) {\r\n                toObj[key] = Utils.cloneObject(fromObj[key]);\r\n            } else {\r\n                toObj[key] = fromObj[key];\r\n            }\r\n        }\r\n\r\n        return toObj;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function cloneFabricCanvas\r\n     * @name module:Template/Utils.Utils#cloneFabricCanvas\r\n     * @description (Static)  canvas에 Objects를 추가한다.\r\n     *\r\n     * @param {Object} canvasObj  Object가 추가될 Canvas\r\n     * @param {Array}  objects 복사될 Object의 리스트\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static cloneFabricCanvas(canvasObj, objects) {\r\n        fabric.util.enlivenObjects(objects, function (objs) {\r\n            var origRenderOnAddRemove = canvasObj.renderOnAddRemove;\r\n            canvasObj.renderOnAddRemove = false;\r\n\r\n            objs.forEach(function (o) {\r\n                canvasObj.add(o);\r\n            });\r\n            canvasObj.renderOnAddRemove = origRenderOnAddRemove;\r\n            canvasObj.renderAll();\r\n            canvasObj.calcOffset();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function isStringEmpty\r\n     * @name module:Template/Utils.Utils#isStringEmpty\r\n     * @description (Static) 문자열이 비어있는지 확인한다.\r\n     *\r\n     * @param {String} str 확인할 문자열\r\n     * @return {Boolean} 비어있으면 true 비어있지 않으면 false\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static isStringEmpty(str) {\r\n        if (str === null) {\r\n            return true;\r\n        }\r\n        if (str === \"\") {\r\n            return true;\r\n        }\r\n        if (str === undefined) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function mergeRect\r\n     * @name module:Template/Utils.Utils#mergeRect\r\n     * @description (Static)  두 Rect를 합친다.\r\n     *\r\n     * @param {Object} r1 {left: 0, right: 0, top: 0, right: 0} 합쳐야되는 Rect Object\r\n     * @param {Object} r2 {left: 0, right: 0, top: 0, right: 0} 합쳐야되는 Rect Object\r\n     * @return {Object} {left: 0, right: 0, top: 0, right: 0, x: 0, y: 0, width: 0, height: 0}: 합쳐진 Rect\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static mergeRect(r1, r2) {\r\n        return {\r\n            left: Math.min(r1.left, r2.left),\r\n            top: Math.min(r1.top, r2.top),\r\n            right: Math.max(r1.right, r2.right),\r\n            bottom: Math.max(r1.bottom, r2.bottom),\r\n            x: Math.min(r1.left, r2.left),\r\n            y: Math.min(r1.top, r2.top),\r\n            width: Math.abs(Math.max(r1.right, r2.right) - Math.min(r1.left, r2.left)),\r\n            height: Math.abs(Math.max(r1.bottom, r2.bottom) - Math.min(r1.top, r2.top)),\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function boundingRectToRect\r\n     * @name module:Template/Utils.Utils#boundingRectToRect\r\n     * @description (Static) BoundingRect를 여기서 사용할 Rect Object로 변경\r\n     *\r\n     * @param {Object} rect {left: 0, with: 0, width: 0, height: 0} Bounding Rect Object\r\n     * @return {Object} {left: 0, right: 0, top: 0, right: 0}: 여기서 사용할 Rect Object\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static boundingRectToRect(rect) {\r\n        return {\r\n            left: rect.left,\r\n            top: rect.top,\r\n            right: rect.left + rect.width,\r\n            bottom: rect.top + rect.height\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function mergeObjectsRect\r\n     * @name module:Template/Utils.Utils#mergeObjectsRect\r\n     * @description (Static) Canvas의 Path Objects의 Rect들을 하나로 합친다.\r\n     *\r\n     * @param {Object} canvas Fabric canvas: Path Objects가 있는 canvas\r\n     * @return {Object} {left: 0, right: 0, top: 0, right: 0}: 여기서 사용할 Rect Object\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static mergeObjectsRect(canvas) {\r\n        let rect = null;\r\n        canvas.forEachObject(function (obj) {\r\n            var bound = obj.getBoundingRect();\r\n            if (rect === null) {\r\n                rect = Utils.mergeRect(Utils.boundingRectToRect(bound), Utils.boundingRectToRect(bound));\r\n            } else {\r\n                rect = Utils.mergeRect(rect, Utils.boundingRectToRect(bound));\r\n            }\r\n        })\r\n        return rect;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function mergeFieldsBBox\r\n     * @name module:Template/Utils.Utils#mergeFieldsBBox\r\n     * @description (Static) Field List의 BBox들을 하나로 합친다.\r\n     *\r\n     * @param {Array} fields Field의 배열\r\n     * @return {Object} {left: 0, right: 0, top: 0, right: 0}: 여기서 사용할 Rect Object\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static mergeFieldsBBox(fields) {\r\n        let rect = null;\r\n        for (var idx = 0; idx < fields.length; idx += 1) {\r\n            let bound = fields[idx].getBBox();\r\n            if (rect === null) {\r\n                rect = Utils.mergeRect(Utils.boundingRectToRect(bound), Utils.boundingRectToRect(bound));\r\n            } else {\r\n                rect = Utils.mergeRect(rect, Utils.boundingRectToRect(bound));\r\n            }\r\n        }\r\n        return rect;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function imageFileToBase64\r\n     * @name module:Template/Utils.Utils#imageFileToBase64\r\n     * @description (Static) Image파일을 읽어 Base64 String으로 반환한다.\r\n     *\r\n     * @param {Object} file File: 이미지 파일의 File Object\r\n     * @param {Callback} callBackFunc  Base64 문자열을 받을 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static imageFileToBase64(file, callBackFunc) {\r\n        if (file === undefined || file === null) {\r\n            return null;\r\n        }\r\n        if (!file.type.startsWith('image/')) { return null; }\r\n\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            callBackFunc(reader.result);\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function changeLocale\r\n     * @name module:Template/Utils.Utils#changeLocale\r\n     * @description (Static) 현재 언어를 파라미터에 맞게 변환한다.\r\n     *\r\n     * @param {String} locale 바꿀 언어\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static changeLocale(locale) {\r\n        Utils.locale = locale;\r\n        Utils.translator.translatePageTo(locale);\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function translateForKey\r\n     * @name module:Template/Utils.Utils#translateForKey\r\n     * @description (Static) 키에 해당하는 문자열을 현재 언어로 바꾼다.\r\n     *\r\n     * @param {String} key 바꿀 문자열에 해당하는 키\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static translateForKey(key) {\r\n        return Utils.translator.translateForKey(key, Utils.locale);\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function translatorFileLocation\r\n     * @name module:Template/Utils.Utils#translatorFileLocation\r\n     * @description (Static) 다국어 언어 파일의 위치를 지정한다.\r\n     * @example\r\n     * localhost:5500/js/pdf_form/i18n의 경우  \"/js/pdf_form/i18n\"\r\n     * \r\n     * @param {String} filesLocation 언어파일의 위치(절대 경로)\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static translatorFileLocation(filesLocation) {\r\n        Utils.translator.config.filesLocation = filesLocation;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function addTranslator\r\n     * @name module:Template/Utils.Utils#addTranslator\r\n     * @description (Static) 다국어 언어를 추가한다.\r\n     * @example\r\n     * addTranslator(\"jp\", jsonData)\r\n     * \r\n     * @param {String} locale 언어 이름\r\n     * @param {Object} langData i18n/ko.json과 같은 양식으로 된 JSON을 파싱한 데이터\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static addTranslator(locale, langData) {\r\n        Utils.translator.add(locale, langData);\r\n    }\r\n\r\n    static appendFontFamily(fontFamilyArr) {\r\n        Utils.fontFamilyComboBox = Utils.fontFamilyComboBox.concat(fontFamilyArr);\r\n    }\r\n\r\n    static generate_uuidv4() {\r\n        return Math.random().toString(36).substring(2, 15) +\r\n        Math.random().toString(36).substring(2, 15);\r\n     }\r\n}\r\n","\r\n/**\r\n * @module Template/Field\r\n */\r\n\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\n\r\n/**\r\n * @description 필드들의 기본이 되는 Class\r\n * \r\n * @property {String} m_id {@link module:Template/Field.BaseField#m_id}\r\n * @property {Number} m_x {@link module:Template/Field.BaseField#m_x}\r\n * @property {Number} m_y {@link module:Template/Field.BaseField#m_y}\r\n * @property {Number} m_width {@link module:Template/Field.BaseField#m_width}\r\n * @property {Number} m_height {@link module:Template/Field.BaseField#m_height}\r\n * @property {Number} m_pageNo {@link module:Template/Field.BaseField#m_pageNo}\r\n * @property {Number} m_pdfX {@link module:Template/Field.BaseField#m_pdfX}\r\n * @property {Number} m_pdfX2 {@link module:Template/Field.BaseField#m_pdfX2}\r\n * @property {Number} m_pdfY {@link module:Template/Field.BaseField#m_pdfY}\r\n * @property {Number} m_pdfY2 {@link module:Template/Field.BaseField#m_pdfY2}\r\n * @property {String} m_type {@link module:Template/Field.BaseField#m_type}\r\n * @property {Number} m_fontSize {@link module:Template/Field.BaseField#m_fontSize}\r\n * @property {String} m_fontName {@link module:Template/Field.BaseField#m_fontName}\r\n * @property {String} m_fontWeight {@link module:Template/Field.BaseField#m_fontWeight}\r\n * @property {String} m_fontStyle {@link module:Template/Field.BaseField#m_fontStyle}\r\n * @property {String} m_fontColor {@link module:Template/Field.BaseField#m_fontColor}\r\n * @property {String} m_kind {@link module:Template/Field.BaseField#m_kind}\r\n * @property {Boolean} m_isRemoved {@link module:Template/Field.BaseField#m_isRemoved}\r\n * @property {String} m_value {@link module:Template/Field.BaseField#m_value}\r\n * @property {String} m_ownerId {@link module:Template/Field.BaseField#m_ownerId}\r\n * @property {String} m_fieldId {@link module:Template/Field.BaseField#m_fieldId}\r\n * @property {String} m_required {@link module:Template/Field.BaseField#m_required}\r\n * \r\n * @property {Function} fromJson {@link module:Template/Field.BaseField#fromJson}\r\n * @property {Function} getBBox {@link module:Template/Field.BaseField#getBBox}\r\n * @property {Function} fieldName {@link module:Template/Field.BaseField#fieldName}\r\n * @property {Function} showFieldAttribute {@link module:Template/Field.BaseField#showFieldAttribute}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.BaseField#showFieldsAttribute}\r\n * @FileName BaseField.js\r\n * @since 2021.05.31\r\n */\r\nexport class BaseField {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     * @param width 필드의 가로길이\r\n     * @param height 필드의 세로길이\r\n     * \r\n     */\r\n    constructor(id, pageNo, x, y, width, height) {\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_id\r\n         * @description 필드의 고유 ID\r\n         * @example\r\n         * // getter id()\r\n         * // setter id(val)\r\n         */\r\n        this.m_id = id;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_x\r\n         * @description 필드의 svg상의 x 좌표\r\n         * @example\r\n         * // getter x()\r\n         * // setter x(val)\r\n         */\r\n        this.m_x = x;\r\n\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_y\r\n         * @description 필드의 svg상의 y 좌표\r\n         * @example\r\n         * // getter y()\r\n         * // setter y(val)\r\n         */\r\n        this.m_y = y;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_width\r\n         * @description 필드의 svg상의 가로 길이\r\n         * @example\r\n         * // getter width()\r\n         * // setter width(val)\r\n         */\r\n        this.m_width = width;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_height\r\n         * @description 필드의 svg상의 세로 길이\r\n         * @example\r\n         * // getter height()\r\n         * // setter height(val)\r\n         */\r\n        this.m_height = height;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_pageNo\r\n         * @description 필드의 PDF에서의 페이지 번호\r\n         * @example\r\n         * // getter pageNo()\r\n         * // setter pageNo(val)\r\n         */\r\n        this.m_pageNo = pageNo;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_pdfX\r\n         * @description 필드의 PDF에서의 X좌표\r\n         * @example\r\n         * // getter pdfX()\r\n         * // setter pdfX(val)\r\n         */\r\n        this.m_pdfX = 0;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_pdfY\r\n         * @description 필드의 PDF에서의 Y좌표\r\n         * @example\r\n         * // getter pdfY()\r\n         * // setter pdfY(val)\r\n         */\r\n        this.m_pdfY = 0;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_pdfX2\r\n         * @description 필드의 PDF에서의 X2좌표\r\n         * @example\r\n         * // getter pdfX2()\r\n         * // setter pdfX2(val)\r\n         */\r\n        this.m_pdfX2 = 0;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_pdfY2\r\n         * @description 필드의 PDF에서의 Y2좌표\r\n         * @example\r\n         * // getter pdfY2()\r\n         * // setter pdfY2(val)\r\n         */\r\n        this.m_pdfY2 = 0;\r\n\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_type\r\n         * @description 필드의 타입이름\r\n         * @readonly\r\n         * @example\r\n         * // getter type()\r\n         */\r\n        this.m_type = BaseField.fieldName();\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.BaseField#m_fontSize\r\n         * @description 필드에서 사용되는 폰트크기값\r\n         * @example\r\n         * // getter fontSize()\r\n         * // setter fontSize(val)\r\n         */\r\n        this.m_fontSize = 16;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_fontName\r\n         * @description 필드에서 사용되는 폰트이름.\r\n         * @example\r\n         * // getter fontName()\r\n         * // setter fontName(val)\r\n         */\r\n        this.m_fontName = 'MalgunGothic';\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_fontWeight\r\n         * @description 필드에서 사용되는 폰트 두께\r\n         * @example\r\n         * // getter fontWeight()\r\n         * // setter fontWeight(val)\r\n         */\r\n        this.m_fontWeight = \"\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_fontStyle\r\n         * @description 필드에서 사용되는 폰트 스타일\r\n         * @example\r\n         * // getter fontStyle()\r\n         * // setter fontStyle(val)\r\n         */\r\n        this.m_fontStyle = \"\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_fontColor\r\n         * @description 필드에서 사용되는 폰트 색상\r\n         * @example\r\n         * // getter fontColor()\r\n         * // setter fontColor(val)\r\n         */\r\n        this.m_fontColor = \"#000000\"\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_kind\r\n         * @description  필드종류의 한글이름\r\n         * @readonly\r\n         * @example\r\n         * // getter kind()\r\n         */\r\n        this.m_kind = \"\";\r\n\r\n        /**\r\n         * @type {Boolean}\r\n         * @name module:Template/Field.BaseField#m_isRemoved\r\n         * @example\r\n         * // getter isRemoved()\r\n         * // setter isRemoved(val)\r\n         * @description  필드삭제여부\r\n         */\r\n        this.m_isRemoved = false;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_value\r\n         * @description  필드 값\r\n         * @example\r\n         * // getter value()\r\n         * // setter value(val)\r\n         */\r\n        this.m_value = \"\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_ownerId\r\n         * @description  필드가 속한 서명자의 ID\r\n         * @example\r\n         * // getter ownerId()\r\n         * // setter ownerId(val)\r\n         */\r\n        this.m_ownerId = \"\"\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_fieldId\r\n         * @description  필드의 별칭\r\n         * @example\r\n         * // getter fieldId()\r\n         * // setter fieldId(val)\r\n         */\r\n        this.m_fieldId = id;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.BaseField#m_required\r\n         * @description  필드의 필수여부\r\n         * @example\r\n         * // getter required()\r\n         * // setter required(val)\r\n         */\r\n        this.m_required = \"true\";\r\n\r\n    }\r\n\r\n    /**\r\n     * @function fromJson\r\n     * @name module:Template/Field.BaseField#fromJson\r\n     * @description (Static) JSON데이터로 로드한다.\r\n     *\r\n     * @param target 복사할 필드 오브젝트\r\n     * @param jsonData 필드의 JSON데이터.\r\n     * @return {Object} JSON데이터를 로드한 필드를 리턴한다.\r\n     * @static\r\n     */ \r\n    static fromJson(target, jsonData) {\r\n        let field = Object.assign(target, jsonData);\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @static\r\n     * @name module:Template/Field.BaseField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"BaseField\";\r\n    }\r\n\r\n    ancestors() {\r\n        return [\"BF\"];\r\n    }\r\n\r\n    get type() {\r\n        return this.m_type;\r\n    }\r\n\r\n    get id() {\r\n        return this.m_id;\r\n    }\r\n    get kind() {\r\n        return this.m_kind;\r\n    }\r\n\r\n    set id(__id) {\r\n        this.m_id = __id;\r\n    }\r\n\r\n    get fieldId() {\r\n        return this.m_fieldId;\r\n    }\r\n\r\n    set fieldId(__fieldId) {\r\n        this.m_id = __fieldId;\r\n    }\r\n\r\n    get pageNo() {\r\n        return this.m_pageNo;\r\n    }\r\n\r\n    set pageNo(_pageNo) {\r\n        this.m_pageNo = _pageNo;\r\n    }\r\n\r\n    get x() {\r\n        return this.m_x;\r\n    }\r\n\r\n    set x(__x) {\r\n        this.m_x = __x;\r\n    }\r\n\r\n    get y() {\r\n        return this.m_y;\r\n    }\r\n\r\n    set y(__y) {\r\n        this.m_y = __y;\r\n    }\r\n\r\n    get width() {\r\n        return this.m_width;\r\n    }\r\n\r\n    set width(__width) {\r\n        this.m_width = __width;\r\n    }\r\n\r\n    get height() {\r\n        return this.m_height;\r\n    }\r\n\r\n    set height(__height) {\r\n        this.m_height = __height;\r\n    }\r\n\r\n    get toolTip() {\r\n        return this.m_toolTip;\r\n    }\r\n\r\n    set toolTip(__toolTip) {\r\n        this.m_toolTip = __toolTip;\r\n    }\r\n\r\n    get pdfX() {\r\n        return this.m_pdfX;\r\n    }\r\n\r\n    set pdfX(__pdfX) {\r\n        this.m_pdfX = __pdfX;\r\n    }\r\n\r\n    get pdfY() {\r\n        return this.m_pdfY;\r\n    }\r\n\r\n    set pdfY(__pdfY) {\r\n        this.m_pdfY = __pdfY;\r\n    }\r\n\r\n    get pdfX2() {\r\n        return this.m_pdfX2;\r\n    }\r\n\r\n    set pdfX2(__pdfX2) {\r\n        this.m_pdfX2 = __pdfX2;\r\n    }\r\n\r\n    get pdfY2() {\r\n        return this.m_pdfY2;\r\n    }\r\n\r\n    set pdfY2(__pdfY2) {\r\n        this.m_pdfY2 = __pdfY2;\r\n    }\r\n\r\n    get fontSize() {\r\n        return this.m_fontSize;\r\n    }\r\n\r\n    set fontSize(__fontSize) {\r\n        this.m_fontSize = __fontSize;\r\n    }\r\n\r\n    get fontName() {\r\n        return this.m_fontName;\r\n    }\r\n\r\n    set fontName(__fontName) {\r\n        this.m_fontName = __fontName;\r\n    }\r\n\r\n    get fontWeight() {\r\n        return this.m_fontWeight;\r\n    }\r\n\r\n    set fontWeight(__fontWeight) {\r\n        this.m_fontWeight = __fontWeight;\r\n    }\r\n\r\n    get fontStyle() {\r\n        return this.m_fontStyle;\r\n    }\r\n\r\n    set fontStyle(__fontStyle) {\r\n        this.m_fontStyle = __fontStyle;\r\n    }\r\n\r\n    get fontColor() {\r\n        return this.m_fontColor;\r\n    }\r\n\r\n    set fontColor(__fontColor) {\r\n        this.m_fontColor = __fontColor;\r\n    }\r\n\r\n    get isRemoved() {\r\n        return this.m_isRemoved;\r\n    }\r\n    set isRemoved(_isRemoved) {\r\n        this.m_isRemoved = _isRemoved;\r\n    }\r\n\r\n    get value() {\r\n        return this.m_value;\r\n    }\r\n    set value(_value) {\r\n        this.m_value = _value;\r\n    }\r\n\r\n    get ownerId() {\r\n        return this.m_ownerId;\r\n    }\r\n\r\n    set ownerId(__ownerId) {\r\n        this.m_ownerId = __ownerId;\r\n    }\r\n\r\n    get required() {\r\n        return this.m_required;\r\n    }\r\n\r\n    set required(__required) {\r\n        this.m_required = __required;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @function showFieldAttribute\r\n     * @static\r\n     * @name module:Template/Field.BaseField#showFieldAttribute\r\n     * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {ELEMENT} node  속성 팝업 Node\r\n     * @param {String} idValue     필드의 id값\r\n     * @param {String} requiredValue     필수여부 값\r\n     * @param {String} ownerIdValue    서명자 아이디\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldAttribute(node,\r\n        idValue, fieldIdValue, requiredValue, ownerIdValue,\r\n        userList,\r\n        changeEventFunc) {\r\n\r\n        var panel = Utils.createAttributePanelNode();\r\n\r\n        var requireRow = Utils.createAttributeToggleButtonNode(idValue, \"required\", \"Template.isRequired\", requiredValue, changeEventFunc);\r\n        panel.appendChild(requireRow);\r\n        let useDefaulOptionNode = Utils.getUserInfoOptsListCount() !== 1;\r\n        var ownerSelectRow = Utils.createAttributeSelectNode(idValue, \"ownerId\", userList, \"\", useDefaulOptionNode);\r\n        panel.appendChild(ownerSelectRow);\r\n\r\n        let ownerSelect = ownerSelectRow.querySelector(\"select\");\r\n        $(ownerSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(ownerSelect).val(ownerIdValue).trigger(\"change\");\r\n        $(ownerSelect).on(\"change\", changeEventFunc);\r\n\r\n        var fieldIdValueRow = Utils.createAttributeInputNode(idValue, \"fieldId\", \"Template.fieldIdText\", fieldIdValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(fieldIdValueRow);\r\n\r\n\r\n        panel.setAttribute(\"Field-id-list\", idValue);\r\n        node.className = \"Editor-Attribute\";\r\n        node.classList.add(\"Base-Field\");\r\n        node.appendChild(panel);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @function showFieldsAttribute\r\n     * @static\r\n     * @name module:Template/Field.BaseField#showFieldsAttribute\r\n     * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {HTML} ownerNode  속성 팝업 Node\r\n     * @param {Array} fieldList    필드들의 리스트\r\n     * @param {HTML} attrNode   속성 팝업의 Node\r\n     * @param {String} mainGroup    SVG의 메인 Element\r\n     * @param {Array} userList  서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc   속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     * @static\r\n     */\r\n    static showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc) {\r\n        let node = attrNode;\r\n        if (attrNode === null || Utils.isEmptyObject(attrNode)) {\r\n            const bbox = Utils.mergeFieldsBBox(fieldList);\r\n            node = Utils.createAttrbutePopup(ownerNode, bbox);\r\n            Utils.repositionFieldDeleteBtn(ownerNode, bbox.x, bbox.y, bbox.width);\r\n        }\r\n        Utils.removeAllChildNode(node);\r\n\r\n        var idValueArr = [];\r\n        fieldList.forEach((field) => {\r\n            idValueArr.push(field.id);\r\n        });\r\n        var idValue = idValueArr.join();\r\n\r\n        var ownerIdValue = fieldList[0].ownerId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].ownerId !== ownerIdValue) {\r\n                ownerIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var requiredValue = fieldList[0].required;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].required !== requiredValue) {\r\n                requiredValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fieldIdValue = fieldList[0].fieldId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fieldId !== fieldIdValue) {\r\n                fieldIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        BaseField.showFieldAttribute(node,\r\n            idValue, fieldIdValue, requiredValue, ownerIdValue,\r\n            userList,\r\n            changeEventFunc);\r\n    }\r\n\r\n    validateValue(propertyName, value) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @function getBBox\r\n     * @name module:Template/Field.BaseField#getBBox\r\n     * @description 필드의 bounding Rect를 리턴 .\r\n     * @memberOf module:Template/Field.BaseField\r\n     * @return {Rect} Object \r\n     * @Date : 2021. 5. 31\r\n     */\r\n    getBBox() {\r\n        return {\r\n            left: this.x,\r\n            top: this.y,\r\n            right: this.x + this.width,\r\n            bottom: this.y + this.height,\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height\r\n        }\r\n    }\r\n} \r\n","\r\n/**\r\n * @module Template/TemplateMod\r\n */\r\n\r\nimport anime from 'animejs/lib/anime.es.js';\r\n\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\nimport {BaseField} from './../Fields/BaseField';\r\nimport {TextField} from './../Fields/TextField';\r\nimport {NumberField} from './../Fields/NumberField';\r\nimport {DateField} from './../Fields/DateField';\r\nimport {SignField} from './../Fields/SignField';\r\nimport {TextBaseField} from './../Fields/TextBaseField.js';\r\nimport {ImageField} from \"../Fields/ImageField.js\";\r\nimport {MultiLineTextField} from \"../Fields/MultiLineTextField.js\";\r\nimport {CheckboxField} from \"../Fields/CheckboxField.js\";\r\nimport {RadioField} from \"../Fields/RadioField.js\";\r\nimport {LabelField} from \"../Fields/LabelField.js\";\r\nimport {ComboboxField} from \"../Fields/ComboboxField.js\";\r\n\r\nimport {TemplateData} from './templateData.js';\r\nimport {TemplateDataOwner} from './templateDataOwner.js';\r\nimport {TemplateDataPage} from './templateDataPage.js';\r\nimport {TemplateUserFieldInfo} from './templateUserFieldInfo.js';\r\n\r\n\r\n\r\nvar _templateMod;\r\n\r\n/**\r\n * @description 필드 관련 처리를 하는 Class\r\n * \r\n * @property {Boolean} dragStart {@link module:Template/TemplateMod.TemplateMod#dragStart}\r\n * @property {Object} dragBox {@link module:Template/TemplateMod.TemplateMod#dragBox}\r\n * @property {Object} mainCanvas {@link module:Template/TemplateMod.TemplateMod#mainCanvas}\r\n * @property {Rect} pageBoundingBox {@link module:Template/TemplateMod.TemplateMod#pageBoundingBox}\r\n * @property {Object} templateRectMousePosition {@link module:Template/TemplateMod.TemplateMod#templateRectMousePosition}\r\n * @property {String} selectAddFieldType {@link module:Template/TemplateMod.TemplateMod#selectAddFieldType}\r\n * @property {Object} fieldDictionary {@link module:Template/TemplateMod.TemplateMod#fieldDictionary}\r\n * @property {Number} unredoActionIdx {@link module:Template/TemplateMod.TemplateMod#unredoActionIdx}\r\n * @property {Object} unredoActionDict {@link module:Template/TemplateMod.TemplateMod#unredoActionDict}\r\n * @property {Object} pdfViewer {@link module:Template/TemplateMod.TemplateMod#pdfViewer}\r\n * @property {Object} templateUserFieldInfo {@link module:Template/TemplateMod.TemplateMod#templateUserFieldInfo}\r\n * @property {Object} ownerNode {@link module:Template/TemplateMod.TemplateMod#ownerNode}\r\n * @property {Boolean} isFieldDragStart {@link module:Template/TemplateMod.TemplateMod#isFieldDragStart}\r\n * @property {String} menuCode {@link module:Template/TemplateMod.TemplateMod#menuCode}\r\n *\r\n * @property {Function} addUndoRedoAct {@link module:Template/TemplateMod.TemplateMod#addUndoRedoAct}\r\n * @property {Function} buildDVOptsInfo {@link module:Template/TemplateMod.TemplateMod#buildDVOptsInfo}\r\n * @property {Function} buildFieldformerList {@link module:Template/TemplateMod.TemplateMod#buildFieldformerList}\r\n * @property {Function} buildFieldUserInfo {@link module:Template/TemplateMod.TemplateMod#buildFieldUserInfo}\r\n * @property {Function} calcFieldPostion {@link module:Template/TemplateMod.TemplateMod#calcFieldPostion}\r\n * @property {Function} calcTemplateBoundary {@link module:Template/TemplateMod.TemplateMod#calcTemplateBoundary}\r\n * @property {Function} changeFieldPosition {@link module:Template/TemplateMod.TemplateMod#changeFieldPosition}\r\n * @property {Function} changeFieldValueEvent {@link module:Template/TemplateMod.TemplateMod#changeFieldValueEvent}\r\n * @property {Function} changeFreeTransform {@link module:Template/TemplateMod.TemplateMod#changeFreeTransform}\r\n * @property {Function} changeGroupBoxFreeTransform {@link module:Template/TemplateMod.TemplateMod#changeGroupBoxFreeTransform}\r\n * @property {Function} checkTemplateFieldData {@link module:Template/TemplateMod.TemplateMod#checkTemplateFieldData}\r\n * @property {Function} clearSelectedTool {@link module:Template/TemplateMod.TemplateMod#clearSelectedTool}\r\n * @property {Function} convertUserListToSelectOptions {@link module:Template/TemplateMod.TemplateMod#convertUserListToSelectOptions}\r\n * @property {Function} createDragOverGroup {@link module:Template/TemplateMod.TemplateMod#createDragOverGroup}\r\n * @property {Function} createField {@link module:Template/TemplateMod.TemplateMod#createField}\r\n * @property {Function} createFieldObject {@link module:Template/TemplateMod.TemplateMod#createFieldObject}\r\n * @property {Function} createTemplateRect {@link module:Template/TemplateMod.TemplateMod#createTemplateRect}\r\n * @property {Function} dragendFunc {@link module:Template/TemplateMod.TemplateMod#dragendFunc}\r\n * @property {Function} dragmoveFunc {@link module:Template/TemplateMod.TemplateMod#dragmoveFunc}\r\n * @property {Function} dragstartFunc {@link module:Template/TemplateMod.TemplateMod#dragstartFunc}\r\n * @property {Function} exportFieldData {@link module:Template/TemplateMod.TemplateMod#exportFieldData}\r\n * @property {Function} fieldDeleteBtnClicked {@link module:Template/TemplateMod.TemplateMod#fieldDeleteBtnClicked}\r\n * @property {Function} fieldFtEvent {@link module:Template/TemplateMod.TemplateMod#fieldFtEvent}\r\n * @property {Function} fieldRepositioning {@link module:Template/TemplateMod.TemplateMod#fieldRepositioning}\r\n * @property {Function} generateFieldId {@link module:Template/TemplateMod.TemplateMod#generateFieldId}\r\n * @property {Function} getCreateFieldDefaultWidth {@link module:Template/TemplateMod.TemplateMod#getCreateFieldDefaultWidth}\r\n * @property {Function} getDvTextValue {@link module:Template/TemplateMod.TemplateMod#getDvTextValue}\r\n * @property {Function} getFieldFromJson {@link module:Template/TemplateMod.TemplateMod#getFieldFromJson}\r\n * @property {Function} getFieldIdFromGroupNode {@link module:Template/TemplateMod.TemplateMod#getFieldIdFromGroupNode}\r\n * @property {Function} getFieldJsonData {@link module:Template/TemplateMod.TemplateMod#getFieldJsonData}\r\n * @property {Function} getFieldSize {@link module:Template/TemplateMod.TemplateMod#getFieldSize}\r\n * @property {Function} getPageBorderWidth {@link module:Template/TemplateMod.TemplateMod#getPageBorderWidth}\r\n * @property {Function} getPageBoundingClientRect {@link module:Template/TemplateMod.TemplateMod#getPageBoundingClientRect}\r\n * @property {Function} getPageElement {@link module:Template/TemplateMod.TemplateMod#getPageElement}\r\n * @property {Function} getPdfPageFromSvgPos {@link module:Template/TemplateMod.TemplateMod#getPdfPageFromSvgPos}\r\n * @property {Function} hideAllResizeHandles {@link module:Template/TemplateMod.TemplateMod#hideAllResizeHandles}\r\n * @property {Function} hideFieldAttribute {@link module:Template/TemplateMod.TemplateMod#hideFieldAttribute}\r\n * @property {Function} hideTemplateLayer {@link module:Template/TemplateMod.TemplateMod#hideTemplateLayer}\r\n * @property {Function} importFieldData {@link module:Template/TemplateMod.TemplateMod#importFieldData}\r\n * @property {Function} keycheck {@link module:Template/TemplateMod.TemplateMod#keycheck}\r\n * @property {Function} redoAction {@link module:Template/TemplateMod.TemplateMod#redoAction}\r\n * @property {Function} refreshformerList {@link module:Template/TemplateMod.TemplateMod#refreshformerList}\r\n * @property {Function} removeDragGroupField {@link module:Template/TemplateMod.TemplateMod#removeDragGroupField}\r\n * @property {Function} removeDragOverGroup {@link module:Template/TemplateMod.TemplateMod#removeDragOverGroup}\r\n * @property {Function} removeField {@link module:Template/TemplateMod.TemplateMod#removeField}\r\n * @property {Function} removeSelectedField {@link module:Template/TemplateMod.TemplateMod#removeSelectedField}\r\n * @property {Function} removeTemplateRect {@link module:Template/TemplateMod.TemplateMod#removeTemplateRect}\r\n * @property {Function} replaceFieldData {@link module:Template/TemplateMod.TemplateMod#replaceFieldData}\r\n * @property {Function} replaceFieldStringData {@link module:Template/TemplateMod.TemplateMod#replaceFieldStringData}\r\n * @property {Function} resetTool {@link module:Template/TemplateMod.TemplateMod#resetTool}\r\n * @property {Function} selectTool {@link module:Template/TemplateMod.TemplateMod#selectTool}\r\n * @property {Function} selectUserList {@link module:Template/TemplateMod.TemplateMod#selectUserList}\r\n * @property {Function} showAsteriskDiv {@link module:Template/TemplateMod.TemplateMod#showAsteriskDiv}\r\n * @property {Function} showFieldAttribute {@link module:Template/TemplateMod.TemplateMod#showFieldAttribute}\r\n * @property {Function} showFieldListAttribute {@link module:Template/TemplateMod.TemplateMod#showFieldListAttribute}\r\n * @property {Function} sortFieldsAlign {@link module:Template/TemplateMod.TemplateMod#sortFieldsAlign}\r\n * @property {Function} sortFieldsBottomAlign {@link module:Template/TemplateMod.TemplateMod#sortFieldsBottomAlign}\r\n * @property {Function} sortFieldsHCenterAlign {@link module:Template/TemplateMod.TemplateMod#sortFieldsHCenterAlign}\r\n * @property {Function} sortFieldsHRegularIntervalAlign {@link module:Template/TemplateMod.TemplateMod#sortFieldsHRegularIntervalAlign}\r\n * @property {Function} sortFieldsLeftAlign {@link module:Template/TemplateMod.TemplateMod#sortFieldsLeftAlign}\r\n * @property {Function} sortFieldsRightAlign {@link module:Template/TemplateMod.TemplateMod#sortFieldsRightAlign}\r\n * @property {Function} sortFieldsTopAlign {@link module:Template/TemplateMod.TemplateMod#sortFieldsTopAlign}\r\n * @property {Function} sortFieldsVCenterAlign {@link module:Template/TemplateMod.TemplateMod#sortFieldsVCenterAlign}\r\n * @property {Function} sortFieldsVRegularIntervalAlign {@link module:Template/TemplateMod.TemplateMod#sortFieldsVRegularIntervalAlign}\r\n * @property {Function} templateInit {@link module:Template/TemplateMod.TemplateMod#templateInit}\r\n * @property {Function} templateMouseMoveEvent {@link module:Template/TemplateMod.TemplateMod#templateMouseMoveEvent}\r\n * @property {Function} templateMouseUpEvent {@link module:Template/TemplateMod.TemplateMod#templateMouseUpEvent}\r\n * @property {Function} templateResize {@link module:Template/TemplateMod.TemplateMod#templateResize}\r\n * @property {Function} tmpGroupFtEvent {@link module:Template/TemplateMod.TemplateMod#tmpGroupFtEvent}\r\n * @property {Function} undoAction {@link module:Template/TemplateMod.TemplateMod#undoAction}\r\n * @property {Function} updateFieldPoint {@link module:Template/TemplateMod.TemplateMod#updateFieldPoint}\r\n * @property {Function} appendFontFamily {@link module:Template/TemplateMod.TemplateMod#appendFontFamily}\r\n * @property {Function} appendSignTabShowOpt {@link module:Template/TemplateMod.TemplateMod#appendSignTabShowOpt}\r\n * \r\n * @FileName TemplateMod.js\r\n * @since 2021.05.31\r\n */\r\nexport class TemplateMod {\r\n  /**\r\n   * @type {Boolean}\r\n   * @name module:Template/TemplateMod.TemplateMod#dragStart\r\n   * @description  SVG화면에서 드래그가 시작되었는지 여부\r\n   */\r\n  dragStart = false;\r\n\r\n  /**\r\n   * @type {Object}\r\n   * @name module:Template/TemplateMod.TemplateMod#dragBox\r\n   * @description  SVG에서 드래그된 것을 표현하는 Rect Node\r\n   */\r\n  dragBox = undefined;\r\n\r\n  /**\r\n   * @type {Object}\r\n   * @name module:Template/TemplateMod.TemplateMod#mainCanvas\r\n   * @description  Snap Instance\r\n   */\r\n  mainCanvas;\r\n\r\n  /**\r\n   * @type {Rect}\r\n   * @name module:Template/TemplateMod.TemplateMod#pageBoundingBox\r\n   * @description  필드들이 움직일 수 있는 경계\r\n   */\r\n  pageBoundingBox = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n  /**\r\n   * @type {Object}\r\n   * @name module:Template/TemplateMod.TemplateMod#templateRectMousePosition\r\n   * @description 필드를 생성하여 움직 일때 현재 마우스 위치와 기존 마우스 위치를 가지고 있는 변수\r\n   */\r\n  templateRectMousePosition;\r\n\r\n  /**\r\n   * @type {String}\r\n   * @name module:Template/TemplateMod.TemplateMod#selectAddFieldType\r\n   * @description 필드를 만들기 위해 선택된 필드의 종류\r\n   */\r\n  selectAddFieldType = \"\";\r\n\r\n  /**\r\n   * @type {Object}\r\n   * @name module:Template/TemplateMod.TemplateMod#fieldDictionary\r\n   * @description 필드들의 정보를 가지고 있는 Dictionary\r\n   */\r\n  fieldDictionary = {};\r\n\r\n  /**\r\n   * @type {Number}\r\n   * @name module:Template/TemplateMod.TemplateMod#unredoActionIdx\r\n   * @description 현재 Undo Redo Index\r\n   */\r\n  unredoActionIdx = -1;\r\n\r\n  /**\r\n   * @type {Object}\r\n   * @name module:Template/TemplateMod.TemplateMod#unredoActionDict\r\n   * @description Undo Redo의 Action을 가지고 있는 Dictionary\r\n   */\r\n  unredoActionDict = {};\r\n\r\n  /**\r\n   * @type {PDFViewer}\r\n   * @name module:Template/TemplateMod.TemplateMod#pdfViewer\r\n   * @description PDF.js 뷰어 오브젝트\r\n   */\r\n  pdfViewer;\r\n\r\n  /**\r\n   * @type {Object}\r\n   * @name module:Template/TemplateMod.TemplateMod#templateUserFieldInfo\r\n   * @description 서명자의 정보를 가지고 있는 Dictionary\r\n   */\r\n  templateUserFieldInfo = {};\r\n\r\n  /**\r\n   * @type {Element}\r\n   * @name module:Template/TemplateMod.TemplateMod#ownerNode\r\n   * @description 이 프로젝트가 포함될 Element의 부모 HTML ELEMENT\r\n   */\r\n  ownerNode = null;\r\n\r\n  /**\r\n   * @type {Boolean}\r\n   * @name module:Template/TemplateMod.TemplateMod#isFieldDragStart\r\n   * @description 현재 필드가 드래그 되고 있는지 여부.\r\n   */\r\n  isFieldDragStart = false;\r\n\r\n  /**\r\n   * @type {String}\r\n   * @name module:Template/TemplateMod.TemplateMod#menuCode\r\n   * @description smartsuit에서의 menucode\r\n   */\r\n  menuCode = \"\";\r\n\r\n  templateClipBoard = \"\";\r\n\r\n  useDrawSign = \"true\";\r\n  useImageSign = \"true\";\r\n  useRegSign = \"true\";\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {Object} _pdfViewer PDF Viewer Object\r\n   * @param {Element} ownerNode 이 프로젝트가 포함될 Element의 부모 HTML ELEMENT\r\n   *\r\n   */\r\n  constructor(_pdfViewer, ownerNode = null, signTabShowDefOptVal) {\r\n    this.pdfViewer = _pdfViewer;\r\n    _templateMod = this;\r\n    _templateMod.appendSignTabShowOpt(signTabShowDefOptVal);\r\n    this.ownerNode = ownerNode;\r\n  }\r\n\r\n  /**\r\n   * @function addUndoRedoAct\r\n   * @name module:Template/TemplateMod.TemplateMod#addUndoRedoAct\r\n   * @description undo redo 처리를 위한 데이터를 추가.\r\n   *\r\n   * @param {String} type   action 종류\r\n   * @param {Object} oldData     이전에 있던 데이터\r\n   * @param {Object} newData     새로운 데이터\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  addUndoRedoAct(type, oldData, newData) {\r\n    if (\r\n      type !== CONSTANTS.CREATE_FIELD_ACTION &&\r\n      type !== CONSTANTS.REMOVE_FIELD_ACTION &&\r\n      oldData === newData\r\n    ) {\r\n      return;\r\n    }\r\n    _templateMod.unredoActionDict[++_templateMod.unredoActionIdx] = {\r\n      action: type,\r\n      old: oldData,\r\n      new: newData,\r\n    };\r\n    _templateMod.unredoActionDict[_templateMod.unredoActionIdx + 1] = undefined;\r\n  }\r\n\r\n  /**\r\n   * @function buildDVOptsInfo\r\n   * @name module:Template/TemplateMod.TemplateMod#buildDVOptsInfo\r\n   * @description Default Value 리스트 정보를 설정 .\r\n   *\r\n   * @param {Array} dvOptions   Default Value 리스트\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  buildDVOptsInfo(dvOptions) {\r\n    var dvOptionList = [];\r\n    for (var idx = 0; idx < dvOptions.length; ++idx) {\r\n      dvOptionList.push({\r\n        text: dvOptions[idx].displayText,\r\n        value: dvOptions[idx].variable,\r\n      });\r\n    }\r\n    Utils.setDVFieldOptsList(dvOptionList);\r\n  }\r\n\r\n    /**\r\n   * @function buildSignTabShowOpt\r\n   * @name module:Template/TemplateMod.TemplateMod#buildSignTabShowOpt\r\n   * @description Default Value 리스트 정보를 설정 .\r\n   *\r\n   * @param {Object} Options   Default Value 리스트\r\n   * @Date : 2023. 12. 27\r\n   */\r\n    buildSignTabShowOpt(Options) {\r\n      //var OptionList = {};\r\n      \r\n      Utils.setSignTabShowOpt(Options);\r\n    }\r\n\r\n  /**\r\n   * @function buildFieldUserInfo\r\n   * @name module:Template/TemplateMod.TemplateMod#buildFieldUserInfo\r\n   * @description 서명할 사람들 리스트 정보를 설정 .\r\n   *\r\n   * @param {Array} dvOptions   서명할 사람들 정보 리스트\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  buildFieldUserInfo(userList) {\r\n    for (var idx = 0; idx < userList.length; ++idx) {\r\n      let fieldUserInfo = Object.assign(\r\n        new TemplateUserFieldInfo(),\r\n        userList[idx]\r\n      );\r\n      _templateMod.templateUserFieldInfo[fieldUserInfo.userUUID] =\r\n        fieldUserInfo;\r\n    }\r\n    Utils.setUserInfoOptsList(\r\n      _templateMod.convertUserListToSelectOptions(\r\n        _templateMod.templateUserFieldInfo\r\n      )\r\n    );\r\n    Utils.setUserInfoOptsListCount(\r\n      Object.keys(_templateMod.templateUserFieldInfo).length\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @function buildFieldformerList\r\n   * @name module:Template/TemplateMod.TemplateMod#buildFieldformerList\r\n   * @description 사이드 패널에 있는 서명자 정보를 갱신 .\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  buildFieldformerList() {\r\n    const ownerDom = _templateMod.ownerNode.querySelector(\r\n      \" #Editor-User-Component_Box\"\r\n    );\r\n    Utils.removeAllChildNode(ownerDom);\r\n    const keys = Object.keys(_templateMod.templateUserFieldInfo);\r\n    keys.forEach(function (key) {\r\n      const userFieldInfo = _templateMod.templateUserFieldInfo[key];\r\n      if (userFieldInfo.isFormer === \"Y\") {\r\n        return;\r\n      }\r\n      let fieldListDom = document.createElement(\"div\");\r\n      fieldListDom.setAttribute(\"data-user-key\", key);\r\n      fieldListDom.classList.add(\"User-Component-List-Conatiner\");\r\n      const fieldKeys = Object.keys(userFieldInfo.fields);\r\n      if (fieldKeys.length === 0) {\r\n        fieldListDom.classList.add(\"No-Child\");\r\n      }\r\n      let listDom = document.createElement(\"ul\");\r\n      listDom.className = \"User-Component-List\";\r\n      let listItemDom = document.createElement(\"li\");\r\n      let listItemSpanDom = document.createElement(\"span\");\r\n      listItemSpanDom.textContent = userFieldInfo.displayUserName;\r\n      listItemDom.appendChild(listItemSpanDom);\r\n      listDom.appendChild(listItemDom);\r\n      fieldKeys.forEach(function (fieldKey) {\r\n        const userField = userFieldInfo.field(fieldKey);\r\n        if (userField.isRemoved) {\r\n          return;\r\n        }\r\n        let listItemDom2 = document.createElement(\"li\");\r\n        let listItemSpanDom2 = document.createElement(\"span\");\r\n        let prefix =\r\n          userField.required === \"true\"\r\n            ? \"[\" + Utils.translateForKey(\"Template.requireText\") + \"]\"\r\n            : \"[\" + Utils.translateForKey(\"Template.selectText\") + \"]\";\r\n        if (userField.type === \"SignField\") {\r\n          listItemSpanDom2.textContent =\r\n            \"[\" + Utils.translateForKey(\"Template.signText\") + \"]\";\r\n        }\r\n        listItemSpanDom2.textContent = prefix + userField.fieldId;\r\n\r\n        listItemDom2.appendChild(listItemSpanDom2);\r\n        listDom.appendChild(listItemDom2);\r\n      });\r\n      fieldListDom.appendChild(listDom);\r\n      ownerDom.appendChild(fieldListDom);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function calcFieldPostion\r\n   * @name module:Template/TemplateMod.TemplateMod#calcFieldPostion\r\n   * @description Field의 위치(HTML에서)를 계산한다.\r\n   *\r\n   * @param {Object} field   BaseField를 상속받은 Object\r\n   * @param {Boolean} isImport\r\n   * Field를 Import중일 경우에 필드 위치를 계산할 때 Page Element의 보더도 함께 계산한다.\r\n   * @return {Object} Rect  { x: , y: , width: , height:  }\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  calcFieldPostion(field, isImport = false) {\r\n    var viewBBox = _templateMod.ownerNode\r\n      .querySelector(\" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER)\r\n      .getBoundingClientRect();\r\n    const fieldPageNo = field.pageNo;\r\n    const viewport = _templateMod.pdfViewer._pages[fieldPageNo - 1].viewport;\r\n    var viewportXY = viewport.convertToViewportPoint(field.pdfX, field.pdfY);\r\n    var viewportXY2 = viewport.convertToViewportPoint(field.pdfX2, field.pdfY2);\r\n\r\n    var pageOffSet = _templateMod.computePageOffset(fieldPageNo);\r\n\r\n    var newX = viewportXY[0] + pageOffSet.left - viewBBox.left;\r\n    var newY = viewportXY[1] + pageOffSet.top - viewBBox.top;\r\n    var newX2 = viewportXY2[0] + pageOffSet.left - viewBBox.left;\r\n    var newY2 = viewportXY2[1] + pageOffSet.top - viewBBox.top;\r\n\r\n    if (isImport) {\r\n      var pageBorderWidth = _templateMod.getPageBorderWidth(fieldPageNo);\r\n      newX = newX + pageBorderWidth.left;\r\n      newY = newY + pageBorderWidth.top;\r\n      newX2 = newX2 + pageBorderWidth.left;\r\n      newY2 = newY2 + pageBorderWidth.top;\r\n    }\r\n\r\n    var newW = Math.abs(newX2 - newX);\r\n    var newH = Math.abs(newY2 - newY);\r\n\r\n    field.x = newX;\r\n    field.y = newY;\r\n    field.width = newW;\r\n    field.height = newH;\r\n    return { x: newX, y: newY, width: newW, height: newH };\r\n  }\r\n\r\n  /**\r\n   * @function calcTemplateBoundary\r\n   * @name module:Template/TemplateMod.TemplateMod#calcTemplateBoundary\r\n   * @description 필드들이 움직일 수 있는 경계를 계산한다.\r\n   *\r\n   * @param {Number} objectWidth  가로길이\r\n   * @param {Number} objectHeight  세로 길이\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  calcTemplateBoundary(objectWidth, objectHeight) {\r\n    const viewer1 = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER\r\n    );\r\n    const viewerBoundingRect = viewer1.getBoundingClientRect();\r\n    var pgRect = _templateMod.getPageBoundingClientRect();\r\n    _templateMod.pageBoundingBox.x =\r\n      pgRect.x + objectWidth / 2 - viewerBoundingRect.left;\r\n    _templateMod.pageBoundingBox.y =\r\n      pgRect.y + objectHeight / 2 - viewerBoundingRect.top;\r\n    _templateMod.pageBoundingBox.width = pgRect.width - objectWidth;\r\n  }\r\n\r\n  /**\r\n   * @function changeFieldPosition\r\n   * @name module:Template/TemplateMod.TemplateMod#changeFieldPosition\r\n   * @description Field의 변경된 위치를 설정한다.\r\n   *\r\n   * @param {Object} field   BaseField를 상속받은 Object\r\n   * @param {Matrix} newMatrix    위치정보를 계산할때 쓰일 메트릭스 기본값 undeinfed\r\n   * @param {Boolean} donotUndoRedo     undo redo데이터를 생성하는지 여부 기본값 false\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  changeFieldPosition(field, newMatrix = undefined, donotUndoRedo = false) {\r\n    let childRect = field.select(\"rect\");\r\n    let fieldGlobalMatrix = newMatrix;\r\n    if (fieldGlobalMatrix === undefined) {\r\n      fieldGlobalMatrix = field.transform().globalMatrix;\r\n    }\r\n    let childRectBBox = childRect.getBBox();\r\n    const x1 = fieldGlobalMatrix.x(childRectBBox.x, childRectBBox.y);\r\n    const y1 = fieldGlobalMatrix.y(childRectBBox.x, childRectBBox.y);\r\n    const x2 = fieldGlobalMatrix.x(childRectBBox.x2, childRectBBox.y2);\r\n    const y2 = fieldGlobalMatrix.y(childRectBBox.x2, childRectBBox.y2);\r\n    const width = Math.abs(x2 - x1);\r\n    const height = Math.abs(y2 - y1);\r\n    childRect.attr({ x: x1, y: y1, width: width, height: height });\r\n    var childSvg = field.select(\"svg\");\r\n    childSvg.attr({ x: x1, y: y1, width: width, height: height });\r\n    field.transform(Snap.matrix().toTransformString());\r\n    var oldData = _templateMod.getFieldJsonData(childRect.attr(\"id\"));\r\n    const isUpdated = _templateMod.updateFieldPoint(field);\r\n    if (isUpdated === false) {\r\n      return;\r\n    }\r\n    _templateMod.changeFreeTransform(field, width, height);\r\n    if (!donotUndoRedo) {\r\n      var newData = _templateMod.getFieldJsonData(childRect.attr(\"id\"));\r\n      _templateMod.addUndoRedoAct(\r\n        CONSTANTS.FIELD_ATTR_CHANGE_ACTION,\r\n        oldData,\r\n        newData\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function changeFieldValueEvent\r\n   * @name module:Template/TemplateMod.TemplateMod#changeFieldValueEvent\r\n   * @description 필드의 속성 값이 변경 되었을 때 속성의 종류에 따라 처리하기 위한 메소드.\r\n   *\r\n   * @param {Object} event  event Object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  changeFieldValueEvent(event) {\r\n    const targetNode = event.target;\r\n    const fieldId = targetNode.getAttribute(\"data-field-id\");\r\n    const fieldPropetyName = targetNode.getAttribute(\r\n      \"data-field-property-name\"\r\n    );\r\n    var oldDataArr = [];\r\n    var newDataArr = [];\r\n    var ownerId = \"\";\r\n\r\n    fieldId.split(\",\").forEach((idVal) => {\r\n      var fieldGroup = _templateMod.mainCanvas.select(\"#\" + idVal + \"Group\");\r\n      if (fieldGroup === null || fieldGroup === undefined) {\r\n        return;\r\n      }\r\n      var field = _templateMod.fieldDictionary[idVal];\r\n      if (!field.validateValue(fieldPropetyName, targetNode.value)) {\r\n        console.log(\"not validate\");\r\n        return;\r\n      }\r\n      const oldData = _templateMod.getFieldJsonData(idVal);\r\n      oldDataArr.push(oldData);\r\n      Utils.assign(field, \"m_\" + fieldPropetyName, targetNode.value);\r\n      if (TextBaseField.needTextSvgRefresh(fieldPropetyName)) {\r\n        if (fieldPropetyName === \"defaultValue\" && field.type === \"TextField\") {\r\n          let dvText = _templateMod.getDvTextValue(targetNode.value);\r\n          field.defaultValueText = dvText;\r\n        } else if (\r\n          fieldPropetyName === \"defaultValue\" &&\r\n          field.type === \"ComboboxField\"\r\n        ) {\r\n          let dvText = targetNode.value;\r\n          field.defaultValueText = dvText;\r\n        }\r\n        var curScale = _templateMod.pdfViewer.currentScale;\r\n        field.changeTextElement(fieldGroup, curScale);\r\n      }\r\n      if (fieldPropetyName === \"ownerId\") {\r\n        _templateMod.refreshformerList(field);\r\n      }\r\n      if (fieldPropetyName === \"fieldMinValue\") {\r\n        field.m_inputMin = Number(targetNode.value);\r\n      }\r\n      if (fieldPropetyName === \"fieldMaxValue\") {\r\n        field.m_inputMax = Number(targetNode.value);\r\n      }\r\n      if (fieldPropetyName === \"useCalc\") {\r\n        field.m_useCalc = targetNode.value;\r\n      }\r\n      if (fieldPropetyName === \"useDrawSign\") {\r\n        field.m_useDrawSign = targetNode.value;\r\n        _templateMod.validateSignOptions(targetNode, fieldId, fieldPropetyName);\r\n        field.m_useDrawSign = targetNode.value;\r\n      }\r\n      if (fieldPropetyName === \"useImageSign\") {\r\n        field.m_useImageSign = targetNode.value;\r\n        _templateMod.validateSignOptions(targetNode, fieldId, fieldPropetyName);\r\n        field.m_useImageSign = targetNode.value;\r\n      }\r\n      if (fieldPropetyName === \"useRegSign\") {\r\n        field.m_useRegSign = targetNode.value;\r\n        _templateMod.validateSignOptions(targetNode, fieldId, fieldPropetyName);\r\n        field.m_useRegSign = targetNode.value;\r\n      }\r\n      if (fieldPropetyName === \"required\") {\r\n        Utils.showAsteriskDiv(\r\n          _templateMod.ownerNode,\r\n          idVal,\r\n          targetNode.value === \"true\" ? true : false\r\n        );\r\n      }\r\n      const newData = _templateMod.getFieldJsonData(idVal);\r\n      newDataArr.push(newData);\r\n      ownerId = field.ownerId;\r\n    });\r\n    if (oldDataArr.length === 0 || newDataArr === 0) {\r\n      return;\r\n    }\r\n    if (\r\n      fieldPropetyName === \"ownerId\" ||\r\n      fieldPropetyName === \"fieldId\" ||\r\n      fieldPropetyName === \"required\"\r\n    ) {\r\n      _templateMod.buildFieldformerList();\r\n      _templateMod.selectUserList(ownerId);\r\n    }\r\n    let actionName = CONSTANTS.GROUP_ATTR_CHANGE_ACTION;\r\n    if (fieldPropetyName === \"ownerId\") {\r\n      actionName = CONSTANTS.GROUP_ATTR_OWNER_CHANGE_ACTION;\r\n    }\r\n    _templateMod.addUndoRedoAct(actionName, oldDataArr, newDataArr);\r\n  }\r\n\r\n  //병욱 추가\r\n  validateSignOptions(targetNode, fieldId, fieldPropetyName) {\r\n    const signField = document.querySelector(\".Sign-Field\");\r\n    const useDrawSignInput = signField.querySelector(\r\n      'input[data-field-property-name=\"useDrawSign\"]'\r\n    );\r\n    const useImageSignInput = signField.querySelector(\r\n      'input[data-field-property-name=\"useImageSign\"]'\r\n    );\r\n    const useRegSignInput = signField.querySelector(\r\n      'input[data-field-property-name=\"useRegSign\"]'\r\n    );\r\n\r\n    let useDrawSign = useDrawSignInput && useDrawSignInput.value === \"true\" ? true : false;\r\n    let useImageSign = useImageSignInput && useImageSignInput.value === \"true\" ? true : false;\r\n    let useRegSign = useRegSignInput && useRegSignInput.value === \"true\" ? true : false;\r\n\r\n    if (!useDrawSign && !useImageSign && !useRegSign) {\r\n      console.log(\"targetNode.checked:\" + targetNode.checked + \"\\n\");\r\n      console.log(\"targetNode.value:\" + targetNode.value + \"\\n\");\r\n      console.log(\"useDrawSignInput.value:\" + useDrawSignInput.value + \"\\n\");\r\n      targetNode.checked = true;\r\n      targetNode.value = \"true\";\r\n      //alert('적어도 하나의 서명 옵션을 활성화해야 합니다.');\r\n\r\n      // 부모 요소를 찾고,\r\n      let parentDiv = targetNode.parentElement;\r\n      // 부모 요소 내에서 체크박스를 찾습니다.\r\n      let checkboxInput = parentDiv.querySelector('input[type=\"checkbox\"]');\r\n      checkboxInput.checked = true;\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function changeFreeTransform\r\n   * @name module:Template/TemplateMod.TemplateMod#changeFreeTransform\r\n   * @description 필드의 크기 및 위치를 변경하는 FreeTransform을 새로 변경한다.\r\n   *\r\n   * @param {Object} fieldGroup   SVG의 group 오브젝트\r\n   * @param {Number} width     필드의 가로 길이\r\n   * @param {Number} height    필드의 세로 길이\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  changeFreeTransform(fieldGroup, width, height) {\r\n    if (fieldGroup.parent().attr(\"id\") === CONSTANTS.DRAG_BOX_NAME) {\r\n      return;\r\n    }\r\n    let hasHideClass = false;\r\n    if (!Utils.isEmptyObject(fieldGroup.freeTransform)) {\r\n      hasHideClass = !fieldGroup.freeTransform.isShowResizeHandler();\r\n      fieldGroup.freeTransform.unplug();\r\n    }\r\n    _templateMod.calcTemplateBoundary(width, height);\r\n    // const startTime = performance.now();\r\n    let ft = _templateMod.mainCanvas.freeTransform(\r\n      fieldGroup,\r\n      {\r\n        snap: { rotate: 1 },\r\n        attrs: { stroke: \"#9d6859\" },\r\n        subjectBBox: fieldGroup.select(\"rect\").getBBox(true),\r\n        size: 4,\r\n        draw: \"bbox\",\r\n        boundary: _templateMod.pageBoundingBox,\r\n      },\r\n      function (ft2, events) {\r\n        _templateMod.fieldFtEvent(events[0], fieldGroup);\r\n      }\r\n    );\r\n    ft.setOpts({ rotate: false });\r\n    if (hasHideClass) {\r\n      fieldGroup.freeTransform.hideResizeHandler();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function changeGroupBoxFreeTransform\r\n   * @name module:Template/TemplateMod.TemplateMod#changeGroupBoxFreeTransform\r\n   * @description필드 그룹박스 크기 및 위치를 변경하는 FreeTransform을 새로 변경한다.\r\n   *\r\n   * @param {Object} tempGroupBox  SVG의 group 오브젝트\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  changeGroupBoxFreeTransform(tempGroupBox) {\r\n    if (!Utils.isEmptyObject(tempGroupBox.freeTransform)) {\r\n      tempGroupBox.freeTransform.unplug();\r\n    }\r\n    _templateMod.calcTemplateBoundary(\r\n      tempGroupBox.getBBox().width,\r\n      tempGroupBox.getBBox().height\r\n    );\r\n    var tempGFt = _templateMod.mainCanvas.freeTransform(\r\n      tempGroupBox,\r\n      {\r\n        snap: { rotate: 1 },\r\n        size: 4,\r\n        draw: \"bbox\",\r\n        boundary: _templateMod.pageBoundingBox,\r\n      },\r\n      function (ft, events) {\r\n        //console.log(events);\r\n        _templateMod.tmpGroupFtEvent(events[0]);\r\n      }\r\n    );\r\n    tempGFt.setOpts({ rotate: false, scale: false });\r\n  }\r\n\r\n  /**\r\n   * @function checkTemplateFieldData\r\n   * @name module:Template/TemplateMod.TemplateMod#checkTemplateFieldData\r\n   * @description\r\n   * Label이나 Combobox의 경우 안에 값을 셋팅하지 않으면 서명모드에서\r\n   * 필수 값 체크 여부를 통과하지 못하기 때문에 템플릿 에디트에서 해당 값들이\r\n   * 들어 있는지 체크한다.\r\n   *\r\n   * @return {Boolean}\r\n   * @Date : 2021. 6. 18\r\n   */\r\n  checkTemplateFieldData() {\r\n    const keys = Object.keys(_templateMod.templateUserFieldInfo);\r\n    for (let usrKeyIdx = 0; usrKeyIdx < keys.length; ++usrKeyIdx) {\r\n      const userInfo = _templateMod.templateUserFieldInfo[keys[usrKeyIdx]];\r\n      for (\r\n        var pageNo = 0;\r\n        pageNo < _templateMod.pdfViewer.pagesCount;\r\n        ++pageNo\r\n      ) {\r\n        const fieldKeys = Object.keys(_templateMod.fieldDictionary);\r\n        for (let keyIdx = 0; keyIdx < fieldKeys.length; ++keyIdx) {\r\n          const field = _templateMod.fieldDictionary[fieldKeys[keyIdx]];\r\n          if (field.isRemoved) {\r\n            continue;\r\n          }\r\n          if (field.type === \"LabelField\") {\r\n            if (Utils.isStringEmpty(field.value)) {\r\n              let svgRect = _templateMod.mainCanvas.select(\r\n                \"#\" + field.id + \"Group > rect\"\r\n              );\r\n              _templateMod.showFieldAttribute(field.id);\r\n              let viewerContainer = _templateMod.ownerNode.querySelector(\r\n                \" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER_CONTAINER\r\n              );\r\n              viewerContainer.scrollTop = svgRect.attr(\"y\");\r\n              return false;\r\n            }\r\n          } else if (field.type === \"ComboboxField\") {\r\n            if (Utils.isStringEmpty(field.comboboxList)) {\r\n              let svgRect = _templateMod.mainCanvas.select(\r\n                \"#\" + field.id + \"Group > rect\"\r\n              );\r\n              _templateMod.showFieldAttribute(field.id);\r\n              let viewerContainer = _templateMod.ownerNode.querySelector(\r\n                \" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER_CONTAINER\r\n              );\r\n              viewerContainer.scrollTop = svgRect.attr(\"y\");\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @function clearSelectedTool\r\n   * @name module:Template/TemplateMod.TemplateMod#clearSelectedTool\r\n   * @description 사이드 탭에 선탠된 모드를 초기화한다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  clearSelectedTool() {\r\n    let toolElement = _templateMod.ownerNode.querySelectorAll(\r\n      \".\" + CONSTANTS.EDITOR_COMPONENT_CLASS + \" ul li\"\r\n    );\r\n    for (let index = 0; index < toolElement.length; index++) {\r\n      if (toolElement[index].classList.contains(\"selected\")) {\r\n        toolElement[index].classList.toggle(\"selected\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function computePageOffset\r\n   * @name module:Template/TemplateMod.TemplateMod#computePageOffset\r\n   * @description사이드  페이지의 Offset을 계산한다..\r\n   *\r\n   * @param {Number} pageNo  페이지 번호\r\n   * @return  {Object} { left: , top:  }\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  computePageOffset(pageNo) {\r\n    let pgNode = _templateMod.getPageElement(pageNo);\r\n    var rect = pgNode.getBoundingClientRect(),\r\n      bodyElt = document.body;\r\n    return {\r\n      top: rect.top + bodyElt.scrollTop,\r\n      left: rect.left + bodyElt.scrollLeft,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @function convertUserListToSelectOptions\r\n   * @name module:Template/TemplateMod.TemplateMod#convertUserListToSelectOptions\r\n   * @description 사이드 서명자 리스트를 필드 속성에서 사용하기 위해 여기서 사용할 포멧으로 변환한다. .\r\n   *\r\n   * @return {Array} [{ text: , value:  }...]\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  convertUserListToSelectOptions() {\r\n    let optionList = [];\r\n\r\n    const keys = Object.keys(_templateMod.templateUserFieldInfo);\r\n    keys.forEach(function (key) {\r\n      const usrInfo = _templateMod.templateUserFieldInfo[key];\r\n      if (\r\n        usrInfo.isFormer !== null &&\r\n        usrInfo.isFormer !== undefined &&\r\n        usrInfo.isFormer === \"Y\"\r\n      ) {\r\n        return;\r\n      }\r\n      optionList.push({\r\n        text: usrInfo.displayUserName,\r\n        value: usrInfo.userUUID,\r\n      });\r\n    });\r\n\r\n    return optionList;\r\n  }\r\n\r\n  copyObject() {\r\n    _templateMod.templateClipBoard = \"\";\r\n    const selectedNode = _templateMod.ownerNode.querySelector(\r\n      \" .\" + CONSTANTS.EDITOR_ATTR_CLASS\r\n    );\r\n    if (selectedNode === null) {\r\n      return;\r\n    }\r\n    const attrPanelNode = selectedNode.querySelector(\r\n      \".\" + CONSTANTS.EDITOR_ATTR_PANEL_CLASS\r\n    );\r\n    if (attrPanelNode === null) {\r\n      return;\r\n    }\r\n    const idListAttr = attrPanelNode.getAttribute(\"Field-id-list\");\r\n    _templateMod.templateClipBoard = idListAttr;\r\n  }\r\n\r\n  /**\r\n   * @function createDragOverGroup\r\n   * @name module:Template/TemplateMod.TemplateMod#createDragOverGroup\r\n   * @description 사이드 드래그 된 곳의 Object들을 svg 그룹으로 묶는다.\r\n   *\r\n   * @param {Object} border Snap의 bounding box\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  createDragOverGroup(border) {\r\n    _templateMod.hideFieldAttribute();\r\n    var tempGNew = _templateMod.mainCanvas.group();\r\n    tempGNew.attr({ id: CONSTANTS.DRAG_BOX_NAME });\r\n    var items = _templateMod.mainCanvas.selectAll(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME + \" > g\"\r\n    );\r\n    var selectItemArray = [];\r\n    items.forEach(function (el) {\r\n      var mybounds = el.getBBox();\r\n      if (Snap.path.isBBoxIntersect(mybounds, border)) {\r\n        selectItemArray.push(el);\r\n      }\r\n      if (!Utils.isEmptyObject(el.freeTransform)) {\r\n        el.freeTransform.hideResizeHandler();\r\n      }\r\n    });\r\n    if (selectItemArray.length == 1) {\r\n      if (!Utils.isEmptyObject(selectItemArray[0].freeTransform)) {\r\n        selectItemArray[0].freeTransform.unplug();\r\n      }\r\n      let bbox = selectItemArray[0].getBBox();\r\n      _templateMod.changeFreeTransform(\r\n        selectItemArray[0],\r\n        bbox.width,\r\n        bbox.height\r\n      );\r\n      const childRect = selectItemArray[0].select(\"rect\");\r\n      _templateMod.showFieldAttribute(childRect.attr(\"id\"));\r\n      tempGNew.remove();\r\n      return;\r\n    }\r\n    if (selectItemArray.length < 1) {\r\n      tempGNew.remove();\r\n      _templateMod.hideFieldAttribute();\r\n      return;\r\n    }\r\n    var fieldList = [];\r\n    selectItemArray.forEach(function (el) {\r\n      if (!Utils.isEmptyObject(el.freeTransform)) {\r\n        el.freeTransform.unplug();\r\n      }\r\n\r\n      const childRect = el.select(\"rect\");\r\n      fieldList.push(_templateMod.fieldDictionary[childRect.attr(\"id\")]);\r\n      tempGNew.append(el);\r\n    });\r\n    _templateMod.showFieldListAttribute(fieldList);\r\n    if (!Utils.isEmptyObject(tempGNew.freeTransform)) {\r\n      tempGNew.freeTransform.unplug();\r\n    }\r\n    _templateMod.calcTemplateBoundary(\r\n      tempGNew.getBBox().width,\r\n      tempGNew.getBBox().height\r\n    );\r\n    var tempGFt = _templateMod.mainCanvas.freeTransform(\r\n      tempGNew,\r\n      {\r\n        snap: { rotate: 1 },\r\n        size: 4,\r\n        draw: \"bbox\",\r\n        boundary: _templateMod.pageBoundingBox,\r\n      },\r\n      function (ft, events) {\r\n        _templateMod.tmpGroupFtEvent(events[0]);\r\n      }\r\n    );\r\n    tempGFt.setOpts({ rotate: false, scale: false });\r\n  }\r\n\r\n  /**\r\n   * @function createField\r\n   * @name module:Template/TemplateMod.TemplateMod#createField\r\n   * @description 사이드 필드를 생성한다.\r\n   *\r\n   * @param {String} type  필드의 타입\r\n   * @param {Number} mousePageX   마우스의 x좌표\r\n   * @param {Number } mousePageY   마우스의 y좌표\r\n   * @return {Object} fieldGroup SVG의 Group Object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  createField(type, mousePageX, mousePageY) {\r\n    var mainGroup = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME\r\n    );\r\n\r\n    const viewer1 = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER\r\n    );\r\n    const viewerBoundingRect = viewer1.getBoundingClientRect();\r\n    const m1 = _templateMod.mainCanvas.transform().diffMatrix.invert();\r\n    const fieldX = m1.x(\r\n      mousePageX - viewerBoundingRect.left,\r\n      mousePageY - viewerBoundingRect.top\r\n    );\r\n    const fieldY = m1.y(\r\n      mousePageX - viewerBoundingRect.left,\r\n      mousePageY - viewerBoundingRect.top\r\n    );\r\n    let field = _templateMod.createFieldObject(\r\n      type,\r\n      fieldX,\r\n      fieldY,\r\n      _templateMod.getPdfPageFromSvgPos(fieldX, fieldY)\r\n    );\r\n    _templateMod.selectAddFieldType = \"\";\r\n    let ost = _templateMod.computePageOffset();\r\n    let pageBorderWidth = _templateMod.getPageBorderWidth(field.pageNo);\r\n\r\n    let x = mousePageX - ost.left - pageBorderWidth.left;\r\n    let y = mousePageY - ost.top - pageBorderWidth.top;\r\n    let fieldGroup = field.getSVGFieldObject(\r\n      _templateMod.mainCanvas,\r\n      mainGroup,\r\n      _templateMod.pdfViewer.currentScale,\r\n      _templateMod.ownerNode,\r\n      _templateMod.removeDragOverGroup,\r\n      _templateMod.changeFieldValueEvent,\r\n      _templateMod.changeFreeTransform\r\n    );\r\n    var groupBBox = fieldGroup.getBBox();\r\n    const viewport = _templateMod.pdfViewer._pages[field.pageNo - 1].viewport;\r\n    let pdfPoision = viewport.convertToPdfPoint(x, y);\r\n    let pdfPoision2 = viewport.convertToPdfPoint(\r\n      x + groupBBox.width,\r\n      y + groupBBox.height\r\n    );\r\n    field.pdfX = pdfPoision[0];\r\n    field.pdfY = pdfPoision[1];\r\n    field.pdfX2 = pdfPoision2[0];\r\n    field.pdfY2 = pdfPoision2[1];\r\n    _templateMod.fieldDictionary[field.id] = field;\r\n    if (Utils.getUserInfoOptsListCount() === 1) {\r\n      const keys = Object.keys(_templateMod.templateUserFieldInfo);\r\n      field.m_ownerId = _templateMod.templateUserFieldInfo[keys[0]].userUUID;\r\n      _templateMod.refreshformerList(field);\r\n      _templateMod.buildFieldformerList();\r\n    }\r\n\r\n    _templateMod.changeFreeTransform(fieldGroup, field.width, field.height);\r\n    _templateMod.showAsteriskDiv(\r\n      field.id,\r\n      field.required === \"true\",\r\n      field.x,\r\n      field.y,\r\n      field.height\r\n    );\r\n    var jsonData = JSON.stringify(field);\r\n    _templateMod.addUndoRedoAct(\r\n      CONSTANTS.CREATE_FIELD_ACTION,\r\n      jsonData,\r\n      jsonData\r\n    );\r\n    return fieldGroup;\r\n  }\r\n\r\n  /**\r\n   * @function createFieldObject\r\n   * @name module:Template/TemplateMod.TemplateMod#createFieldObject\r\n   * @description 사이드 Filed Object의 인스턴스를 생성한다.\r\n   *\r\n   * @param {String} type 필드의 타입\r\n   * @param {Number} x     x좌표\r\n   * @param {Number} y     y좌표\r\n   * @return {Object} Field Object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  createFieldObject(type, x, y, pageNum = undefined) {\r\n    let fieldId = _templateMod.generateFieldId(type);\r\n    let pageNo = pageNum;\r\n    if (pageNum === undefined) {\r\n      pageNo = _templateMod.pdfViewer.currentPageNumber;\r\n    }\r\n    console.log(pageNo);\r\n    switch (type) {\r\n      case \"TextField\": {\r\n        let textField = new TextField(fieldId, pageNo, x, y);\r\n        return textField;\r\n      }\r\n      case \"LabelField\": {\r\n        let labelField = new LabelField(fieldId, pageNo, x, y);\r\n        return labelField;\r\n      }\r\n      case \"SignField\": {\r\n        let signField = new SignField(\r\n          fieldId,\r\n          pageNo,\r\n          x,\r\n          y,\r\n          _templateMod.useDrawSign,\r\n          _templateMod.useImageSign,\r\n          _templateMod.useRegSign\r\n        );\r\n        \r\n        return signField;\r\n      }\r\n      case \"NumberField\": {\r\n        let numberField = new NumberField(fieldId, pageNo, x, y);\r\n        return numberField;\r\n      }\r\n      case \"DateField\": {\r\n        let dateField = new DateField(fieldId, pageNo, x, y);\r\n        return dateField;\r\n      }\r\n      case \"ImageField\": {\r\n        let imageField = new ImageField(fieldId, pageNo, x, y);\r\n        return imageField;\r\n      }\r\n      case \"MultiLineTextField\": {\r\n        let multilineTextField = new MultiLineTextField(fieldId, pageNo, x, y);\r\n        return multilineTextField;\r\n      }\r\n      case \"CheckboxField\": {\r\n        let checkboxField = new CheckboxField(fieldId, pageNo, x, y);\r\n        return checkboxField;\r\n      }\r\n      case \"RadioField\": {\r\n        let radioField = new RadioField(fieldId, pageNo, x, y);\r\n        return radioField;\r\n      }\r\n      case \"ComboboxField\": {\r\n        let comboboxField = new ComboboxField(fieldId, pageNo, x, y);\r\n        return comboboxField;\r\n      }\r\n      default: {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function createTemplateRect\r\n   * @name module:Template/TemplateMod.TemplateMod#createTemplateRect\r\n   * @description PDF위에 올라가는 Template 레이어에 필드를 만들기위해 임시 Div를 만든다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  createTemplateRect() {\r\n    var templateLayer = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_NAME\r\n    );\r\n    templateLayer.style.display = \"block\";\r\n    let templateRect = document.createElement(\"div\");\r\n    templateRect.id = CONSTANTS.TEMPLATE_LAYER_RECT_NAME;\r\n    templateRect.style.position = \"absolute\";\r\n    templateRect.style.left = \"0px\";\r\n    templateRect.style.top = \"0px\";\r\n    var size = _templateMod.getFieldSize(_templateMod.selectAddFieldType);\r\n    var curScale = _templateMod.pdfViewer.currentScale;\r\n    templateRect.style.width = size.w * curScale + \"px\";\r\n    templateRect.style.height = size.h * curScale + \"px\";\r\n    templateRect.style.background = \"none\";\r\n    templateRect.style.border = \"1px solid red\";\r\n    _templateMod.ownerNode\r\n      .querySelector(\" #\" + CONSTANTS.TEMPLATE_LAYER_NAME)\r\n      .appendChild(templateRect);\r\n\r\n    templateLayer.addEventListener(\r\n      \"mousemove\",\r\n      _templateMod.templateMouseMoveEvent,\r\n      true\r\n    );\r\n    templateLayer.addEventListener(\r\n      \"mouseup\",\r\n      _templateMod.templateMouseUpEvent,\r\n      true\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @function dragendFunc\r\n   * @name module:Template/TemplateMod.TemplateMod#dragendFunc\r\n   * @description SVG내에서 Drag가 끝났을떄의 후처리를 한다. .\r\n   *\r\n   * @param {Event} event event object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  dragendFunc(event) {\r\n    event.stopPropagation();\r\n    if (!_templateMod.dragStart) {\r\n      return false;\r\n    }\r\n    var border = _templateMod.dragBox.getBBox();\r\n    _templateMod.dragBox.remove();\r\n    _templateMod.dragStart = false;\r\n    _templateMod.removeDragOverGroup();\r\n    _templateMod.createDragOverGroup(border);\r\n  }\r\n\r\n  /**\r\n   * @function dragmoveFunc\r\n   * @name module:Template/TemplateMod.TemplateMod#dragmoveFunc\r\n   * @description SVG내에서 드래그 중일 때 처리를 한다.\r\n   *\r\n   * @param {Number} dx  시작좌표로 부터 x만큼 움직인 크기\r\n   * @param {Number} dy   시작좌표로 부터 y만큼 움직인 크기\r\n   * @param {Number} x   마우스의 x좌표 사용하지 않음\r\n   * @param {Number} y   마우스의 y좌표 사용하지 않음\r\n   * @param {Object} event     Event Object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  dragmoveFunc(dx, dy, x, y, event) {\r\n    event.stopPropagation();\r\n    if (!_templateMod.dragStart) {\r\n      return false;\r\n    }\r\n    var xoffset = 0,\r\n      yoffset = 0;\r\n\r\n    if (dx < 0) {\r\n      xoffset = dx;\r\n      dx = -1 * dx;\r\n    }\r\n\r\n    if (dy < 0) {\r\n      yoffset = dy;\r\n      dy = -1 * dy;\r\n    }\r\n\r\n    _templateMod.dragBox.transform(\"T\" + xoffset + \",\" + yoffset);\r\n    _templateMod.dragBox.attr(\"width\", dx);\r\n    _templateMod.dragBox.attr(\"height\", dy);\r\n    _templateMod.dragBox.attr(\"fill\", \"none\");\r\n  }\r\n\r\n  /**\r\n   * @function dragstartFunc\r\n   * @name module:Template/TemplateMod.TemplateMod#dragstartFunc\r\n   * @description SVG내에서 drag를 시작할때 처리하는 메소드\r\n   *\r\n   * @param {Number} x   마우스의 x좌표 사용하지 않음\r\n   * @param {Number} y   마우스의 y좌표 사용하지 않음\r\n   * @param {Object} event     Event Object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  dragstartFunc(x, y, event) {\r\n    event.stopPropagation();\r\n    //if path or circle were clicked don't draw box\r\n    if (\r\n      !(event.target.nodeName === \"svg\" || event.target.nodeName === \"rect\")\r\n    ) {\r\n      if (_templateMod.dragBox) {\r\n        _templateMod.dragBox.remove();\r\n      }\r\n      return false;\r\n    }\r\n    if (event.target.nodeName === \"rect\") {\r\n      var dragStop = false;\r\n      if (!Utils.isStringEmpty(event.srcElement.id)) {\r\n        var obj1 = _templateMod.mainCanvas\r\n          .select(\"#\" + event.srcElement.id)\r\n          .parent();\r\n        if (obj1) {\r\n          dragStop =\r\n            !Utils.isEmptyObject(obj1.freeTransform) ||\r\n            obj1.parent().attr(\"id\") === CONSTANTS.DRAG_BOX_NAME;\r\n        }\r\n      }\r\n      if (\r\n        (event.target !== undefined &&\r\n          event.target.classList !== null &&\r\n          event.target.classList !== undefined &&\r\n          event.target.classList.length > 0 &&\r\n          event.target.classList.contains(\"fthandle\")) ||\r\n        dragStop\r\n      ) {\r\n        if (\r\n          _templateMod.dragBox !== undefined &&\r\n          _templateMod.dragBox !== null\r\n        ) {\r\n          _templateMod.dragBox.remove();\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n    _templateMod.dragStart = true;\r\n    var viewer1 = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER\r\n    );\r\n    var br = viewer1.getBoundingClientRect();\r\n    var mainCavnasMatrix = _templateMod.mainCanvas\r\n      .transform()\r\n      .diffMatrix.invert();\r\n    var gragBoxX = mainCavnasMatrix.x(\r\n      event.pageX - br.left,\r\n      event.pageY - br.top\r\n    );\r\n    var gragBoxY = mainCavnasMatrix.y(\r\n      event.pageX - br.left,\r\n      event.pageY - br.top\r\n    );\r\n    _templateMod.dragBox = _templateMod.mainCanvas\r\n      .rect(gragBoxX, gragBoxY, 0, 0)\r\n      .attr(\"stroke\", \"black\");\r\n  }\r\n\r\n  /**\r\n   * @function exportFieldData\r\n   * @name module:Template/TemplateMod.TemplateMod#exportFieldData\r\n   * @description Field정보를 JSON형식으로 리턴하는 메소드\r\n   *\r\n   * @return {String} { formTemplateName: \"\", pages: [ {data..., fields: []}] }\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  exportFieldData() {\r\n    var templateTitle = _templateMod.ownerNode.querySelector(\r\n      \" .Editor-Toolbar-Group.Center > span \"\r\n    );\r\n    templateTitle.textContent;\r\n    let templateData = new TemplateData(templateTitle.textContent);\r\n\r\n    const keys = Object.keys(_templateMod.templateUserFieldInfo);\r\n    keys.forEach(function (key) {\r\n      const userInfo = _templateMod.templateUserFieldInfo[key];\r\n      let templateDataOwner =\r\n        TemplateDataOwner.cloneTemplateDataOwnerObject(userInfo);\r\n      for (\r\n        var pageNo = 0;\r\n        pageNo < _templateMod.pdfViewer.pagesCount;\r\n        ++pageNo\r\n      ) {\r\n        let templateDataPage = new TemplateDataPage(pageNo);\r\n\r\n        const fieldKeys = Object.keys(_templateMod.fieldDictionary);\r\n        fieldKeys.forEach(function (fieldKey) {\r\n          const field = _templateMod.fieldDictionary[fieldKey];\r\n          if (field.isRemoved) {\r\n            return;\r\n          }\r\n          if (pageNo !== field.pageNo - 1) {\r\n            return;\r\n          }\r\n          if (Utils.isStringEmpty(field.ownerId) && userInfo.isFormer === \"Y\") {\r\n            templateDataPage.pushField(field);\r\n            return;\r\n          }\r\n          if (field.ownerId !== key) {\r\n            return;\r\n          }\r\n          templateDataPage.pushField(field);\r\n        });\r\n        templateDataOwner.pushPage(templateDataPage);\r\n      }\r\n      templateData.pushOwner(templateDataOwner);\r\n    });\r\n\r\n    return JSON.stringify(templateData);\r\n  }\r\n\r\n  /**\r\n   * @function fieldDeleteBtnClicked\r\n   * @name module:Template/TemplateMod.TemplateMod#fieldDeleteBtnClicked\r\n   * @description 필드의 삭제 버튼을 눌렀을때 동작하는 메소드.\r\n   *\r\n   * @param {Object} evt    Event Object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  fieldDeleteBtnClicked(evt) {\r\n    _templateMod.removeSelectedField();\r\n  }\r\n\r\n  /**\r\n   * @function fieldFtEvent\r\n   * @name module:Template/TemplateMod.TemplateMod#fieldFtEvent\r\n   * @description Default Value 리스트정보를 설정 .\r\n   *\r\n   * @param {String} eventName   이벤트 종류\r\n   * @param {Object} field  SVG의 Field Group Object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  fieldFtEvent(eventName, field) {\r\n    if (eventName === \"drag start\" || eventName === \"apply\") {\r\n      //hide attr\r\n      let childRect = field.select(\"rect\");\r\n      let fieldId = childRect.attr(\"id\");\r\n      if (_templateMod.isFieldDragStart === true) {\r\n        _templateMod.hideFieldAttribute();\r\n        if (Utils.isShowAsteriskDiv(_templateMod.ownerNode, fieldId)) {\r\n          Utils.showAsteriskDiv(_templateMod.ownerNode, fieldId, false);\r\n        }\r\n        return;\r\n      }\r\n      _templateMod.isFieldDragStart = true;\r\n      _templateMod.hideFieldAttribute();\r\n\r\n      Utils.showAsteriskDiv(_templateMod.ownerNode, fieldId, false);\r\n    }\r\n    if (eventName === \"scale end\" || eventName === \"drag end\") {\r\n      _templateMod.isFieldDragStart = false;\r\n      _templateMod.changeFieldPosition(field);\r\n      _templateMod.showFieldAttribute(\r\n        _templateMod.getFieldIdFromGroupNode(field)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function fieldRepositioning\r\n   * @name module:Template/TemplateMod.TemplateMod#fieldRepositioning\r\n   * @description 필드의 위치를 재조정한다.\r\n   *\r\n   * @param {Object} event  event object\r\n   * @param {Boolean} isImport  field를 임포트하는지 여부\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  fieldRepositioning(event, isImport = false) {\r\n    const keys = Object.keys(_templateMod.fieldDictionary);\r\n    keys.forEach(function (key) {\r\n      var field = _templateMod.fieldDictionary[key];\r\n      var fieldGroup = _templateMod.mainCanvas.select(\"#\" + field.id + \"Group\");\r\n\r\n      var fieldRect = fieldGroup.select(\"rect\");\r\n      var fieldSvg = fieldGroup.select(\"svg\");\r\n      var oldW = field.width;\r\n      const newRect = _templateMod.calcFieldPostion(field, isImport);\r\n      var scale = newRect.width / oldW;\r\n      fieldRect.attr(newRect);\r\n      fieldSvg.attr(newRect);\r\n      var fieldSvgText = fieldSvg.select(\"text\");\r\n      if (fieldSvgText) {\r\n        fieldSvgText.attr(\"font-size\", field.fontSize * scale + \"px\");\r\n        fieldGroup.transform(Snap.matrix().toTransformString());\r\n      }\r\n\r\n      _templateMod.changeFreeTransform(\r\n        fieldGroup,\r\n        newRect.width,\r\n        newRect.height\r\n      );\r\n\r\n      _templateMod.showAsteriskDiv(\r\n        field.id,\r\n        field.required === \"true\",\r\n        newRect.x,\r\n        newRect.y,\r\n        newRect.height\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function generateFieldId\r\n   * @name module:Template/TemplateMod.TemplateMod#generateFieldId\r\n   * @description 필드의 이름을 현재 존재하는 필드의 No중 MAX값을 찾아서 +1해서 만든다.\r\n   *\r\n   * @param {String} type 필드의 종류\r\n   * @return {String} 필드의 이름.\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  generateFieldId(type) {\r\n    var typeList = _templateMod.mainCanvas.selectAll(\r\n      \"rect[id^='\" + type + \"']\"\r\n    );\r\n    if (typeList.length < 1) {\r\n      return type + 1;\r\n    }\r\n    let firstId = typeList[0].node.id;\r\n    let maxNoStr = firstId.replace(type, \"\");\r\n    let maxNo = parseInt(maxNoStr);\r\n    for (var typeIdx = 1; typeIdx < typeList.length; typeIdx++) {\r\n      let obj1 = typeList[typeIdx];\r\n      let objNoStr = obj1.attr(\"id\").replace(type, \"\");\r\n      let objNo = parseInt(objNoStr);\r\n      if (objNo > maxNo) {\r\n        maxNo = objNo;\r\n      }\r\n    }\r\n    maxNo = maxNo + 1;\r\n    return type + maxNo;\r\n  }\r\n\r\n  /**\r\n   * @function getCreateFieldDefaultWidth\r\n   * @name module:Template/TemplateMod.TemplateMod#getCreateFieldDefaultWidth\r\n   * @description 필드를 만들때 필드의 설정된 기본크기를 리턴한다.\r\n   *\r\n   * @param {String} type  필드의 종류\r\n   * @return {Number} 필드의 기본 가로길이\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getCreateFieldDefaultWidth(type) {\r\n    switch (type) {\r\n      case \"TextField\": {\r\n        return TextField.widthValue();\r\n      }\r\n      case \"LabelField\": {\r\n        return LabelField.widthValue();\r\n      }\r\n      case \"NumberField\": {\r\n        return NumberField.widthValue();\r\n      }\r\n      case \"DateField\": {\r\n        return DateField.widthValue();\r\n      }\r\n      case \"SignField\": {\r\n        return SignField.widthValue();\r\n      }\r\n      case \"ImageField\": {\r\n        return ImageField.widthValue();\r\n      }\r\n      case \"MultiLineTextField\": {\r\n        return MultiLineTextField.widthValue();\r\n      }\r\n      case \"CheckboxField\": {\r\n        return CheckboxField.widthValue();\r\n      }\r\n      case \"RadioField\": {\r\n        return RadioField.widthValue();\r\n      }\r\n      case \"ComboboxField\": {\r\n        return ComboboxField.widthValue();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function getDvTextValue\r\n   * @name module:Template/TemplateMod.TemplateMod#getDvTextValue\r\n   * @description Default Value 의 읽을 수 있는 Text값을 반환한다.\r\n   *\r\n   * @param  {String} value 기본값의 variable\r\n   * @return {String} 기본값의 Text 값\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getDvTextValue(value) {\r\n    const dvOpts = Utils.getDVFieldOptsList();\r\n    for (var idx = 0; idx < dvOpts.length; ++idx) {\r\n      if (dvOpts[idx].value === value) {\r\n        return dvOpts[idx].text;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  /**\r\n   * @function getFieldFromJson\r\n   * @name module:Template/TemplateMod.TemplateMod#getFieldFromJson\r\n   * @description JSON 텍스트를 이용하여 필드의 인스턴스를 생성하여 반환한다.\r\n   *\r\n   * @param  {String} type 필드의 종류\r\n   * @param  {String} jsonData  필드 데이터의 JSON 텍스트\r\n   * @return Field Object 필드의 인스턴스\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getFieldFromJson(type, jsonData) {\r\n    switch (type) {\r\n      case \"SignField\": {\r\n        return BaseField.fromJson(new SignField(), jsonData);\r\n      }\r\n      case \"TextField\": {\r\n        return BaseField.fromJson(new TextField(), jsonData);\r\n      }\r\n      case \"LabelField\": {\r\n        return BaseField.fromJson(new LabelField(), jsonData);\r\n      }\r\n      case \"NumberField\": {\r\n        return BaseField.fromJson(new NumberField(), jsonData);\r\n      }\r\n      case \"DateField\": {\r\n        return BaseField.fromJson(new DateField(), jsonData);\r\n      }\r\n      case \"ImageField\": {\r\n        return BaseField.fromJson(new ImageField(), jsonData);\r\n      }\r\n      case \"MultiLineTextField\": {\r\n        return BaseField.fromJson(new MultiLineTextField(), jsonData);\r\n      }\r\n      case \"CheckboxField\": {\r\n        return BaseField.fromJson(new CheckboxField(), jsonData);\r\n      }\r\n      case \"RadioField\": {\r\n        return BaseField.fromJson(new RadioField(), jsonData);\r\n      }\r\n      case \"ComboboxField\": {\r\n        return BaseField.fromJson(new ComboboxField(), jsonData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function getFieldIdFromGroupNode\r\n   * @name module:Template/TemplateMod.TemplateMod#getFieldIdFromGroupNode\r\n   * @description SVG의 Group오브젝트로부터 필드의 ID를 찾아서 반환한다.\r\n   *\r\n   * @param  {Object} fieldGorup  SVG의 group 오브젝트\r\n   * @return {String} 필드의 ID\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getFieldIdFromGroupNode(fieldGorup) {\r\n    let childRect = fieldGorup.select(\"rect\");\r\n    return childRect.attr(\"id\");\r\n  }\r\n\r\n  /**\r\n   * @function getFieldJsonData\r\n   * @name module:Template/TemplateMod.TemplateMod#getFieldJsonData\r\n   * @description 필드의 데이터를 JSON Text로 반환한다.\r\n   *\r\n   * @param  {String} fieldId Field의 ID\r\n   * @return {String} JSON 텍스트\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getFieldJsonData(fieldId) {\r\n    var field = _templateMod.fieldDictionary[fieldId];\r\n    var data = JSON.stringify(field);\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @function getFieldSize\r\n   * @name module:Template/TemplateMod.TemplateMod#getFieldSize\r\n   * @description 필드의 가로 세로 사이즈를 리턴.\r\n   *\r\n   * @param  {String} type 필드의 종류\r\n   * @return  {Object} { w: , h:  }  default - { w: 150, h: 40 };\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getFieldSize(type) {\r\n    var size = { w: 150, h: 40 };\r\n    switch (type) {\r\n      case \"TextField\":\r\n      case \"NumberField\":\r\n      case \"DateField\":\r\n      case \"LabelField\":\r\n      case \"ComboboxField\":\r\n        size = { w: TextField.widthValue(), h: TextField.heightValue() };\r\n        break;\r\n      case \"SignField\":\r\n      case \"ImageField\":\r\n        size = { w: SignField.widthValue(), h: SignField.heightValue() };\r\n        break;\r\n      case \"MultiLineTextField\":\r\n        size = {\r\n          w: MultiLineTextField.widthValue(),\r\n          h: MultiLineTextField.heightValue(),\r\n        };\r\n        break;\r\n      case \"CheckboxField\":\r\n        size = {\r\n          w: CheckboxField.widthValue(),\r\n          h: CheckboxField.heightValue(),\r\n        };\r\n        break;\r\n      case \"RadioField\":\r\n        size = { w: RadioField.widthValue(), h: RadioField.heightValue() };\r\n        break;\r\n    }\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * @function getPageElement\r\n   * @name module:Template/TemplateMod.TemplateMod#getPageElement\r\n   * @description PDF 페이지 Element\r\n   *\r\n   * @param  {Number} pageNo  PDF 페이지 번호\r\n   * @return {Element}\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getPageElement(pageNo) {\r\n    let pageNumber = pageNo;\r\n    if (pageNumber === undefined) {\r\n      pageNumber = _templateMod.pdfViewer.currentPageNumber;\r\n    }\r\n    let pg = _templateMod.ownerNode.querySelector(\r\n      \" #TemplatePDFViewer [aria-label='Page \" + pageNumber + \"']\"\r\n    );\r\n    return pg;\r\n  }\r\n\r\n  /**\r\n   * @function getPageBorderWidth\r\n   * @name module:Template/TemplateMod.TemplateMod#getPageBorderWidth\r\n   * @description PDF 페이지의 border Width를 반한한다.\r\n   *\r\n   * @param { Number} pageNo  PDF 페이지 번호\r\n   * @return {Rect} Object { left: , top: , right: , bottom:  }\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getPageBorderWidth(pageNo) {\r\n    let pageNumber = pageNo;\r\n    if (pageNumber === undefined) {\r\n      pageNumber = _templateMod.pdfViewer.currentPageNumber;\r\n    }\r\n    let pgNode = _templateMod.ownerNode.querySelector(\r\n      \" #TemplatePDFViewer [aria-label='Page \" + pageNumber + \"']\"\r\n    );\r\n\r\n    let pageComputedStyle = window.getComputedStyle(pgNode);\r\n    let borderTopStr = pageComputedStyle.getPropertyValue(\"border-top-width\");\r\n    let borderLeftStr = pageComputedStyle.getPropertyValue(\"border-left-width\");\r\n    let borderBottomStr = pageComputedStyle.getPropertyValue(\r\n      \"border-bottom-width\"\r\n    );\r\n    let borderRightStr =\r\n      pageComputedStyle.getPropertyValue(\"border-right-width\");\r\n    let borderTopWidth = 0;\r\n    let borderLeftWidth = 0;\r\n    let borderBottomWidth = 0;\r\n    let borderRightWidth = 0;\r\n    if (!Utils.isStringEmpty(borderTopStr)) {\r\n      borderTopWidth = parseInt(borderTopStr.replace(\"px\", \"\"));\r\n    }\r\n    if (!Utils.isStringEmpty(borderLeftStr)) {\r\n      borderLeftWidth = parseInt(borderLeftStr.replace(\"px\", \"\"));\r\n    }\r\n    if (!Utils.isStringEmpty(borderBottomStr)) {\r\n      borderBottomWidth = parseInt(borderBottomStr.replace(\"px\", \"\"));\r\n    }\r\n    if (!Utils.isStringEmpty(borderRightStr)) {\r\n      borderRightWidth = parseInt(borderRightStr.replace(\"px\", \"\"));\r\n    }\r\n    return {\r\n      top: borderTopWidth,\r\n      left: borderLeftWidth,\r\n      bottom: borderBottomWidth,\r\n      right: borderRightWidth,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @function getPageBoundingClientRect\r\n   * @name module:Template/TemplateMod.TemplateMod#getPageBoundingClientRect\r\n   * @description PDF 페이지의 Bounding Rect\r\n   *\r\n   * @param { Number} pageNo  PDF 페이지 번호\r\n   * @return {Rect} Object { x: , y: , width: , height:  }\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getPageBoundingClientRect(pageNo) {\r\n    let pageNumber = pageNo;\r\n    if (pageNumber === undefined) {\r\n      pageNumber = _templateMod.pdfViewer.currentPageNumber;\r\n    }\r\n    let pg = _templateMod.ownerNode.querySelector(\r\n      \" #TemplatePDFViewer [aria-label='Page \" + pageNumber + \"']\"\r\n    );\r\n    return pg.getBoundingClientRect();\r\n  }\r\n\r\n  /**\r\n   * @function getPdfPageFromSvgPos\r\n   * @name module:Template/TemplateMod.TemplateMod#getPdfPageFromSvgPos\r\n   * @description SVG 레이어에서 PDF의 페이지 위치를 계산하여 리턴한다.\r\n   *\r\n   * @param {Number} x SVG의 X좌표\r\n   * @param {Number} y SVG의 Y좌표\r\n   * @return {Number} Pdf Page Number\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getPdfPageFromSvgPos(x, y) {\r\n    let currentHeightSum = 0;\r\n    for (let idx = 1; idx <= _templateMod.pdfViewer.pagesCount; ++idx) {\r\n      let pageRect = _templateMod.getPageBoundingClientRect(idx);\r\n      let pageHeight = pageRect.height;\r\n      currentHeightSum += pageHeight;\r\n      if (currentHeightSum > y) {\r\n        console.log(`${idx}, ${pageHeight}, ${currentHeightSum}, ${y}`);\r\n        return idx;\r\n      }\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  /**\r\n   * @function hideAllResizeHandles\r\n   * @name module:Template/TemplateMod.TemplateMod#hideAllResizeHandles\r\n   * @description 필드들의 리사이즈 핸들러들을 숨긴다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  hideAllResizeHandles() {\r\n    let items = _templateMod.mainCanvas.selectAll(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME + \" > g\"\r\n    );\r\n    items.forEach(function (element) {\r\n      if (!Utils.isEmptyObject(element.freeTransform)) {\r\n        element.freeTransform.hideResizeHandler();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function hideFieldAttribute\r\n   * @name module:Template/TemplateMod.TemplateMod#hideFieldAttribute\r\n   * @description 필드의 속성 팝업을 숨긴다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  hideFieldAttribute() {\r\n    const selectedNode = _templateMod.ownerNode.querySelector(\r\n      \" .\" + CONSTANTS.EDITOR_ATTR_CLASS\r\n    );\r\n    Utils.removeAllChildNode(selectedNode);\r\n    if (selectedNode !== null) {\r\n      selectedNode.style.display = \"none\";\r\n    }\r\n\r\n    const deleteBtnNode = _templateMod.ownerNode.querySelector(\r\n      \" .\" + CONSTANTS.FIELD_DELETE_BUTTON_CLASS\r\n    );\r\n\r\n    if (\r\n      deleteBtnNode !== null &&\r\n      deleteBtnNode.classList.contains(CONSTANTS.SHOW_CLASS)\r\n    ) {\r\n      deleteBtnNode.classList.toggle(CONSTANTS.SHOW_CLASS);\r\n    }\r\n    if (\r\n      deleteBtnNode !== null &&\r\n      !deleteBtnNode.classList.contains(CONSTANTS.HIDE_CLASS)\r\n    ) {\r\n      deleteBtnNode.classList.toggle(CONSTANTS.HIDE_CLASS);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function hideTemplateLayer\r\n   * @name module:Template/TemplateMod.TemplateMod#hideTemplateLayer\r\n   * @description TemplateLayer를 숨긴다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  hideTemplateLayer() {\r\n    let templateLayer = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_NAME\r\n    );\r\n    templateLayer.removeEventListener(\r\n      \"mousemove\",\r\n      _templateMod.templateMouseMoveEvent,\r\n      true\r\n    );\r\n    templateLayer.removeEventListener(\r\n      \"mouseup\",\r\n      _templateMod.templateMouseUpEvent,\r\n      true\r\n    );\r\n    templateLayer.style.display = \"none\";\r\n  }\r\n\r\n  /**\r\n   * @function importFieldData\r\n   * @name module:Template/TemplateMod.TemplateMod#importFieldData\r\n   * @description  field를 import한다.\r\n   *\r\n   * @param {Object} data  import할 json data\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  importFieldData(data) {\r\n    data.formerList.forEach((owner) => {\r\n      owner.pages.forEach((page) => {\r\n        if (page.pageNo >= _templateMod.pdfViewer._pages.length) {\r\n          return;\r\n        }\r\n        page.fields.forEach((field) => {\r\n          field.m_ownerId = owner.userUUID;\r\n          if (\r\n            owner.isFormer !== null &&\r\n            owner.isFormer !== undefined &&\r\n            owner.isFormer === \"Y\"\r\n          ) {\r\n            field.m_ownerId = \"\";\r\n          }\r\n          _templateMod.replaceFieldData(field, true);\r\n        });\r\n      });\r\n    });\r\n    // _templateMod.fieldRepositioning();\r\n    _templateMod.hideAllResizeHandles();\r\n    _templateMod.hideFieldAttribute();\r\n    _templateMod.hideTemplateLayer();\r\n    _templateMod.buildFieldformerList();\r\n  }\r\n\r\n  /**\r\n   * @function keycheck\r\n   * @name module:Template/TemplateMod.TemplateMod#keycheck\r\n   * @description  keycheck  단축키 이벤트.\r\n   *\r\n   * @param {Object} evt   evt객체\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  keycheck(evt) {\r\n    var keyCode = evt.which ? evt.which : evt.keyCode;\r\n    if (evt.ctrlKey) {\r\n      switch (keyCode) {\r\n        case 89:\r\n          _templateMod.redoAction();\r\n          return;\r\n        case 90:\r\n          _templateMod.undoAction();\r\n          return;\r\n        case 77:\r\n        // let dat1 = _templateMod.exportFieldData();\r\n        //  console.log((dat1));\r\n        //console.log(JSON.stringify(dat1));\r\n\r\n        // _templateMod.importFieldData(\"/testFields.json\", true);\r\n        // return;\r\n        // console.log(_templateMod.isAllFieldHasOwner());\r\n\r\n        // let ret1 = _templateMod.checkTemplateFieldData();\r\n        // console.log(ret1);\r\n      }\r\n    }\r\n\r\n    if (keyCode === 46) {\r\n      _templateMod.removeSelectedField();\r\n    }\r\n  }\r\n\r\n  pasteObject() {\r\n    console.log(_templateMod.templateClipBoard);\r\n    if (Utils.isStringEmpty(_templateMod.templateClipBoard)) {\r\n      return;\r\n    }\r\n    const fieldIdList = _templateMod.templateClipBoard.split(\",\");\r\n    for (const fieldId of fieldIdList) {\r\n      const field = _templateMod.fieldDictionary[fieldId];\r\n      const fieldJsonData = JSON.stringify(field);\r\n      const copyField1 = JSON.parse(fieldJsonData);\r\n      let newId = _templateMod.generateFieldId(copyField1.m_type);\r\n      copyField1.m_id = newId;\r\n      copyField1.m_pdfX = copyField1.m_pdfX + 10;\r\n      copyField1.m_pdfX2 = copyField1.m_pdfX2 + 10;\r\n      copyField1.m_pdfY = copyField1.m_pdfY - 10;\r\n      copyField1.m_pdfY2 = copyField1.m_pdfY2 - 10;\r\n      copyField1.m_fieldId = newId.replace(\r\n        copyField1.m_type,\r\n        copyField1.m_kind + \"-\"\r\n      );\r\n      _templateMod.replaceFieldStringData(JSON.stringify(copyField1));\r\n    }\r\n    if (fieldIdList.length > 0) {\r\n      _templateMod.hideAllResizeHandles();\r\n      _templateMod.hideFieldAttribute();\r\n      _templateMod.hideTemplateLayer();\r\n      _templateMod.buildFieldformerList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function redoAction\r\n   * @name module:Template/TemplateMod.TemplateMod#redoAction\r\n   * @description   이전에 실행취소 했던 것을 다시 실행한다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  redoAction() {\r\n    var idx = ++_templateMod.unredoActionIdx;\r\n    var data = _templateMod.unredoActionDict[idx];\r\n    if (data === undefined) {\r\n      _templateMod.unredoActionIdx--;\r\n      return;\r\n    }\r\n    _templateMod.removeDragOverGroup();\r\n    switch (data.action) {\r\n      case CONSTANTS.CREATE_FIELD_ACTION:\r\n      case CONSTANTS.FIELD_ATTR_CHANGE_ACTION: {\r\n        _templateMod.replaceFieldStringData(data.new);\r\n        _templateMod.buildFieldformerList();\r\n        return;\r\n      }\r\n      case CONSTANTS.REMOVE_FIELD_ACTION: {\r\n        _templateMod.removeField(data.new);\r\n        _templateMod.hideFieldAttribute();\r\n        _templateMod.buildFieldformerList();\r\n        return;\r\n      }\r\n      case CONSTANTS.GROUP_REMOVE_ACTION: {\r\n        data.new.forEach((newData) => {\r\n          _templateMod.removeField(newData);\r\n        });\r\n        _templateMod.hideFieldAttribute();\r\n        _templateMod.buildFieldformerList();\r\n        return;\r\n      }\r\n      case CONSTANTS.GROUP_ATTR_CHANGE_ACTION: {\r\n        data.new.forEach((newData) => {\r\n          _templateMod.replaceFieldStringData(newData);\r\n        });\r\n        _templateMod.buildFieldformerList();\r\n        return;\r\n      }\r\n      case CONSTANTS.GROUP_ATTR_OWNER_CHANGE_ACTION: {\r\n        data.new.forEach((newData) => {\r\n          _templateMod.replaceFieldStringData(newData);\r\n        });\r\n        _templateMod.buildFieldformerList();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function refreshformerList\r\n   * @name module:Template/TemplateMod.TemplateMod#refreshformerList\r\n   * @description  필드의 서명자 정보가 수정될 때 사이드의 서명자 리스트를 갱신한다.\r\n   *\r\n   * @param  {Obejct} field 갱신할 필드 인스턴스\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  refreshformerList(field) {\r\n    const keys = Object.keys(_templateMod.templateUserFieldInfo);\r\n    keys.forEach(function (key) {\r\n      let userInfo = _templateMod.templateUserFieldInfo[key];\r\n      if (userInfo.contains(field.id)) {\r\n        if (field.ownerId !== key) {\r\n          userInfo.removeField(field.id);\r\n        }\r\n      } else {\r\n        if (field.ownerId === key) {\r\n          userInfo.pushField(field.id, field);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function removeDragGroupField\r\n   * @name module:Template/TemplateMod.TemplateMod#removeDragGroupField\r\n   * @description  Drag해서 선택한 필드의 그룹을 지운다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  removeDragGroupField() {\r\n    var tempGOld = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.DRAG_BOX_NAME\r\n    );\r\n    var mainGroup = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME\r\n    );\r\n    if (tempGOld !== null && tempGOld.children().length >= 1) {\r\n      tempGOld.freeTransform.hideHandles();\r\n      var chds = tempGOld.children();\r\n      const tempGMatrix = tempGOld.transform().globalMatrix;\r\n      var oldDataArr = [];\r\n      var newDataArr = [];\r\n      chds.forEach(function (element) {\r\n        const childRect = element.select(\"rect\");\r\n        const field = _templateMod.fieldDictionary[childRect.attr(\"id\")];\r\n        field.isRemoved = true;\r\n\r\n        let usrFieldData = _templateMod.templateUserFieldInfo[field.ownerId];\r\n        if (usrFieldData !== null && usrFieldData !== undefined) {\r\n          usrFieldData.removeField(field.id);\r\n        }\r\n        let layerDiv = _templateMod.ownerNode.querySelector(\r\n          \" #\" + CONSTANTS.TEMPLATE_LAYER_ASTERISK_NAME\r\n        );\r\n        let asteriskDiv = _templateMod.ownerNode.querySelector(\r\n          \" #\" + field.id + \"_asterisk\"\r\n        );\r\n        layerDiv.removeChild(asteriskDiv);\r\n\r\n        const fieldJsonData = JSON.stringify(field);\r\n        oldDataArr.push(fieldJsonData);\r\n        newDataArr.push(fieldJsonData);\r\n        _templateMod.hideFieldAttribute();\r\n      });\r\n      _templateMod.addUndoRedoAct(\r\n        CONSTANTS.GROUP_REMOVE_ACTION,\r\n        oldDataArr,\r\n        newDataArr\r\n      );\r\n      tempGOld.remove();\r\n      _templateMod.buildFieldformerList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function removeDragOverGroup\r\n   * @name module:Template/TemplateMod.TemplateMod#removeDragOverGroup\r\n   * @description   드래그해서 만들 필드 그립을 해제한다.\r\n   *\r\n   * @param  {Boolean} donotUndoRedo  undoRedo를 실행하지 않는다.\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  removeDragOverGroup(donotUndoRedo = true) {\r\n    var tempGOld = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.DRAG_BOX_NAME\r\n    );\r\n    var mainGroup = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME\r\n    );\r\n    if (tempGOld !== null && tempGOld.children().length >= 1) {\r\n      tempGOld.freeTransform.hideHandles();\r\n      var chds = tempGOld.children();\r\n      const tempGMatrix = tempGOld.transform().globalMatrix;\r\n      chds.forEach(function (element) {\r\n        mainGroup.append(element);\r\n        _templateMod.changeFieldPosition(element, tempGMatrix, donotUndoRedo);\r\n        _templateMod.changeFreeTransform(\r\n          element,\r\n          element.width,\r\n          element.height\r\n        );\r\n      });\r\n      tempGOld.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function removeField\r\n   * @name module:Template/TemplateMod.TemplateMod#removeField\r\n   * @description  undo, redo에서 필드를 삭제할 때 사용.\r\n   *\r\n   * @param  {String} jsonData 필드의 JSON String 데이터\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  removeField(jsonData) {\r\n    const replaceData = JSON.parse(jsonData);\r\n    const field1 = _templateMod.getFieldFromJson(\r\n      replaceData.m_type,\r\n      replaceData\r\n    );\r\n    field1.isRemoved = true;\r\n    if (!Utils.isStringEmpty(field1.ownerId)) {\r\n      _templateMod.templateUserFieldInfo[field1.ownerId].removeField(field1.id);\r\n    }\r\n    const mainGroup = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME\r\n    );\r\n    var selectedFieldGroup = mainGroup.select(\"#\" + field1.id + \"Group\");\r\n    if (selectedFieldGroup) {\r\n      selectedFieldGroup.freeTransform.unplug();\r\n      selectedFieldGroup.remove();\r\n\r\n      let layerDiv = _templateMod.ownerNode.querySelector(\r\n        \" #\" + CONSTANTS.TEMPLATE_LAYER_ASTERISK_NAME\r\n      );\r\n      let asteriskDiv = _templateMod.ownerNode.querySelector(\r\n        \" #\" + field1.id + \"_asterisk\"\r\n      );\r\n      if (asteriskDiv !== null && asteriskDiv !== undefined) {\r\n        layerDiv.removeChild(asteriskDiv);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function removeSelectedField\r\n   * @name module:Template/TemplateMod.TemplateMod#removeSelectedField\r\n   * @description  선택된 필드를 삭제한다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  removeSelectedField() {\r\n    const selectedNode = _templateMod.ownerNode.querySelector(\r\n      \" .\" + CONSTANTS.EDITOR_ATTR_CLASS\r\n    );\r\n    const attrPanelNode = selectedNode.querySelector(\r\n      \".\" + CONSTANTS.EDITOR_ATTR_PANEL_CLASS\r\n    );\r\n    if (attrPanelNode === null) {\r\n      return;\r\n    }\r\n    const idListAttr = attrPanelNode.getAttribute(\"Field-id-list\");\r\n    if (Utils.isStringEmpty(idListAttr)) {\r\n      return;\r\n    }\r\n    const idArray = idListAttr.split(\",\");\r\n    if (idArray.length > 1) {\r\n      _templateMod.removeDragGroupField();\r\n      return;\r\n    }\r\n    var selectedItem = _templateMod.mainCanvas.select(\r\n      \"#\" + idArray[0] + \"Group\"\r\n    );\r\n    if (selectedItem === null) {\r\n      return;\r\n    }\r\n    const childRect = selectedItem.select(\"rect\");\r\n    const field = _templateMod.fieldDictionary[childRect.attr(\"id\")];\r\n    field.isRemoved = true;\r\n    let usrFieldData = _templateMod.templateUserFieldInfo[field.ownerId];\r\n    if (usrFieldData !== null && usrFieldData !== undefined) {\r\n      usrFieldData.removeField(field.id);\r\n    }\r\n\r\n    const fieldJsonData = JSON.stringify(field);\r\n    _templateMod.addUndoRedoAct(\r\n      CONSTANTS.REMOVE_FIELD_ACTION,\r\n      fieldJsonData,\r\n      fieldJsonData\r\n    );\r\n    _templateMod.hideFieldAttribute();\r\n    selectedItem.freeTransform.unplug();\r\n    selectedItem.remove();\r\n\r\n    let layerDiv = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_ASTERISK_NAME\r\n    );\r\n    let asteriskDiv = _templateMod.ownerNode.querySelector(\r\n      \" #\" + field.id + \"_asterisk\"\r\n    );\r\n    if (asteriskDiv !== null && asteriskDiv !== undefined) {\r\n      layerDiv.removeChild(asteriskDiv);\r\n    }\r\n\r\n    _templateMod.buildFieldformerList();\r\n  }\r\n\r\n  /**\r\n   * @function removeTemplateRect\r\n   * @name module:Template/TemplateMod.TemplateMod#removeTemplateRect\r\n   * @description   PDF위에 올라가는 Template 레이어에 필드를 만들기위해 만든 임시 Div를 삭제한다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  removeTemplateRect() {\r\n    let templateLayer = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_NAME\r\n    );\r\n    let templateRect = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_RECT_NAME\r\n    );\r\n    if (templateRect === null || templateRect === undefined) {\r\n      return;\r\n    }\r\n    templateLayer.removeChild(templateRect);\r\n    templateLayer.removeEventListener(\r\n      \"mousemove\",\r\n      _templateMod.templateMouseMoveEvent,\r\n      true\r\n    );\r\n    templateLayer.removeEventListener(\r\n      \"mouseup\",\r\n      _templateMod.templateMouseUpEvent,\r\n      true\r\n    );\r\n    templateLayer.style.display = \"none\";\r\n  }\r\n\r\n  /**\r\n   * @function replaceFieldData\r\n   * @name module:Template/TemplateMod.TemplateMod#replaceFieldData\r\n   * @description  해당하는 JSON String의 데이터로 필드를 교체한다.\r\n   *\r\n   * @param {String} jsonData 필드의 JSON String 데이터\r\n   * @param {Boolean} isImport import일 때 호출되는지 여부\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  replaceFieldData(jsonData, isImport = false) {\r\n    _templateMod.hideAllResizeHandles();\r\n    const field1 = _templateMod.getFieldFromJson(jsonData.m_type, jsonData);\r\n    field1.isRemoved = false;\r\n    const mainGroup = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME\r\n    );\r\n    var selectedFieldGroup = mainGroup.select(\"#\" + field1.id + \"Group\");\r\n    if (selectedFieldGroup) {\r\n      if (!Utils.isEmptyObject(selectedFieldGroup.freeTransform)) {\r\n        selectedFieldGroup.freeTransform.unplug();\r\n      }\r\n      selectedFieldGroup.remove();\r\n    }\r\n\r\n    const newRect = _templateMod.calcFieldPostion(field1, isImport);\r\n    let fieldGroup = field1.getSVGFieldObject(\r\n      _templateMod.mainCanvas,\r\n      mainGroup,\r\n      1.0,\r\n      _templateMod.ownerNode,\r\n      _templateMod.removeDragOverGroup,\r\n      _templateMod.changeFieldValueEvent,\r\n      _templateMod.changeFreeTransform\r\n    );\r\n    mainGroup.append(fieldGroup);\r\n    _templateMod.fieldDictionary[field1.id] = field1;\r\n\r\n    _templateMod.changeFreeTransform(fieldGroup, field1.width, field1.height);\r\n    _templateMod.refreshformerList(field1);\r\n\r\n    _templateMod.showAsteriskDiv(\r\n      field1.id,\r\n      field1.required === \"true\",\r\n      field1.x,\r\n      field1.y,\r\n      field1.height\r\n    );\r\n\r\n    _templateMod.showFieldAttribute(field1.id);\r\n  }\r\n\r\n  /**\r\n   * @function replaceFieldStringData\r\n   * @name module:Template/TemplateMod.TemplateMod#replaceFieldStringData\r\n   * @description   해당하는 JSON 데이터로 필드를 교체한다.\r\n   *\r\n   * @param {String} jsonData 필드의 JSON String 데이터\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  replaceFieldStringData(jsonData) {\r\n    _templateMod.hideAllResizeHandles();\r\n    const replaceData = JSON.parse(jsonData);\r\n    _templateMod.replaceFieldData(replaceData, true);\r\n  }\r\n\r\n  /**\r\n   * @function resetTool\r\n   * @name module:Template/TemplateMod.TemplateMod#resetTool\r\n   * @description  선택된 툴을 리셋한다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  resetTool() {\r\n    _templateMod.selectAddFieldType = \"\";\r\n    _templateMod.removeTemplateRect();\r\n  }\r\n\r\n  /**\r\n   * @function selectUserList\r\n   * @name module:Template/TemplateMod.TemplateMod#selectUserList\r\n   * @description \"User ID\"에 맞는 서명자를 선택된 상태로 만든다. .\r\n   *\r\n   * @param {String} userKey User Id\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  selectUserList(userKey) {\r\n    const ownerDom = _templateMod.ownerNode.querySelector(\r\n      \" #Editor-User-Component_Box\"\r\n    );\r\n    ownerDom.childNodes.forEach((child) => {\r\n      if (child.classList.contains(\"Current\")) {\r\n        child.classList.toggle(\"Current\");\r\n      }\r\n      const childUserKey = child.getAttribute(\"data-user-key\");\r\n      if (userKey === childUserKey) {\r\n        child.classList.toggle(\"Current\");\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function selectTool\r\n   * @name module:Template/TemplateMod.TemplateMod#selectTool\r\n   * @description 필드를 만들기 위한 툴을 설정한다. .\r\n   *\r\n   * @param {String} tool tool 이름\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  selectTool(tool) {\r\n    if (\r\n      _templateMod.selectAddFieldType !== \"\" ||\r\n      _templateMod.selectAddFieldType !== undefined\r\n    ) {\r\n      _templateMod.removeTemplateRect();\r\n    }\r\n    switch (tool) {\r\n      case 0: {\r\n        if (_templateMod.selectAddFieldType === \"SignField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"SignField\";\r\n        break;\r\n      }\r\n      case 1: {\r\n        if (_templateMod.selectAddFieldType === \"TextField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"TextField\";\r\n        break;\r\n      }\r\n      case 2: {\r\n        if (_templateMod.selectAddFieldType === \"MultiLineTextField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"MultiLineTextField\";\r\n        break;\r\n      }\r\n      case 3: {\r\n        if (_templateMod.selectAddFieldType === \"LabelField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"LabelField\";\r\n        break;\r\n      }\r\n      case 4: {\r\n        if (_templateMod.selectAddFieldType === \"CheckboxField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"CheckboxField\";\r\n        break;\r\n      }\r\n      case 5: {\r\n        if (_templateMod.selectAddFieldType === \"RadioField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"RadioField\";\r\n        break;\r\n      }\r\n      case 6: {\r\n        if (_templateMod.selectAddFieldType === \"ComboboxField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"ComboboxField\";\r\n        break;\r\n      }\r\n      case 7: {\r\n        if (_templateMod.selectAddFieldType === \"DateField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"DateField\";\r\n        break;\r\n      }\r\n      case 8: {\r\n        if (_templateMod.selectAddFieldType === \"NumberField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"NumberField\";\r\n        break;\r\n      }\r\n      case 9: {\r\n        if (_templateMod.selectAddFieldType === \"ImageField\") {\r\n          _templateMod.resetTool();\r\n          return;\r\n        }\r\n        _templateMod.selectAddFieldType = \"ImageField\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    _templateMod.createTemplateRect();\r\n    _templateMod.hideFieldAttribute();\r\n    _templateMod.hideAllResizeHandles();\r\n  }\r\n\r\n  /**\r\n   * @function showAsteriskDiv\r\n   * @name module:Template/TemplateMod.TemplateMod#showAsteriskDiv\r\n   * @description 해당 필드 ID의 필수 여부를 보여줄지 여부를 설정한다.\r\n   *\r\n   * @param {String} fieldId  Field id\r\n   * @param {Boolean} isShow     보여줄지 여부\r\n   * @param {Number} fieldX     필드의 X좌표\r\n   * @param {Number} fieldY     필드의 Y좌표\r\n   * @param {Number} fieldHeight   필드의 높이\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  showAsteriskDiv(fieldId, isShow, fieldX, fieldY, fieldHeight) {\r\n    let asteriskDiv = _templateMod.ownerNode.querySelector(\r\n      \" #\" + fieldId + \"_asterisk\"\r\n    );\r\n    if (asteriskDiv === null) {\r\n      const asteriskDiv = Utils.createAsteriskDiv(\r\n        _templateMod.ownerNode,\r\n        fieldId\r\n      );\r\n      asteriskDiv.id = fieldId + \"_asterisk\";\r\n    }\r\n    Utils.showAsteriskDiv(\r\n      _templateMod.ownerNode,\r\n      fieldId,\r\n      isShow,\r\n      fieldX,\r\n      fieldY,\r\n      fieldHeight\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @function showFieldAttribute\r\n   * @name module:Template/TemplateMod.TemplateMod#showFieldAttribute\r\n   * @description  해당 필드 ID의 속성창을 보여준다.\r\n   *\r\n   * @param {String} fieldId  Field id\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  showFieldAttribute(fieldId) {\r\n    const field = _templateMod.fieldDictionary[fieldId];\r\n    let attrNode = Utils.createAttrbutePopup(\r\n      _templateMod.ownerNode,\r\n      field.getBBox()\r\n    );\r\n    var mainGroup = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME\r\n    );\r\n    var fieldAncestors = Utils.fieldAncestors(field);\r\n    fieldAncestors[0].constructor.showFieldsAttribute(\r\n      _templateMod.ownerNode,\r\n      [field],\r\n      attrNode,\r\n      mainGroup,\r\n      Utils.getUserInfoOptsList(),\r\n      Utils.getDVFieldOptsList(),\r\n      _templateMod.changeFieldValueEvent,\r\n      Utils.getSignTabShowOpt(),\r\n    );\r\n\r\n    let deleteBtnNode = Utils.createFieldDeleteBtn(\r\n      _templateMod.ownerNode,\r\n      _templateMod.fieldDeleteBtnClicked\r\n    );\r\n    deleteBtnNode.style.left = field.x + field.width + 10 + \"px\";\r\n    const fieldCenterY = field.y + field.height / 2 - 10;\r\n    deleteBtnNode.style.top = fieldCenterY + \"px\";\r\n    _templateMod.selectUserList(field.ownerId);\r\n  }\r\n\r\n  showCommonFieldListAttribute(\r\n    type,\r\n    ownerNode,\r\n    fieldList,\r\n    attrNode,\r\n    mainGroup,\r\n    userList,\r\n    dvOptionList,\r\n    changeEventFunc\r\n  ) {\r\n    switch (type) {\r\n      case \"TF\": {\r\n        return TextField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n      case \"LF\": {\r\n        return LabelField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n      case \"SF\": {\r\n        return SignField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc,\r\n          Utils.getSignTabShowOpt(),\r\n        );\r\n      }\r\n      case \"NF\": {\r\n        return NumberField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n      case \"DF\": {\r\n        return DateField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n      case \"IMGF\": {\r\n        return ImageField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n      case \"MLTF\": {\r\n        return MultiLineTextField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n      case \"CBF\": {\r\n        return CheckboxField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n      case \"RF\": {\r\n        return RadioField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n      case \"CMBF\": {\r\n        return ComboboxField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n      default: {\r\n        return BaseField.showFieldsAttribute(\r\n          ownerNode,\r\n          fieldList,\r\n          attrNode,\r\n          mainGroup,\r\n          userList,\r\n          dvOptionList,\r\n          changeEventFunc\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function showFieldListAttribute\r\n   * @name module:Template/TemplateMod.TemplateMod#showFieldListAttribute\r\n   * @description 해당 필드들의 속성창을 보여준다.\r\n   *\r\n   * @param {Array} fieldList  Field Object List\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  showFieldListAttribute(fieldList) {\r\n    var dragOverBox = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.DRAG_BOX_NAME\r\n    );\r\n    var dragOverBBox = dragOverBox.getBBox();\r\n    let attrNode = Utils.createAttrbutePopup(\r\n      _templateMod.ownerNode,\r\n      dragOverBBox\r\n    );\r\n    var mainGroup = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME\r\n    );\r\n    // console.log(Utils.findSameAncestor2(fieldList));\r\n    const commonFieldType = Utils.findSameAncestor2(fieldList);\r\n    _templateMod.showCommonFieldListAttribute(\r\n      commonFieldType,\r\n      _templateMod.ownerNode,\r\n      fieldList,\r\n      attrNode,\r\n      mainGroup,\r\n      Utils.getUserInfoOptsList(),\r\n      Utils.getDVFieldOptsList(),\r\n      _templateMod.changeFieldValueEvent\r\n    );\r\n\r\n    let deleteBtnNode = Utils.createFieldDeleteBtn(\r\n      _templateMod.ownerNode,\r\n      _templateMod.fieldDeleteBtnClicked\r\n    );\r\n    deleteBtnNode.style.left = dragOverBBox.x + dragOverBBox.width + 10 + \"px\";\r\n    deleteBtnNode.style.top = dragOverBBox.y + 10 + \"px\";\r\n  }\r\n\r\n  /**\r\n   * @function sortFieldsAlign\r\n   * @name module:Template/TemplateMod.TemplateMod#sortFieldsAlign\r\n   * @description 선택된 필드들의 위치를 정렬 시킨다..\r\n   *\r\n   * @param {String} type  정렬 이름. left, hCenter, right, top, vCenter, bottom, VRegularInterval, HRegularInterval\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  sortFieldsAlign(type) {\r\n    var tempGBox = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.DRAG_BOX_NAME\r\n    );\r\n    if (tempGBox === null) {\r\n      return;\r\n    }\r\n\r\n    var selectedItems = _templateMod.mainCanvas.selectAll(\r\n      \"#\" + CONSTANTS.DRAG_BOX_NAME + \" > g\"\r\n    );\r\n    switch (type) {\r\n      case \"left\": {\r\n        _templateMod.sortFieldsLeftAlign(selectedItems);\r\n        break;\r\n      }\r\n      case \"hCenter\": {\r\n        _templateMod.sortFieldsHCenterAlign(tempGBox, selectedItems);\r\n        break;\r\n      }\r\n      case \"right\": {\r\n        _templateMod.sortFieldsRightAlign(selectedItems);\r\n        break;\r\n      }\r\n      case \"top\": {\r\n        _templateMod.sortFieldsTopAlign(selectedItems);\r\n        break;\r\n      }\r\n      case \"vCenter\": {\r\n        _templateMod.sortFieldsVCenterAlign(tempGBox, selectedItems);\r\n        break;\r\n      }\r\n      case \"bottom\": {\r\n        _templateMod.sortFieldsBottomAlign(selectedItems);\r\n        break;\r\n      }\r\n      case \"VRegularInterval\": {\r\n        _templateMod.sortFieldsVRegularIntervalAlign(selectedItems);\r\n        break;\r\n      }\r\n      case \"HRegularInterval\": {\r\n        _templateMod.sortFieldsHRegularIntervalAlign(selectedItems);\r\n        break;\r\n      }\r\n    }\r\n    _templateMod.tmpGroupFtEvent(\"drag end\");\r\n    _templateMod.changeGroupBoxFreeTransform(tempGBox);\r\n  }\r\n\r\n  /**\r\n   * @function sortFieldsBottomAlign\r\n   * @name module:Template/TemplateMod.TemplateMod#sortFieldsBottomAlign\r\n   * @description 선택된 필드들을 가장 낮은 Y좌표로 정렬시킨다.\r\n   *\r\n   * @param {Array} selectedItems  Field List\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  sortFieldsBottomAlign(selectedItems) {\r\n    if (selectedItems.length < 2) {\r\n      return;\r\n    }\r\n    var minY = 0;\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      if (bbox.y2 > minY) {\r\n        minY = bbox.y2;\r\n      }\r\n    });\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      childRect.attr({ y: minY - bbox.height });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function sortFieldsHCenterAlign\r\n   * @name module:Template/TemplateMod.TemplateMod#sortFieldsHCenterAlign\r\n   * @description  선택된 필드들의 Y좌표 중앙으로 정렬시킨다.\r\n   *\r\n   * @param {Array} selectedItems  Field List\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  sortFieldsHCenterAlign(tempGBox, selectedItems) {\r\n    if (selectedItems.length < 2) {\r\n      return;\r\n    }\r\n    var groupBbox = tempGBox.getBBox();\r\n    var cx = groupBbox.cx;\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      childRect.attr({ x: cx - bbox.width / 2 });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function sortFieldsHRegularIntervalAlign\r\n   * @name module:Template/TemplateMod.TemplateMod#sortFieldsHRegularIntervalAlign\r\n   * @description  선택된 필드들을 가로 간격이 일정하게 정렬한다.\r\n   *\r\n   * @param {Array} selectedItems  Field List\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  sortFieldsHRegularIntervalAlign(selectedItems) {\r\n    if (selectedItems.length < 3) {\r\n      return;\r\n    }\r\n    var items = Array.from(selectedItems);\r\n    items = items.sort(function (a, b) {\r\n      var childRectA = a.select(\"rect\").getBBox();\r\n      var childRectB = b.select(\"rect\").getBBox();\r\n      return childRectA.x - childRectB.x;\r\n    });\r\n\r\n    var firstItem = items[0];\r\n    var lastItem = items[items.length - 1];\r\n    var firstItemBBox = firstItem.getBBox();\r\n    var lastItemBBox = lastItem.getBBox();\r\n    var totalInterval = Math.abs(lastItemBBox.x - firstItemBBox.x2);\r\n    for (var idx = 1; idx < items.length - 1; ++idx) {\r\n      var item = items[idx];\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      totalInterval = totalInterval - bbox.width;\r\n    }\r\n    var betweenItemCnt = items.length - 1;\r\n    var interval = totalInterval / betweenItemCnt;\r\n    var beforeX2 = firstItemBBox.x2;\r\n    for (var idx2 = 1; idx2 < items.length - 1; ++idx2) {\r\n      var item2 = items[idx2];\r\n      var childRect2 = item2.select(\"rect\");\r\n      childRect2.attr({ x: beforeX2 + interval });\r\n      var bbox2 = childRect2.getBBox();\r\n      beforeX2 = bbox2.x2;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function sortFieldsLeftAlign\r\n   * @name module:Template/TemplateMod.TemplateMod#sortFieldsLeftAlign\r\n   * @description 선택된 필드들을 가장 낮은 X좌표로 정렬시킨다.\r\n   *\r\n   * @param {Array} selectedItems Field List\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  sortFieldsLeftAlign(selectedItems) {\r\n    if (selectedItems.length < 2) {\r\n      return;\r\n    }\r\n    var minX = Number.MAX_VALUE;\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      if (bbox.x < minX) {\r\n        minX = bbox.x;\r\n      }\r\n    });\r\n\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      childRect.attr({ x: minX });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function sortFieldsRightAlign\r\n   * @name module:Template/TemplateMod.TemplateMod#sortFieldsRightAlign\r\n   * @description  선택된 필드들을 가장 큰 X좌표로 정렬시킨다.\r\n   *\r\n   * @param {Array} selectedItems  Field List\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  sortFieldsRightAlign(selectedItems) {\r\n    if (selectedItems.length < 2) {\r\n      return;\r\n    }\r\n    var minX = 0;\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      if (bbox.x2 > minX) {\r\n        minX = bbox.x2;\r\n      }\r\n    });\r\n\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      childRect.attr({ x: minX - bbox.width });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function sortFieldsTopAlign\r\n   * @name module:Template/TemplateMod.TemplateMod#sortFieldsTopAlign\r\n   * @description 선택된 필드들을 가장 높은 Y좌표로 정렬시킨다.\r\n   *\r\n   * @param {Array} selectedItems  Field List\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  sortFieldsTopAlign(selectedItems) {\r\n    if (selectedItems.length < 2) {\r\n      return;\r\n    }\r\n    var minY = Number.MAX_VALUE;\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      if (bbox.y < minY) {\r\n        minY = bbox.y;\r\n      }\r\n    });\r\n\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      childRect.attr({ y: minY });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function sortFieldsVCenterAlign\r\n   * @name module:Template/TemplateMod.TemplateMod#sortFieldsVCenterAlign\r\n   * @description 선택된 필드들을 Y좌표의 가운데로 정렬시킨다.\r\n   *\r\n   * @param {Array} selectedItems  Field List\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  sortFieldsVCenterAlign(tempGBox, selectedItems) {\r\n    if (selectedItems.length < 2) {\r\n      return;\r\n    }\r\n    var groupBbox = tempGBox.getBBox();\r\n    var cy = groupBbox.cy;\r\n    selectedItems.forEach((item) => {\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      childRect.attr({ y: cy - bbox.height / 2 });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function sortFieldsVRegularIntervalAlign\r\n   * @name module:Template/TemplateMod.TemplateMod#sortFieldsVRegularIntervalAlign\r\n   * @description 선택된 필드들을 세로간격이 일정하게 정렬시킨다.\r\n   *\r\n   * @param {Array} selectedItems Field List\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  sortFieldsVRegularIntervalAlign(selectedItems) {\r\n    if (selectedItems.length < 3) {\r\n      return;\r\n    }\r\n    var items = Array.from(selectedItems);\r\n    items = items.sort(function (a, b) {\r\n      var childRectA = a.select(\"rect\").getBBox();\r\n      var childRectB = b.select(\"rect\").getBBox();\r\n      return childRectA.y - childRectB.y;\r\n    });\r\n\r\n    var firstItem = items[0];\r\n    var lastItem = items[items.length - 1];\r\n    var firstItemBBox = firstItem.getBBox();\r\n    var lastItemBBox = lastItem.getBBox();\r\n    var totalInterval = Math.abs(lastItemBBox.y - firstItemBBox.y2);\r\n    for (var idx = 1; idx < items.length - 1; ++idx) {\r\n      var item = items[idx];\r\n      var childRect = item.select(\"rect\");\r\n      var bbox = childRect.getBBox();\r\n      totalInterval = totalInterval - bbox.height;\r\n    }\r\n    var betweenItemCnt = items.length - 1;\r\n    var interval = totalInterval / betweenItemCnt;\r\n    var beforeY2 = firstItemBBox.y2;\r\n    for (var idx2 = 1; idx2 < items.length - 1; ++idx2) {\r\n      var item2 = items[idx2];\r\n      var childRect2 = item2.select(\"rect\");\r\n      childRect2.attr({ y: beforeY2 + interval });\r\n      var bbox2 = childRect2.getBBox();\r\n      beforeY2 = bbox2.y2;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function templateInit\r\n   * @name module:Template/TemplateMod.TemplateMod#templateInit\r\n   * @description 초기화 설정한다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  templateInit() {\r\n    var layerDiv = document.createElement(\"div\");\r\n    layerDiv.id = CONSTANTS.TEMPLATE_LAYER_NAME;\r\n    layerDiv.style.position = \"absolute\";\r\n    layerDiv.style.top = \"0px\";\r\n    layerDiv.style.width = \"100%\";\r\n    layerDiv.style.zIndex = \"99\";\r\n    var pdfContainer = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER_CONTAINER\r\n    );\r\n    pdfContainer.appendChild(layerDiv);\r\n\r\n    _templateMod.mainCanvas = Snap(\"100%\", \"100%\");\r\n    let viewer = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER\r\n    );\r\n    viewer.appendChild(_templateMod.mainCanvas.node);\r\n    _templateMod.mainCanvas.attr({\r\n      style: \"position: absolute; top: 0; z-index: 99\",\r\n    });\r\n    let mainGroup = _templateMod.mainCanvas.group();\r\n    mainGroup.attr({ id: CONSTANTS.MAIN_GROUP_NAME });\r\n    _templateMod.mainCanvas.drag(\r\n      _templateMod.dragmoveFunc,\r\n      _templateMod.dragstartFunc,\r\n      _templateMod.dragendFunc\r\n    );\r\n    viewer.setAttribute(\"tabindex\", 0);\r\n    document.body.addEventListener(\"keyup\", _templateMod.keycheck, true);\r\n\r\n    let asteriskLayer = document.createElement(\"div\");\r\n    asteriskLayer.id = CONSTANTS.TEMPLATE_LAYER_ASTERISK_NAME;\r\n    asteriskLayer.style.position = \"absolute\";\r\n    asteriskLayer.style.top = \"0\";\r\n    asteriskLayer.style.zIndex = \"98\";\r\n    asteriskLayer.style.width = \"100%\";\r\n    viewer.appendChild(asteriskLayer);\r\n\r\n    _templateMod.buildFieldformerList();\r\n  }\r\n\r\n  /**\r\n   * @function templateMouseMoveEvent\r\n   * @name module:Template/TemplateMod.TemplateMod#templateMouseMoveEvent\r\n   * @description PDF위에 올라가는 Template 레이어에 필드를 움직일 때 발생하는 MOVE Event를 처리한다.\r\n   *\r\n   * @param {Object} event   event Object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  templateMouseMoveEvent(event) {\r\n    let templateRect = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_RECT_NAME\r\n    );\r\n    let target1 = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_NAME\r\n    );\r\n    let target2 = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_RECT_NAME\r\n    );\r\n\r\n    if (!(target1 === event.target || target2 === event.target)) {\r\n      return false;\r\n    }\r\n    let offsetX = event.offsetX;\r\n    let offsetY = event.offsetY;\r\n    if (\r\n      event.target === target2 &&\r\n      !Utils.isEmptyObject(_templateMod.templateRectMousePosition)\r\n    ) {\r\n      offsetX =\r\n        _templateMod.templateRectMousePosition.x +\r\n        (event.pageX - _templateMod.templateRectMousePosition.ox);\r\n      offsetY =\r\n        _templateMod.templateRectMousePosition.y +\r\n        (event.pageY - _templateMod.templateRectMousePosition.oy);\r\n    }\r\n    event.stopPropagation();\r\n    _templateMod.templateRectMousePosition = {\r\n      x: offsetX,\r\n      y: offsetY,\r\n      ox: event.pageX,\r\n      oy: event.pageY,\r\n    };\r\n\r\n    anime({\r\n      targets: templateRect,\r\n      translateX: offsetX,\r\n      translateY: offsetY,\r\n      direction: \"normal\",\r\n      loop: false,\r\n      delay: anime.stagger(300, { easing: \"easeOutElastic(1, .6)\" }),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function templateMouseUpEvent\r\n   * @name module:Template/TemplateMod.TemplateMod#templateMouseUpEvent\r\n   * @description PDF위에 올라가는 Template 레이어에 필드를 움직일 때 발생하는 mount up Event를 처리한다.\r\n   *\r\n   * @param {Object} event  event Object\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  templateMouseUpEvent(event) {\r\n    _templateMod.removeTemplateRect();\r\n    _templateMod.clearSelectedTool();\r\n\r\n    var mainGroup = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.MAIN_GROUP_NAME\r\n    );\r\n    var pageX = event.pageX;\r\n    var pageRect = _templateMod.getPageBoundingClientRect();\r\n    if (pageX < pageRect.x) {\r\n      pageX = pageRect.x;\r\n    } else if (pageX > pageRect.x + pageRect.width) {\r\n      pageX =\r\n        pageRect.x +\r\n        pageRect.width -\r\n        _templateMod.getCreateFieldDefaultWidth(\r\n          _templateMod.selectAddFieldType\r\n        );\r\n    }\r\n    var fieldGroup = _templateMod.createField(\r\n      _templateMod.selectAddFieldType,\r\n      pageX,\r\n      event.pageY\r\n    );\r\n    mainGroup.append(fieldGroup);\r\n  }\r\n\r\n  /**\r\n   * @function templateResize\r\n   * @name module:Template/TemplateMod.TemplateMod#templateResize\r\n   * @description template에서 사용되는 노드들의 사이즈를 재조정한다.\r\n   *\r\n   * @param {Object} event  event Object\r\n   * @param {Number} height   리사이즈된 높이.\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  templateResize(event, height) {\r\n    var templateLayer = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_NAME\r\n    );\r\n    templateLayer.style.height = height + \"px\";\r\n    _templateMod.mainCanvas.attr({ height: height });\r\n    _templateMod.pageBoundingBox.height = height;\r\n    _templateMod.fieldRepositioning(event, true);\r\n\r\n    let asteriskLayer = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_LAYER_ASTERISK_NAME\r\n    );\r\n    asteriskLayer.style.height = height + \"px\";\r\n\r\n    var tempGBox = _templateMod.mainCanvas.select(\r\n      \"#\" + CONSTANTS.DRAG_BOX_NAME\r\n    );\r\n    if (tempGBox === null) {\r\n      return;\r\n    }\r\n    var bbox = tempGBox.getBBox();\r\n    _templateMod.removeDragOverGroup();\r\n    _templateMod.createDragOverGroup(bbox);\r\n  }\r\n\r\n  /**\r\n   * @function tmpGroupFtEvent\r\n   * @name module:Template/TemplateMod.TemplateMod#tmpGroupFtEvent\r\n   * @description 드래그해서 선택된 필드 그룹 FreeTransform의 이벤트를 처리한다.\r\n   *\r\n   * @param {String} eventName  FreeTransform에서 발생하는 이벤트 이름.\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  tmpGroupFtEvent(eventName) {\r\n    if (eventName === \"drag start\" || eventName === \"apply\") {\r\n      //hide attr\r\n      if (_templateMod.isFieldDragStart === true) {\r\n        return;\r\n      }\r\n      _templateMod.isFieldDragStart = true;\r\n      _templateMod.hideFieldAttribute();\r\n\r\n      var groups = _templateMod.mainCanvas.selectAll(\r\n        \"#\" + CONSTANTS.DRAG_BOX_NAME + \" > g\"\r\n      );\r\n      var oldDataArr = [];\r\n      var newDataArr = [];\r\n      var tempGOld = _templateMod.mainCanvas.select(\r\n        \"#\" + CONSTANTS.DRAG_BOX_NAME\r\n      );\r\n      groups.forEach((element) => {\r\n        let childRect = element.select(\"rect\");\r\n        Utils.showAsteriskDiv(\r\n          _templateMod.ownerNode,\r\n          childRect.attr(\"id\"),\r\n          false\r\n        );\r\n      });\r\n    }\r\n    if (eventName === \"drag end\") {\r\n      _templateMod.isFieldDragStart = false;\r\n      var groups = _templateMod.mainCanvas.selectAll(\r\n        \"#\" + CONSTANTS.DRAG_BOX_NAME + \" > g\"\r\n      );\r\n      var oldDataArr = [];\r\n      var newDataArr = [];\r\n      var tempGOld = _templateMod.mainCanvas.select(\r\n        \"#\" + CONSTANTS.DRAG_BOX_NAME\r\n      );\r\n      var fieldList = [];\r\n      groups.forEach((element) => {\r\n        let childRect = element.select(\"rect\");\r\n        let fieldId = childRect.attr(\"id\");\r\n        var oldData = _templateMod.getFieldJsonData(fieldId);\r\n        oldDataArr.push(oldData);\r\n        const tempGMatrix = tempGOld.transform().globalMatrix;\r\n        _templateMod.changeFieldPosition(element, tempGMatrix, true);\r\n        var newData = _templateMod.getFieldJsonData(fieldId);\r\n        newDataArr.push(newData);\r\n        fieldList.push(_templateMod.fieldDictionary[fieldId]);\r\n      });\r\n      tempGOld.transform(Snap.matrix().toTransformString());\r\n      _templateMod.showFieldListAttribute(fieldList);\r\n      _templateMod.addUndoRedoAct(\r\n        CONSTANTS.GROUP_ATTR_CHANGE_ACTION,\r\n        oldDataArr,\r\n        newDataArr\r\n      );\r\n      _templateMod.changeGroupBoxFreeTransform(tempGOld);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function undoAction\r\n   * @name module:Template/TemplateMod.TemplateMod#undoAction\r\n   * @description  Undo를 처리한다.\r\n   *\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  undoAction() {\r\n    var idx = _templateMod.unredoActionIdx--;\r\n    if (idx < 0) {\r\n      _templateMod.unredoActionIdx = -1;\r\n      return;\r\n    }\r\n    _templateMod.removeDragOverGroup();\r\n    var data = _templateMod.unredoActionDict[idx];\r\n    switch (data.action) {\r\n      case CONSTANTS.CREATE_FIELD_ACTION: {\r\n        _templateMod.removeField(data.old);\r\n        _templateMod.hideFieldAttribute();\r\n        _templateMod.buildFieldformerList();\r\n        return;\r\n      }\r\n      case CONSTANTS.REMOVE_FIELD_ACTION:\r\n      case CONSTANTS.FIELD_ATTR_CHANGE_ACTION: {\r\n        _templateMod.replaceFieldStringData(data.old);\r\n        _templateMod.buildFieldformerList();\r\n        return;\r\n      }\r\n      case CONSTANTS.GROUP_REMOVE_ACTION:\r\n      case CONSTANTS.GROUP_ATTR_CHANGE_ACTION: {\r\n        data.old.forEach((oldData) => {\r\n          _templateMod.replaceFieldStringData(oldData);\r\n        });\r\n        _templateMod.buildFieldformerList();\r\n        return;\r\n      }\r\n      case CONSTANTS.GROUP_ATTR_OWNER_CHANGE_ACTION: {\r\n        data.old.forEach((oldData) => {\r\n          _templateMod.replaceFieldStringData(oldData);\r\n        });\r\n        _templateMod.buildFieldformerList();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function updateFieldPoint\r\n   * @name module:Template/TemplateMod.TemplateMod#updateFieldPoint\r\n   * @description  필드의 PDF좌표를 업데이트 한다.\r\n   *\r\n   * @param {Object} fieldGroup  SVG의 group 오브젝트\r\n   *\r\n   * @return {Boolean} 변경이 되지 않으면 false 변경이되면 true\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  updateFieldPoint(fieldGroup) {\r\n    let childRect = fieldGroup.select(\"rect\");\r\n    var field = _templateMod.fieldDictionary[childRect.attr(\"id\")];\r\n    let ost = _templateMod.computePageOffset(field.pageNo);\r\n    const viewer1 = _templateMod.ownerNode.querySelector(\r\n      \" #\" + CONSTANTS.TEMPLATE_PDF_VIEWER\r\n    );\r\n    const viewerBoundingRect = viewer1.getBoundingClientRect();\r\n    var diffMatrix = _templateMod.mainCanvas.transform().diffMatrix;\r\n    var childRectBBox = childRect.getBBox();\r\n    field.x = childRectBBox.x;\r\n    field.y = childRectBBox.y;\r\n    field.width = childRectBBox.width;\r\n    field.height = childRectBBox.height;\r\n    field.pageNo = _templateMod.getPdfPageFromSvgPos(field.x, field.y);\r\n\r\n    let pageBorderWidth = _templateMod.getPageBorderWidth(field.pageNo);\r\n\r\n    let x =\r\n      diffMatrix.x(childRectBBox.x, childRectBBox.y) +\r\n      viewerBoundingRect.left -\r\n      ost.left -\r\n      pageBorderWidth.left;\r\n    let y =\r\n      diffMatrix.y(childRectBBox.x, childRectBBox.y) +\r\n      viewerBoundingRect.top -\r\n      ost.top -\r\n      pageBorderWidth.top;\r\n    const viewport = _templateMod.pdfViewer._pages[field.pageNo - 1].viewport;\r\n    let pdfPoision = viewport.convertToPdfPoint(x, y);\r\n    let pdfPoision2 = viewport.convertToPdfPoint(\r\n      x + childRectBBox.width,\r\n      y + childRectBBox.height\r\n    );\r\n    let isShow = false;\r\n    if (field.required === \"true\") {\r\n      isShow = true;\r\n    }\r\n\r\n    Utils.showAsteriskDiv(\r\n      _templateMod.ownerNode,\r\n      childRect.attr(\"id\"),\r\n      isShow,\r\n      childRectBBox.x,\r\n      childRectBBox.y,\r\n      childRectBBox.height\r\n    );\r\n    let oldPdfX = Number(field.pdfX);\r\n    let oldPdfX2 = Number(field.pdfX2);\r\n    let oldPdfY = Number(field.pdfY);\r\n    let oldPdfY2 = Number(field.pdfY2);\r\n    if (\r\n      pdfPoision[0].toFixed(2) === oldPdfX.toFixed(2) &&\r\n      pdfPoision[1].toFixed(2) === oldPdfY.toFixed(2) &&\r\n      pdfPoision2[0].toFixed(2) === oldPdfX2.toFixed(2) &&\r\n      pdfPoision2[1].toFixed(2) === oldPdfY2.toFixed(2)\r\n    ) {\r\n      return false;\r\n    }\r\n    field.pdfX = pdfPoision[0];\r\n    field.pdfY = pdfPoision[1];\r\n    field.pdfX2 = pdfPoision2[0];\r\n    field.pdfY2 = pdfPoision2[1];\r\n\r\n    return true;\r\n  }\r\n\r\n  appendFontFamily(fontFamilyArr) {\r\n    Utils.appendFontFamily(fontFamilyArr);\r\n  }\r\n\r\n  appendSignTabShowOpt(signTabShowDefOptVal) {\r\n    if (signTabShowDefOptVal) {\r\n      if (typeof signTabShowDefOptVal.useDrawSign !== \"undefined\") {\r\n        _templateMod.useDrawSign = signTabShowDefOptVal.useDrawSign;\r\n      }\r\n      if (typeof signTabShowDefOptVal.useImageSign !== \"undefined\") {\r\n        _templateMod.useImageSign = signTabShowDefOptVal.useImageSign;\r\n      }\r\n      if (typeof signTabShowDefOptVal.useRegSign !== \"undefined\") {\r\n        _templateMod.useRegSign = signTabShowDefOptVal.useRegSign;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @module Template/TemplateMain\r\n */\r\n\r\nconsole.log('Template VERSION:', VERSION);\r\n\r\nimport {CONSTANTS} from '../Constants';\r\nimport { PDFCursorTools } from './../pdf.cursor.tool';\r\nimport {TemplateMod} from './templatemod';\r\nimport {Utils} from './../utils/utils.js';\r\n\r\n\r\nvar pdfCursorTools, pdfViewer, templatemod, __templateOwnerNode;\r\n\r\nconst USE_ONLY_CSS_ZOOM = false;\r\nconst TEXT_LAYER_MODE = 0; // DISABLE\r\nconst MAX_IMAGE_SIZE = 1024 * 1024;\r\nconst DEFAULT_SCALE_DELTA = 1.0;\r\n\r\n/**\r\n * @description PDF문서를 로드하고 초기 셋팅을 한다.\r\n * \r\n * @param {Element} ownerNode  해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n * @param {String} pdfFileUrl   PDF FILE URL\r\n * @param {Array}  userList  서명자 정보 리스트\r\n * @param {Array} dvOptionList  기본값 정보 리스트\r\n * @param {Object} importData  기존 Template에서 저장한 Json Object\r\n * @param {Array} langs  사용할 다국어 리스트 기본값으로 [\"ko\", \"en\"]가 들어있다.\r\n * @Date : 2021. 5. 31\r\n * @Method Name : initDocument\r\n */\r\nexport function initDocument(ownerNode, pdfFileUrl, userList, dvOptionList, signTabShowDefOptVal, importData, langs = [\"ko\", \"en\"]) {\r\n    __templateOwnerNode = ownerNode;\r\n    \r\n    Utils.translator.fetch(langs).then(() => {\r\n        // -> Translations are ready...\r\n        Utils.changeLocale(langs[0]);\r\n    });\r\n\r\n    let pdfContainer = __templateOwnerNode.querySelector(' #' + CONSTANTS.TEMPLATE_PDF_VIEWER_CONTAINER);\r\n    let eventBus = new pdfjsViewer.EventBus();\r\n    pdfCursorTools = new PDFCursorTools({\r\n        container: pdfContainer,\r\n        eventBus: eventBus,\r\n        cursorToolOnLoad: 0\r\n    });\r\n\r\n    pdfViewer = new pdfjsViewer.PDFViewer({\r\n        container: pdfContainer,\r\n        eventBus: eventBus,\r\n        useOnlyCssZoom: USE_ONLY_CSS_ZOOM,\r\n        textLayerMode: TEXT_LAYER_MODE,\r\n    });\r\n\r\n    templatemod = new TemplateMod(pdfViewer, ownerNode);\r\n    templatemod.appendSignTabShowOpt(signTabShowDefOptVal);\r\n    templatemod.buildSignTabShowOpt(signTabShowDefOptVal);\r\n    templatemod.buildFieldUserInfo(userList);\r\n    templatemod.buildDVOptsInfo(dvOptionList);\r\n     \r\n    eventBus.on(\"pagerendered\", function (evt) {\r\n        console.log(\"pageRendered: \");\r\n    });\r\n\r\n    eventBus.on(\"pagechanging\", function (evt) {\r\n        console.log(\"pagechanging\");\r\n    });\r\n\r\n    eventBus.on(\"scalechanging\", function (evt) {\r\n        console.log(\"scalechanging\");\r\n        changeLayerSize(evt);\r\n    });\r\n\r\n    eventBus.on(\"pagesinit\", function () {\r\n        console.log(\"pagesinit\");\r\n        pdfViewer.currentScale = DEFAULT_SCALE_DELTA;\r\n        // We can use pdfViewer now, e.g. let's change default scale.\r\n    });\r\n\r\n    let loadingTask = pdfjsLib.getDocument({\r\n        url: pdfFileUrl,\r\n        cMapUrl: '/js/pdf_form/pdfjs/cmaps/',\r\n        cMapPacked: true,\r\n    })\r\n    loadingTask.promise.then(function (pdfDocument) {\r\n        pdfDocument.getData().then((data) => {\r\n        })\r\n        pdfViewer.currentScale = DEFAULT_SCALE_DELTA;\r\n        pdfViewer.setDocument(pdfDocument)\r\n        //pdfCursorTools.switchTool(1);\r\n        templatemod.templateInit();\r\n\r\n        if (importData === null || importData === undefined) {\r\n            return;\r\n        }\r\n        checkPageViewsReady(pdfViewer.pageViewsReady, importData);\r\n    })\r\n\r\n    __templateOwnerNode.querySelector(\"#\" + \"Zoom-Out-Button\").addEventListener(\"click\", documentZoomOut);\r\n    __templateOwnerNode.querySelector(\"#\" + \"Zoom-In-Button\").addEventListener(\"click\", documentZoomIn);\r\n    __templateOwnerNode.querySelector(\" .Button-Icon-Component\").addEventListener(\"click\", hideShowSidePanel);\r\n\r\n    __templateOwnerNode.querySelectorAll(\" .Editor-Component_Box > div > ul > li\").forEach((el) => {\r\n        if (!Utils.isEmptyObject(el.onclick)) {\r\n            return;\r\n        }\r\n        el.addEventListener(\"click\", fieldSelectTool, true);\r\n    });\r\n\r\n    __templateOwnerNode.querySelector(\" .Editor-Toolbar-Group.Left > button.Undo-Button\").addEventListener(\"click\", undoAction);\r\n    \r\n    __templateOwnerNode.querySelector(\" .Editor-Toolbar-Group.Left > button.Redo-Button\").addEventListener(\"click\", redoAction);\r\n\r\n    __templateOwnerNode.querySelector(\" .Editor-Toolbar-Group.Right  button.Align-Left-Button\").addEventListener(\"click\", sortFieldAligLeft);\r\n    __templateOwnerNode.querySelector(\" .Editor-Toolbar-Group.Right  button.Align-Center-Button\").addEventListener(\"click\", sortFieldAligHCenter);\r\n    __templateOwnerNode.querySelector(\" .Editor-Toolbar-Group.Right  button.Align-Right-Button\").addEventListener(\"click\", sortFieldAligRight);\r\n    __templateOwnerNode.querySelector(\" .Editor-Toolbar-Group.Right  button.Align-Top-Button\").addEventListener(\"click\", sortFieldAligTop);\r\n    __templateOwnerNode.querySelector(\" .Editor-Toolbar-Group.Right  button.Align-Middle-Button\").addEventListener(\"click\", sortFieldAligVCenter);\r\n    __templateOwnerNode.querySelector(\" .Editor-Toolbar-Group.Right  button.Align-Bottom-Button\").addEventListener(\"click\", sortFieldAligBottom);\r\n\r\n    __templateOwnerNode.querySelector(\"#scaleSelectContainer\").addEventListener(\"click\", showScaleSelector);\r\n    window.addEventListener('resize', function(event) {\r\n        changeLayerSize(event);\r\n    }, true);\r\n}\r\n\r\n\r\n/**\r\n * @description Template Field정보를 반환한다.\r\n *\r\n * @return {Object} Template Field 정보\r\n * @Date : 2021. 5. 31\r\n * @Method Name : getJsonData\r\n */\r\nexport function getJsonData() {\r\n    return templatemod.exportFieldData();\r\n}\r\n\r\n/**\r\n * @description Template에서 사용했던 데이터들을 초기화한다.\r\n *\r\n * @Date : 2021. 5. 31\r\n * @Method Name : releaseTemplate\r\n */\r\nexport function releaseTemplate() {\r\n\r\n    let targetElBtn = __templateOwnerNode.querySelector(\"#Editor-Component-Active-Button\");\r\n    let targetElPanel = __templateOwnerNode.querySelector(\"#Editor-Component\");\r\n    if (targetElBtn.classList.contains(\"Left-Panel-Btn-Hide-Animation\")) {\r\n        targetElBtn.classList.toggle(\"Left-Panel-Btn-Hide-Animation\");\r\n    }\r\n    if (targetElPanel.classList.contains(\"Left-Panel-Hide-Animation\")) {\r\n        targetElPanel.classList.toggle(\"Left-Panel-Hide-Animation\");\r\n    }\r\n    if (targetElBtn.classList.contains(\"Left-Panel-Btn-Show-Animation\")) {\r\n        targetElBtn.classList.toggle(\"Left-Panel-Btn-Show-Animation\");\r\n    }\r\n    if (targetElPanel.classList.contains(\"Left-Panel-Show-Animation\")) {\r\n        targetElPanel.classList.toggle(\"Left-Panel-Show-Animation\");\r\n    }\r\n\r\n    let templateLayer = __templateOwnerNode.querySelector(\"#\" + CONSTANTS.TEMPLATE_LAYER_NAME);\r\n    if (templateLayer !== null) {\r\n        Utils.removeAllChildNode(templateLayer);\r\n    }\r\n    let asteriskLayer = __templateOwnerNode.querySelector(\"#\" + CONSTANTS.TEMPLATE_LAYER_ASTERISK_NAME);\r\n    if (asteriskLayer !== null) {\r\n        Utils.removeAllChildNode(asteriskLayer);\r\n    }\r\n}\r\n\r\n/**\r\n * @description Field중에 반드시 설정해야될 속성이 설정 되어있는지 체크한다.\r\n * @Date : 2021. 5. 31\r\n * @Method Name : checkTemplateFieldData\r\n */\r\nexport function checkTemplateFieldData() {\r\n    return templatemod.checkTemplateFieldData();\r\n}\r\n\r\n/**\r\n * @description 현재 언어를 파라미터에 맞게 변환한다.\r\n *\r\n * @param {String} locale 바꿀 언어\r\n * @Date : 2021. 5. 31\r\n * @Method Name : changeTemplateLocale\r\n */\r\nexport function changeTemplateLocale(locale) {\r\n    Utils.changeLocale(locale);\r\n    templatemod.buildFieldformerList();\r\n}\r\n\r\n\r\n/**\r\n * @description  다국어 언어 파일의 위치를 지정한다.\r\n * @example\r\n * localhost:5500/js/pdf_form/i18n의 경우  \"/js/pdf_form/i18n\"\r\n * initDocument 이전에 호출이 되어야한다.\r\n * @param {String} filesLocation 언어파일의 위치(절대 경로)\r\n * @Date : 2021. 5. 31\r\n * @Method Name : changeTranslatorFileLocation\r\n */\r\nexport function changeTranslatorFileLocation(lcation) {\r\n    Utils.translatorFileLocation(lcation);\r\n}\r\n\r\n/**\r\n * @description  다국어 언어를 추가한다.\r\n * @param {String} locale 언어 이름\r\n * @param {Object} langData i18n/ko.json과 같은 양식으로 된 JSON을 파싱한 데이터\r\n * @Date : 2021. 5. 31\r\n * @Method Name : addTranslator\r\n */\r\nexport function addTranslator(locale, langData) {\r\n    Utils.addTranslator(locale, langData);\r\n}\r\n\r\nexport function copyField() {\r\n    templatemod.copyObject();\r\n}\r\n\r\nexport function pasteField() {\r\n    templatemod.pasteObject();\r\n}\r\n\r\n/**\r\n * @description Page의 높이를 계산한다.\r\n *\r\n * @param {Element} PDF.js에서 만든 Page Element : 계산할 Page Element\r\n * @return {Number} Page Height\r\n * @Date : 2021. 5. 31\r\n * @Method Name : calcPageHeight\r\n */\r\n function calcPageHeight(pageElement) {\r\n    var style = pageElement.div.currentStyle || window.getComputedStyle(pageElement.div);\r\n    const marginHeight = parseFloat(style.marginTop) + parseFloat(style.marginBottom);\r\n    const paddingHeight = parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\r\n    const borderHeight = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\r\n    return pageElement.height + marginHeight + paddingHeight + borderHeight;\r\n}\r\n\r\n/**\r\n * @description Pdf.js에서 pageViewsReady가 true될때 까지 체크해서 Template Field Data 추가한다.\r\n *\r\n * @param {Boolean} oldvalue pageViewsReady의 현재 데이터값\r\n * @param {Object} importData  추가할 Template Field Data\r\n * @Date : 2021. 5. 31\r\n * @Method Name : checkPageViewsReady\r\n */\r\nfunction checkPageViewsReady(oldvalue, importData) {\r\n    undefined === oldvalue && (oldvalue = pdfViewer.pageViewsReady);\r\n    var clearcheck = setInterval(repeatcheck, 100);\r\n    function repeatcheck() {\r\n        return new Promise(function (resolve, reject) {\r\n                if (pdfViewer.pageViewsReady) {\r\n                    resolve(\"pageViewsReady\");\r\n                    clearInterval(clearcheck);\r\n                }\r\n            }).then(function (text) {\r\n                console.log(text);\r\n                templatemod.importFieldData(importData);\r\n            });\r\n    }\r\n}\r\n\r\n/**\r\n * @description PDF 페이지의 Layer사이즈가 변할 때의 처리를한다.\r\n *\r\n * @param {Event} evt event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : changeLayerSize\r\n */\r\n function changeLayerSize(evt) {\r\n    let height = 0;\r\n    pdfViewer._pages.forEach(function (element) {\r\n        height += calcPageHeight(element);\r\n    });\r\n    templatemod.templateResize(evt, height);\r\n}\r\n\r\n/**\r\n * @description  문서의 배율을 축소한다.\r\n *\r\n * @Date : 2021. 5. 31\r\n * @Method Name : documentZoomOut\r\n */\r\nfunction  documentZoomOut() {\r\n    const currentValue = parseFloat(pdfViewer.currentScale);\r\n    pdfViewer.currentScale = currentValue - 0.1;\r\n    setScaleValueText(pdfViewer.currentScale);\r\n}\r\n\r\n/**\r\n * @description  문서의 배율을 확대한다.\r\n *\r\n * @Date : 2021. 5. 31\r\n * @Method Name : documentZoomIn\r\n */\r\nfunction  documentZoomIn() {\r\n    const currentValue = parseFloat(pdfViewer.currentScale);\r\n    pdfViewer.currentScale = currentValue + 0.1;\r\n    setScaleValueText(pdfViewer.currentScale);\r\n}\r\n\r\n/**\r\n * @description  문서의 배율을 설정한다.\r\n *\r\n * @param {String}  value문서의 배율\r\n * @Date : 2021. 5. 31\r\n * @Method Name : setScaleValueText\r\n */\r\n function setScaleValueText(value) {\r\n    const currentValue = Math.floor(parseFloat(value) * 100);\r\n     var element = __templateOwnerNode.querySelector(\" #scaleSelectContainer > a\");\r\n    element.textContent = currentValue + \"%\";\r\n}\r\n\r\n/**\r\n * @description  사이드 패널이 보이고 있으면 숨기고 숨겨있으면 보이게한다.\r\n *\r\n * @param {Event} event event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : hideShowSidePanel\r\n */\r\nfunction hideShowSidePanel(event) {\r\n    let targetElBtn = __templateOwnerNode.querySelector(\"#Editor-Component-Active-Button\");\r\n    let targetElPanel = __templateOwnerNode.querySelector(\"#Editor-Component\");\r\n    let arrowBtn = __templateOwnerNode.querySelector(\"#Editor-Component-Active-Button > .Button-Icon-Component .Arrow-Btn \");\r\n    arrowBtn.classList.toggle(\"Reverse-Btn\");\r\n    if (!targetElBtn.classList.contains(\"Left-Panel-Btn-Hide-Animation\")) {\r\n        targetElBtn.classList.toggle(\"Left-Panel-Btn-Hide-Animation\");\r\n        targetElPanel.classList.toggle(\"Left-Panel-Hide-Animation\");\r\n\r\n    } else {\r\n        targetElBtn.classList.toggle(\"Left-Panel-Btn-Show-Animation\");\r\n        targetElPanel.classList.toggle(\"Left-Panel-Show-Animation\");\r\n    }\r\n}\r\n\r\n/**\r\n * @description  사이드 패널이 보이고 있으면 숨기고 숨겨있으면 보이게한다.\r\n *\r\n * @param {Event} evt event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : hideShowSidePanel\r\n */\r\nfunction fieldSelectTool(evt) {\r\n    evt.stopPropagation();\r\n    const element = evt.target.closest(\"li\");\r\n    const selectValue = element.getAttribute(\"data-index\");\r\n    templatemod.clearSelectedTool();\r\n    if (!element.classList.contains(\"selected\")) {\r\n        element.classList.add(\"selected\");\r\n    }\r\n    templatemod.selectTool(parseInt(selectValue));\r\n}\r\n\r\n/**\r\n * @description  undo button handler\r\n *\r\n * @param {Event} evt  event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : undoAction\r\n */\r\nfunction undoAction(evt) {\r\n    templatemod.undoAction();\r\n}\r\n\r\n/**\r\n * @description  redo button handler\r\n *\r\n * @param {Event} evt event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : redoAction\r\n */\r\nfunction redoAction(evt) {\r\n    templatemod.redoAction();\r\n}\r\n\r\n/**\r\n * @description  Field들을 왼쪽라인에 맞춰서 정렬\r\n *\r\n * @param {Event} evt event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : sortFieldAligLeft\r\n */\r\nfunction sortFieldAligLeft(evt) {\r\n    templatemod.sortFieldsAlign(\"left\");\r\n}\r\n\r\n/**\r\n * @description  Field들을 오른쪽라인에 맞춰서 정렬\r\n *\r\n * @param {Event} evt event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : sortFieldsAlign\r\n */\r\nfunction sortFieldAligRight(evt) {\r\n    templatemod.sortFieldsAlign(\"right\");\r\n}\r\n\r\n/**\r\n * @description  Field들을 x좌표 기준의 센터라인에 맞춰서 정렬\r\n *\r\n * @param {Event} evt event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : sortFieldAligHCenter\r\n */\r\nfunction sortFieldAligHCenter(evt) {\r\n    templatemod.sortFieldsAlign(\"hCenter\");\r\n}\r\n\r\n/**\r\n * @description  Field들을 Top라인에 맞춰서 정렬\r\n *\r\n * @param {Event} evt event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : sortFieldAligTop\r\n */\r\nfunction sortFieldAligTop(evt) {\r\n    templatemod.sortFieldsAlign(\"top\");\r\n}\r\n\r\n/**\r\n * @description  Field들을 y좌표 기준의 센터라인에 맞춰서 정렬\r\n *\r\n * @param {Event} evt  event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : sortFieldAligVCenter\r\n */\r\nfunction sortFieldAligVCenter(evt) {\r\n    templatemod.sortFieldsAlign(\"vCenter\");\r\n}\r\n\r\n/**\r\n * @description  Field들을 Bottom라인에 맞춰서 정렬\r\n *\r\n * @param {Event} evt event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : sortFieldAligBottom\r\n */\r\nfunction sortFieldAligBottom(evt) {\r\n    templatemod.sortFieldsAlign(\"bottom\");\r\n}\r\n\r\n/**\r\n * @description  PDF문서의 배율 Select를 보여준다.\r\n *\r\n * @param {Event} evt event\r\n * @Date : 2021. 5. 31\r\n * @Method Name : showScaleSelector\r\n */\r\nfunction showScaleSelector(evt) {\r\n\r\n    const targetBbox = evt.target.getBoundingClientRect();\r\n    let scaleContainer = __templateOwnerNode.querySelector(\".Scale-Seletor-Container\");\r\n    console.log(targetBbox);\r\n    scaleContainer.style.left = targetBbox.left + \"px\";\r\n    scaleContainer.style.top = targetBbox.top + \"px\";\r\n    scaleContainer.style.zIndex = \"-1\";\r\n    \r\n    if (scaleContainer.classList.contains(\"Template-Hide\")) {\r\n        scaleContainer.classList.toggle(\"Template-Hide\");\r\n    }\r\n    let scaleSelect = scaleContainer.querySelector(\"select\");\r\n    if (!$(scaleSelect).hasClass(\"select2-hidden-accessible\")) {\r\n        // Select2 has been initialized\r\n        $(scaleSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"80px\"\r\n        });\r\n    }\r\n    $(scaleSelect).val(pdfViewer.currentScale).trigger(\"change\");\r\n    $(scaleSelect).select2('open');\r\n    $(scaleSelect).on('select2:select', function (e) {\r\n        // Do something\r\n        var data = e.params.data;\r\n        pdfViewer.currentScale = data.id;\r\n        setScaleValueText(data.id);\r\n    });\r\n}\r\n\r\nexport function appendFontFamily(fontFamilyArr) {\r\n    templatemod.appendFontFamily(fontFamilyArr);\r\n}\r\n\r\nexport function appendSignTabShowOpt(signTabShowDefOptVal) {\r\n  templatemod.appendSignTabShowOpt(signTabShowDefOptVal);\r\n}","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\nimport { BaseField } from './BaseField';\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\nimport CP from './../utils/color-picker';\r\n\r\n/**\r\n * @텍스트 필드의 기본이 되는 Class\r\n *\r\n * @property {Function} fieldName {@link module:Template/Field.TextBaseField#fieldName}\r\n * @property {Function} widthValue {@link module:Template/Field.TextBaseField#widthValue}\r\n * @property {Function} heightValue {@link module:Template/Field.TextBaseField#heightValue}\r\n * @property {Function} needTextSvgRefresh {@link module:Template/Field.TextBaseField#needTextSvgRefresh}\r\n * @property {Function} makeSVGText {@link module:Template/Field.TextBaseField#makeSVGText}\r\n * @property {Function} getSVGFieldObject {@link module:Template/Field.TextBaseField#getSVGFieldObject}\r\n * @property {Function} changeTextElement {@link module:Template/Field.TextBaseField#changeTextElement}\r\n * @property {Function} showFieldAttribute {@link module:Template/Field.TextBaseField#showFieldAttribute}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.TextBaseField#showFieldsAttribute}\r\n *\r\n * @augments BaseField {@link module:Template/Field.BaseField#BaseField}\r\n * @FileName TextBaseField.js\r\n * @since 2021.05.31\r\n */\r\nexport class TextBaseField extends BaseField {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     * @param width 필드의 가로길이\r\n     * @param height 필드의 세로길이\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y, width, height) {\r\n        super(id, pageNo, x, y, width, height);\r\n        this.m_type = TextBaseField.fieldName();\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.TextBaseField#m_placeHolder\r\n         * @description placeHolder\r\n         * @example\r\n         * // getter placeHolder()\r\n         * // setter placeHolder(val)\r\n         */\r\n        this.m_placeHolder = '';\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.TextBaseField#m_defaultValue\r\n         * @description 텍스트 기본값  ID\r\n         * @example\r\n         * // getter defaultValue()\r\n         * // setter defaultValue(val)\r\n         */\r\n        this.m_defaultValue = \"\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.TextBaseField#m_defaultValueText\r\n         * @description  텍스트 기본값을 표현하는 텍스트\r\n         * @example\r\n         * // getter defaultValueText()\r\n         * // setter defaultValueText(val)\r\n         */\r\n        this.m_defaultValueText = \"\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.TextBaseField#m_textAlign\r\n         * @description 텍스트의 가로 정렬값\r\n         * @example\r\n         * // getter textAlign()\r\n         * // setter textAlign(val)\r\n         */\r\n        this.m_textAlign = \"left\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.TextBaseField#m_textVeticalAlign\r\n         * @description 텍스트의 세로 정렬값\r\n         * @example\r\n         * // getter textVeticalAlign()\r\n         * // setter textVeticalAlign(val)\r\n         */\r\n        this.m_textVeticalAlign = \"middle\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.TextBaseField#m_bold\r\n         * @description 텍스트의 볼드 여부\r\n         * @example\r\n         * // getter bold()\r\n         * // setter bold(val)\r\n         */\r\n        this.m_bold = \"false\";\r\n        this.m_kind = \"\";\r\n    }\r\n\r\n    /**\r\n     * @function widthValue\r\n     * @name module:Template/Field.TextBaseField#widthValue\r\n     * @description (Static) 필드의 초기 가로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static widthValue() {\r\n        return 150;\r\n    }\r\n\r\n    /**\r\n     * @function heightValue\r\n     * @name module:Template/Field.TextBaseField#heightValue\r\n     * @description (Static) 필드의 초기 세로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static heightValue() {\r\n        return 40;\r\n    }\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.TextBaseField#fieldName\r\n     * @return {String}\r\n     * @description (Static)  필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"TextBaseField\";\r\n    }\r\n\r\n    ancestors() {\r\n        return [ \"TBF\", \"BF\"];\r\n    }\r\n\r\n    get placeHolder() {\r\n        return this.m_placeHolder;\r\n    }\r\n\r\n    set placeHolder(__placeHolder) {\r\n        this.m_placeHolder = __placeHolder;\r\n    }\r\n\r\n    get defaultValue() {\r\n        return this.m_defaultValue;\r\n    }\r\n    set defaultValue(__defaultValue) {\r\n        this.m_defaultValue = __defaultValue;\r\n    }\r\n\r\n    get defaultValueText() {\r\n        return this.m_defaultValueText;\r\n    }\r\n    set defaultValueText(__defaultValueText) {\r\n        this.m_defaultValueText = __defaultValueText;\r\n    }\r\n\r\n    get textAlign() {\r\n        return this.m_textAlign;\r\n    }\r\n    set textAlign(__textAlign) {\r\n        this.m_textAlign = __textAlign;\r\n    }\r\n\r\n    get textVeticalAlign() {\r\n        return this.m_textVeticalAlign;\r\n    }\r\n    set textVeticalAlign(__textVeticalAlign) {\r\n        this.m_textVeticalAlign = __textVeticalAlign;\r\n    }\r\n\r\n    get isBold() {\r\n        return this.m_bold;\r\n    }\r\n    set isBold(__bold) {\r\n        this.m_bold = __bold;\r\n    }\r\n\r\n    /**\r\n     * @function needTextSvgRefresh\r\n     * @static\r\n     * @name module:Template/Field.TextBaseField#needTextSvgRefresh\r\n     * @description  (Static) 해당하는 필드의 속성이 SVG의 텍스트 Node를 변경해야되는지 체크한다.\r\n     *\r\n     * @param { String} fieldPropetyName 필드의 속성값\r\n     * @return {Boolean} 텍스트를 새로 그려야되는 필드의 경우 TRUE를 리턴한다.\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static needTextSvgRefresh(fieldPropetyName) {\r\n        if (fieldPropetyName === \"defaultValue\" ||\r\n            fieldPropetyName === \"value\" ||\r\n            fieldPropetyName === \"fieldId\" ||\r\n            fieldPropetyName === \"placeHolder\" ||\r\n            fieldPropetyName === \"textAlign\" ||\r\n            fieldPropetyName === \"bold\" ||\r\n            fieldPropetyName === \"fontSize\" ||\r\n            fieldPropetyName === \"fontName\" ||\r\n            fieldPropetyName === \"radioType\" ||\r\n            fieldPropetyName === \"fontColor\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @function makeSVGText\r\n     * @name module:Template/Field.TextBaseField#makeSVGText\r\n     * @memberOf module:Template/Field.TextBaseField\r\n     * @description 필드의 종류를 표현하는 SVG Text element\r\n     *\r\n     * @param {Number} scale 현재 PDF의 Scale\r\n     * @return {Object} SVG Node Element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    makeSVGText(scale) {\r\n        let value = this.defaultValueText;\r\n        if (value === '') {\r\n            value = this.m_fieldId;\r\n        }\r\n        var textFontColor = \"fill='\" + this.fontColor + \"' \";\r\n \r\n        let textPos = ' x=\"50%\"  dy=\"0.35em\" text-anchor=\"middle\" '\r\n        if (this.textAlign === \"left\") {\r\n            textPos = ' x=\"3%\"  dy=\"0.35em\" text-anchor=\"start\" ';\r\n        } else if (this.textAlign === \"right\") {\r\n            textPos = ' x=\"97%\" dy=\"0.35em\" text-anchor=\"end\" ';\r\n        }\r\n\r\n        let textVerticalPos = 'y=\"50%\"';\r\n        if (this.textVeticalAlign === \"top\") {\r\n            textVerticalPos = 'y=\"25%\"';\r\n        } else if (this.textVeticalAlign === \"bottom\") {\r\n            textVerticalPos = 'y=\"70%\"';\r\n        }\r\n\r\n        let fontWeigth = \"\";\r\n        if (this.isBold === \"true\") {\r\n            fontWeigth = \" font-weight='bold' \";\r\n        }\r\n\r\n        let fontFmaily = \" font-family='\" + this.fontName + \"' \";\r\n        \r\n        let fontInfo = ' font-size=\"' + this.fontSize  * scale + 'px\" ';\r\n        let textObj = '<text' + textPos + textVerticalPos + fontFmaily + fontInfo + textFontColor + fontWeigth +  '>' + value + '</text>';\r\n        const fobjectSVG = '<svg x=\"' + this.x + 'px\" y=\"' + this.y + 'px\" width=\"' + this.width * scale +\r\n            'px\" height=\"' + this.height * scale + 'px\"><g  >' + textObj + '</g></svg>';\r\n\r\n        return fobjectSVG;\r\n    }\r\n\r\n    /**\r\n     * @function getSVGFieldObject\r\n     * @name module:Template/Field.TextBaseField#getSVGFieldObject\r\n     * @memberOf module:Template/Field.TextBaseField\r\n     * @description  필드의 정보를 가지고 SVG Element를 생성한다.\r\n     *\r\n     * @param {Object} canvas Snap SVG의 Canvas Object\r\n     * @param {Object} mainGroup   SVG의 메인 Node\r\n     * @param {Number} scale  현재 PDF의 Scale\r\n     * @param {ELEMENT} ownerNode    해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {Callback} removeDragOverGroupFunc    드래그 되어 선택되어진 Field Group을 제거하는 callback function\r\n     * @param {Callback} changeValueEventFunc     속성값이 변할때 호출되는 callback function\r\n     * @param {Callback} changeFreeTransformFunc     FreeTransform을 다시 생성하기 위한 callback function\r\n     * @return SVG Node Element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    getSVGFieldObject(canvas, mainGroup, scale, ownerNode, removeDragOverGroupFunc, changeValueEventFunc, changeFreeTransformFunc) {\r\n        let group = mainGroup.group();\r\n        group.attr({\r\n            id: this.id + \"Group\",\r\n            cursor: \"move\"\r\n        });\r\n\r\n        let rect = canvas.rect(this.x, this.y, this.width * scale, this.height * scale);\r\n        rect.attr({\r\n            id: this.id,\r\n            \"fill-opacity\": \"0.5\",\r\n            \"fill\": \"#ffac7f\"\r\n        });\r\n        group.append(rect);\r\n        const p = Snap.parse(this.makeSVGText(scale));\r\n        group.append(p);\r\n\r\n        group.hover(\r\n            function () { // f_in\r\n            },\r\n            function () { // f_out\r\n            }\r\n        );\r\n    \r\n        let _textBaseField = this;\r\n        let mousePos = { x: 0, y: 0 };\r\n        group.mousedown(function (evt) {\r\n            mousePos.x = evt.pageX;\r\n            mousePos.y = evt.pageY;\r\n            const items = mainGroup.selectAll('g');\r\n            items.forEach(function (element) {\r\n                if (element !== group) {\r\n                    if (!Utils.isEmptyObject(element.freeTransform)) {\r\n                        element.freeTransform.hideResizeHandler();\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (!Utils.isEmptyObject(group.freeTransform)) {\r\n                group.freeTransform.showResizeHandler();\r\n            } else {\r\n                changeFreeTransformFunc(group, rect.attr(\"width\"), rect.attr(\"height\"));\r\n            }\r\n        });\r\n        \r\n        group.mouseup(function (evt) {\r\n            if (group.parent().attr(\"id\") === CONSTANTS.DRAG_BOX_NAME) {\r\n                if (Math.abs(mousePos.x - evt.pageX) > CONSTANTS.MINIMUM_DRAG_SIZE\r\n                    || Math.abs(mousePos.y - evt.pageY) > CONSTANTS.MINIMUM_DRAG_SIZE) {\r\n                    return;\r\n                }\r\n                removeDragOverGroupFunc.call();\r\n                const items = mainGroup.selectAll('g');\r\n                items.forEach(function (element) {\r\n                    if (element !== group) {\r\n                        if (!Utils.isEmptyObject(element.freeTransform)) {\r\n                            element.freeTransform.hideResizeHandler();\r\n                        }\r\n                    }\r\n                });\r\n                if (!Utils.isEmptyObject(group.freeTransform)) {\r\n                    group.freeTransform.showResizeHandler();\r\n                } else {\r\n                    changeFreeTransformFunc(group, rect.attr(\"width\"), rect.attr(\"height\"));\r\n                }\r\n                _textBaseField.constructor.showFieldsAttribute(ownerNode, [_textBaseField], undefined, mainGroup, Utils.getUserInfoOptsList(), Utils.getDVFieldOptsList(), changeValueEventFunc);\r\n            } else {\r\n                _textBaseField.constructor.showFieldsAttribute(ownerNode, [_textBaseField], undefined, mainGroup, Utils.getUserInfoOptsList(), Utils.getDVFieldOptsList(), changeValueEventFunc);\r\n            }\r\n        });\r\n        return group;\r\n\r\n    }\r\n\r\n    /**\r\n     * @function changeTextElement\r\n     * @name module:Template/Field.TextBaseField#changeTextElement\r\n     * @memberOf module:Template/Field.TextBaseField\r\n     * @description   필드를 표현하는 Text Node의 Text를 변경한다.\r\n     *\r\n     * @param {Object} fieldGroup Field의 SVG 노드\r\n     * @param {Number} scale 현재 PDF의 Scale\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    changeTextElement(fieldGroup, scale) {\r\n        fieldGroup.select(\"svg\").remove();\r\n        var newText = this.makeSVGText(scale);\r\n        const p = Snap.parse(newText);\r\n        fieldGroup.append(p);\r\n    }\r\n\r\n    /**\r\n     * @function showFieldAttribute\r\n     * @static\r\n     * @name module:Template/Field.TextBaseField#showFieldAttribute\r\n     * @description  (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {ELEMENT} node  속성 팝업 Node\r\n     * @param {String} idValue     필드의 id값\r\n     * @param {String} requiredValue     필수여부 값\r\n     * @param {String} ownerIdValue     서명자 아이디\r\n     * @param {String} dvValue     기본값\r\n     * @param {String} fontFamilyNameValue     폰트 이름\r\n     * @param {String} fontSizeValue     폰트 크기 값\r\n     * @param {String} textAlignValue     텍스트 가로 정렬 값\r\n     * @param {String} boldValue     폰트 볼드 여부\r\n     * @param {String} fontColorValue     폰트 칼라\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldAttribute(node,\r\n        idValue, fieldIdValue, requiredValue, ownerIdValue, dvValue, fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue,\r\n        userList, dvOptionList,\r\n        changeEventFunc) {\r\n\r\n        var panel = Utils.createAttributePanelNode();\r\n\r\n        var requireRow = Utils.createAttributeToggleButtonNode(idValue, \"required\", \"Template.isRequired\", requiredValue, changeEventFunc);\r\n        panel.appendChild(requireRow);\r\n\r\n        let useDefaulOptionNode = Utils.getUserInfoOptsListCount() !== 1;\r\n        var ownerSelectRow = Utils.createAttributeSelectNode(idValue, \"ownerId\", userList, \"\", useDefaulOptionNode);\r\n        panel.appendChild(ownerSelectRow);\r\n\r\n        let ownerSelect = ownerSelectRow.querySelector(\"select\");\r\n        jQuery(ownerSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        jQuery(ownerSelect).val(ownerIdValue).trigger(\"change\");\r\n        jQuery(ownerSelect).on(\"change\", changeEventFunc);\r\n\r\n        //12-28\r\n        if (dvOptionList && Array.isArray(dvOptionList) && dvOptionList.length > 0) {\r\n            var defaultValueRow = Utils.createAttributeSelectNode(idValue, \"defaultValue\", dvOptionList, \"Template.defaultValueText\", true);\r\n            panel.appendChild(defaultValueRow);\r\n    \r\n            let defaultValueSelect = defaultValueRow.querySelector(\"select\");\r\n            $(defaultValueSelect).select2({\r\n                minimumResultsForSearch: Infinity,\r\n                width: \"100%\"\r\n            });\r\n            $(defaultValueSelect).val(dvValue).trigger(\"change\");\r\n            $(defaultValueSelect).on(\"change\", changeEventFunc);\r\n        }\r\n\r\n        var fieldIdValueRow = Utils.createAttributeInputNode(idValue, \"fieldId\", \"Template.fieldIdText\", fieldIdValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(fieldIdValueRow);\r\n\r\n        var fontAttrRow = Utils.createTextAttrbuteNode(idValue, fontColorValue, textAlignValue, boldValue, changeEventFunc);\r\n        panel.appendChild(fontAttrRow.row);\r\n\r\n        let fontFamilyComboSelect = fontAttrRow.fontFamilyCombo.querySelector(\"select\");\r\n        $(fontFamilyComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontFamilyComboSelect).val(fontFamilyNameValue).trigger(\"change\");\r\n        $(fontFamilyComboSelect).on(\"change\", changeEventFunc);\r\n        let fontSizeComboSelect = fontAttrRow.fontSizeCombo.querySelector(\"select\");\r\n        $(fontSizeComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontSizeComboSelect).val(fontSizeValue).trigger(\"change\");\r\n        $(fontSizeComboSelect).on(\"change\", changeEventFunc);\r\n\r\n        let colorInput = fontAttrRow.colorBtn.querySelector(\"button\");\r\n        colorInput.style.backgroundColor = fontColorValue;\r\n        let picker = new CP(colorInput, { color: fontColorValue });\r\n        colorInput.value = fontColorValue;\r\n        picker.on('change', function (r, g, b, a) {\r\n            if (!picker.visible) {\r\n                return;\r\n            }\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n            colorInput.value = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n        });\r\n        picker.on('exit', function (r, g, b, a) {\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n            colorTextInput.dispatchEvent(new Event(\"change\"));\r\n        });\r\n\r\n        panel.setAttribute(\"Field-id-list\", idValue);\r\n\r\n        node.className = \"Editor-Attribute\";\r\n        node.classList.add(\"Text-Field\");\r\n        node.appendChild(panel);\r\n    }\r\n\r\n\r\n    /**\r\n     * @function showFieldsAttribute\r\n     * @static\r\n     * @name module:Template/Field.TextBaseField#showFieldsAttribute\r\n     * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {ELEMENT} ownerNode  속성 팝업 Node\r\n     * @param {Array} fieldList     필드들의 리스트\r\n     * @param {ELEMENT} attrNode    속성 팝업의 Node\r\n     * @param {String} mainGroup    SVG의 메인 Element\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc) {\r\n        let node = attrNode;\r\n        if (attrNode === null || Utils.isEmptyObject(attrNode)) {\r\n            const bbox = Utils.mergeFieldsBBox(fieldList);\r\n            node = Utils.createAttrbutePopup(ownerNode, bbox);\r\n            Utils.repositionFieldDeleteBtn(ownerNode, bbox.x, bbox.y, bbox.width);\r\n        }\r\n        Utils.removeAllChildNode(node);\r\n\r\n        var idValueArr = [];\r\n        fieldList.forEach((field) => {\r\n            idValueArr.push(field.id);\r\n        });\r\n\r\n        var idValue = idValueArr.join();\r\n\r\n        var ownerIdValue = fieldList[0].ownerId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].ownerId !== ownerIdValue) {\r\n                ownerIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var requiredValue = fieldList[0].required;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].required !== requiredValue) {\r\n                requiredValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var dvValue = fieldList[0].defaultValue;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].defaultValue !== dvValue) {\r\n                dvValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fieldIdValue = fieldList[0].fieldId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fieldId !== fieldIdValue) {\r\n                fieldIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fontFamilyNameValue = fieldList[0].fontName;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontName !== fontFamilyNameValue) {\r\n                fontFamilyNameValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontSizeValue = fieldList[0].fontSize;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontSize !== fontSizeValue) {\r\n                fontSizeValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var textAlignValue = fieldList[0].textAlign;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].textAlign !== textAlignValue) {\r\n                textAlignValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var boldValue = fieldList[0].isBold;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].isBold !== boldValue) {\r\n                boldValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontColorValue = fieldList[0].fontColor;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontColor !== fontColorValue) {\r\n                fontColorValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        TextBaseField.showFieldAttribute(node,\r\n            idValue, fieldIdValue, requiredValue, ownerIdValue, dvValue, fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue,\r\n            userList, dvOptionList,\r\n            changeEventFunc);\r\n    }\r\n    \r\n    validateValue(propertyName, value) {\r\n        return true;\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\nimport {TextBaseField} from './TextBaseField';\r\nimport {Utils} from './../utils/utils.js';\r\n\r\n/**\r\n * 텍스트 필드 Class\r\n *\r\n * @property {Number} m_maxValueLength {@link module:Template/Field.TextField#m_maxValueLength}\r\n * \r\n * @property {Function} fieldName {@link module:Template/Field.TextField#fieldName}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.TextField#showFieldsAttribute}\r\n * \r\n * @augments TextBaseField {@link module:Template/Field.TextBaseField#TextBaseField}\r\n * @FileName TextField.js\r\n * @since 2021.05.31\r\n */\r\nexport class TextField extends TextBaseField {\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y) {\r\n        super(id, pageNo, x, y, TextField.widthValue(), TextField.heightValue());\r\n        this.m_type = TextField.fieldName();\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template.NumberField#m_maxValueLength\r\n         * @description 텍스트 필드 값의 최대길이\r\n         * @example\r\n         * // getter maxValueLength()\r\n         * // setter maxValueLength(val)\r\n         */\r\n        this.m_maxValueLength = 100;\r\n        \r\n        this.m_kind = Utils.translateForKey(\"Template.textFieldTool\");\r\n        if (Utils.isStringEmpty(id)) {\r\n            return;\r\n        }\r\n        this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n    }\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.TextField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"TextField\";\r\n    }\r\n\r\n    ancestors() {\r\n        return [\"TF\", \"TBF\", \"BF\"];\r\n    }\r\n\r\n    get maxValueLength() {\r\n        return this.m_maxValueLength;\r\n    }\r\n    set maxValueLength(__maxValueLength) {\r\n        this.m_maxValueLength = __maxValueLength;\r\n    }\r\n\r\n    /**\r\n     * @function showFieldsAttribute\r\n     * @static\r\n     * @name module:Template/Field.TextField#showFieldsAttribute\r\n     * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {ELEMENT} ownerNode  속성 팝업 Node\r\n     * @param {Array} fieldList     필드들의 리스트\r\n     * @param {ELEMENT} attrNode    속성 팝업의 Node\r\n     * @param {String} mainGroup    SVG의 메인 Element\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc) {\r\n        TextBaseField.showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc);\r\n    }\r\n    \r\n    validateValue(propertyName, value) {\r\n        return true;\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * @module Template/Field\r\n */\r\n\r\nimport {TextBaseField} from './TextBaseField';\r\nimport {Utils} from './../utils/utils.js';\r\nimport CP from './../utils/color-picker';\r\n\r\n/**\r\n * @description 숫자 필드 Class\r\n *\r\n * @property {Number} m_inputMax {@link module:Template/Field.NumberField#m_inputMax}\r\n * @property {Number} m_inputMin {@link module:Template/Field.NumberField#m_inputMin}\r\n * \r\n * @property {Function} fieldName {@link module:Template/Field.NumberField#fieldName}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.NumberField#showFieldsAttribute}\r\n * \r\n * @augments TextBaseField {@link module:Template/Field.TextBaseField#TextBaseField}\r\n * @FileName NumberField.js\r\n * @since 2021.05.31\r\n */\r\nexport class NumberField extends TextBaseField {\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y) {\r\n        super(id, pageNo, x, y, NumberField.widthValue(), NumberField.heightValue());\r\n        this.m_type = NumberField.fieldName();\r\n        \r\n        this.m_kind = Utils.translateForKey(\"Template.numberFieldTool\");\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.NumberField#m_inputMax\r\n         * @description 숫자 필드의 최대값\r\n         * @example\r\n         * // getter inputMax()\r\n         * // setter inputMax(val)\r\n         */\r\n        this.m_inputMax = null;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @name module:Template/Field.NumberField#m_inputMin\r\n         * @description 숫자 필드의 최소값\r\n         * @example\r\n         * // getter inputMin()\r\n         * // setter inputMin(val)\r\n         */\r\n        this.m_inputMin = null;\r\n\r\n        this.m_useCalc = 'false';\r\n\r\n        if (Utils.isStringEmpty(id)) {\r\n            return;\r\n        }\r\n        this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n        \r\n    }\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.NumberField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"NumberField\";\r\n    }\r\n    \r\n    ancestors() {\r\n        return [\"NF\", \"TBF\", \"BF\"];\r\n    }\r\n\r\n    get inputMax() {\r\n        return this.m_inputMax;\r\n    }\r\n\r\n    set inputMax(__inputMax) {\r\n        this.m_inputMax = __inputMax;\r\n    }\r\n\r\n    get inputMin() {\r\n        return this.m_inputMin;\r\n    }\r\n\r\n    set inputMin(__inputMin) {\r\n        this.m_inputMin = __inputMin;\r\n    }\r\n\r\n    /**\r\n     * @function showFieldAttribute\r\n     * @static\r\n     * @name module:Template/Field.TextBaseField#showFieldAttribute\r\n     * @description  (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {ELEMENT} node  속성 팝업 Node\r\n     * @param {String} idValue     필드의 id값\r\n     * @param {String} requiredValue     필수여부 값\r\n     * @param {String} ownerIdValue     서명자 아이디\r\n     * @param {String} dvValue     기본값\r\n     * @param {Number} minValue     최소값\r\n     * @param {Number} maxValue     최대값\r\n     * @param {String} fontFamilyNameValue     폰트 이름\r\n     * @param {String} fontSizeValue     폰트 크기 값\r\n     * @param {String} textAlignValue     텍스트 가로 정렬 값\r\n     * @param {String} boldValue     폰트 볼드 여부\r\n     * @param {String} fontColorValue     폰트 칼라\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldAttribute(node,\r\n        idValue, fieldIdValue, requiredValue, ownerIdValue, dvValue, minValue, maxValue, useCalcVal, fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue,\r\n        userList, dvOptionList,\r\n        changeEventFunc) {\r\n\r\n        var panel = Utils.createAttributePanelNode();\r\n\r\n        var requireRow = Utils.createAttributeToggleButtonNode(idValue, \"required\", \"Template.isRequired\", requiredValue, changeEventFunc);\r\n        panel.appendChild(requireRow);\r\n\r\n        let useDefaulOptionNode = Utils.getUserInfoOptsListCount() !== 1;\r\n        var ownerSelectRow = Utils.createAttributeSelectNode(idValue, \"ownerId\", userList, \"\", useDefaulOptionNode);\r\n        panel.appendChild(ownerSelectRow);\r\n\r\n        let ownerSelect = ownerSelectRow.querySelector(\"select\");\r\n        jQuery(ownerSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        jQuery(ownerSelect).val(ownerIdValue).trigger(\"change\");\r\n        jQuery(ownerSelect).on(\"change\", changeEventFunc);\r\n\r\n        //12-28\r\n        if (dvOptionList && Array.isArray(dvOptionList) && dvOptionList.length > 0) {\r\n            var defaultValueRow = Utils.createAttributeSelectNode(idValue, \"defaultValue\", dvOptionList, \"Template.defaultValueText\", true);\r\n            panel.appendChild(defaultValueRow);\r\n\r\n            let defaultValueSelect = defaultValueRow.querySelector(\"select\");\r\n            $(defaultValueSelect).select2({\r\n                minimumResultsForSearch: Infinity,\r\n                width: \"100%\"\r\n            });\r\n            $(defaultValueSelect).val(dvValue).trigger(\"change\");\r\n            $(defaultValueSelect).on(\"change\", changeEventFunc);\r\n        }\r\n\r\n        let minVal = Utils.isStringEmpty(minValue) ? '' : Number(minValue);\r\n        var minValueRow = Utils.createAttributeInputNode(idValue, \"fieldMinValue\", \"Template.fieldMinValue\", minVal, \"number\", \"\", changeEventFunc);\r\n        panel.appendChild(minValueRow);\r\n        let maxVal = Utils.isStringEmpty(maxValue) ? '' : Number(maxValue);\r\n        var maxValueRow = Utils.createAttributeInputNode(idValue, \"fieldMaxValue\", \"Template.fieldMaxValue\", maxVal, \"number\", \"\", changeEventFunc);\r\n        panel.appendChild(maxValueRow);\r\n\r\n        let calcRow = Utils.createAttributeToggleButtonNode(idValue, \"useCalc\", \"Template.useCalc\", useCalcVal, changeEventFunc);\r\n        panel.appendChild(calcRow);\r\n\r\n        var fieldIdValueRow = Utils.createAttributeInputNode(idValue, \"fieldId\", \"Template.fieldIdText\", fieldIdValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(fieldIdValueRow);\r\n\r\n        var fontAttrRow = Utils.createTextAttrbuteNode(idValue, fontColorValue, textAlignValue, boldValue, changeEventFunc);\r\n        panel.appendChild(fontAttrRow.row);\r\n\r\n        let fontFamilyComboSelect = fontAttrRow.fontFamilyCombo.querySelector(\"select\");\r\n        $(fontFamilyComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontFamilyComboSelect).val(fontFamilyNameValue).trigger(\"change\");\r\n        $(fontFamilyComboSelect).on(\"change\", changeEventFunc);\r\n        let fontSizeComboSelect = fontAttrRow.fontSizeCombo.querySelector(\"select\");\r\n        $(fontSizeComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontSizeComboSelect).val(fontSizeValue).trigger(\"change\");\r\n        $(fontSizeComboSelect).on(\"change\", changeEventFunc);\r\n\r\n        let colorInput = fontAttrRow.colorBtn.querySelector(\"button\");\r\n        colorInput.style.backgroundColor = fontColorValue;\r\n        let picker = new CP(colorInput, { color: fontColorValue });\r\n        colorInput.value = fontColorValue;\r\n        picker.on('change', function (r, g, b, a) {\r\n            if (!picker.visible) {\r\n                return;\r\n            }\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n            colorInput.value = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n        });\r\n        picker.on('exit', function (r, g, b, a) {\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n            colorTextInput.dispatchEvent(new Event(\"change\"));\r\n        });\r\n\r\n        panel.setAttribute(\"Field-id-list\", idValue);\r\n\r\n        node.className = \"Editor-Attribute\";\r\n        node.classList.add(\"Text-Field\");\r\n        node.appendChild(panel);\r\n    }\r\n\r\n\r\n     /**\r\n     * @function showFieldsAttribute\r\n     * @static\r\n     * @name module:Template/Field.NumberField#showFieldsAttribute\r\n     * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {HTML} ownerNode  속성 팝업 Node\r\n     * @param {Array} fieldList     필드들의 리스트\r\n     * @param {HTML} attrNode    속성 팝업의 Node\r\n     * @param {String} mainGroup    SVG의 메인 Element\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc) {\r\n        let node = attrNode;\r\n        if (attrNode === null || Utils.isEmptyObject(attrNode)) {\r\n            const bbox = Utils.mergeFieldsBBox(fieldList);\r\n            node = Utils.createAttrbutePopup(ownerNode, bbox);\r\n            Utils.repositionFieldDeleteBtn(ownerNode, bbox.x, bbox.y, bbox.width);\r\n        }\r\n        Utils.removeAllChildNode(node);\r\n\r\n        var idValueArr = [];\r\n        fieldList.forEach((field) => {\r\n            idValueArr.push(field.id);\r\n        });\r\n\r\n        var idValue = idValueArr.join();\r\n\r\n        var ownerIdValue = fieldList[0].ownerId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].ownerId !== ownerIdValue) {\r\n                ownerIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var requiredValue = fieldList[0].required;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].required !== requiredValue) {\r\n                requiredValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var dvValue = fieldList[0].defaultValue;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].defaultValue !== dvValue) {\r\n                dvValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fieldIdValue = fieldList[0].fieldId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fieldId !== fieldIdValue) {\r\n                fieldIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        let minValue = fieldList[0].m_inputMin;\r\n        for (let idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].m_inputMin !== minValue) {\r\n                minValue = '';\r\n                break;\r\n            }\r\n        }\r\n        let maxValue = fieldList[0].m_inputMax;\r\n        for (let idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].m_inputMax !== maxValue) {\r\n                maxValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        let useCalcValue = fieldList[0].m_useCalc;\r\n        for (let idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].m_useCalc !== useCalcValue) {\r\n                useCalcValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fontFamilyNameValue = fieldList[0].fontName;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontName !== fontFamilyNameValue) {\r\n                fontFamilyNameValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontSizeValue = fieldList[0].fontSize;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontSize !== fontSizeValue) {\r\n                fontSizeValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var textAlignValue = fieldList[0].textAlign;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].textAlign !== textAlignValue) {\r\n                textAlignValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var boldValue = fieldList[0].isBold;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].isBold !== boldValue) {\r\n                boldValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontColorValue = fieldList[0].fontColor;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontColor !== fontColorValue) {\r\n                fontColorValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        NumberField.showFieldAttribute(node,\r\n            idValue, fieldIdValue, requiredValue, ownerIdValue, dvValue, minValue, maxValue, useCalcValue, fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue,\r\n            userList, dvOptionList,\r\n            changeEventFunc);\r\n    }\r\n    /**\r\n     * @function validateValue\r\n     * @static\r\n     * @name module:Template/Field.NumberField#validateValue\r\n     * @description 해당 프로퍼티의 값이 유효한지 체크한다. .\r\n     *\r\n     * @param {String} fieldPropetyName 필드의 속성 이름\r\n     * @param {String} value   필드의 속성 값\r\n     * @return {Boolean}\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    validateValue(fieldPropetyName, value) {\r\n        if (fieldPropetyName === \"defaultValue\") {\r\n            let isnum = /^\\d+$/.test(value);\r\n            if (!isnum) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\nimport {TextBaseField} from './TextBaseField';\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\nimport CP from './../utils/color-picker';\r\n\r\n/**\r\n * @description 날짜 필드 Class\r\n *\r\n * @property {Function} fieldName {@link module:Template/Field.DateField#fieldName}\r\n * @property {Function} showFieldAttribute {@link module:Template/Field.DateField#showFieldAttribute}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.DateField#showFieldsAttribute}\r\n * \r\n * @augments TextBaseField {@link module:Template/Field.TextBaseField#TextBaseField}\r\n * @FileName DateField.js\r\n * @since 2021.05.31\r\n */\r\nexport class DateField extends TextBaseField {\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y) {\r\n        super(id, pageNo, x, y, DateField.widthValue(), DateField.heightValue());\r\n        this.m_type = DateField.fieldName();\r\n        \r\n        this.m_kind = Utils.translateForKey(\"Template.dateFieldTool\");\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.DateField#m_inputMax\r\n         * @description 날짜의 최대값\r\n         * @example\r\n         * // getter inputMax()\r\n         * // setter inputMax(val)\r\n         */\r\n        this.m_inputMax = \"\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.DateField#m_inputMin\r\n         * @description 날짜의 최소값\r\n         * @example\r\n         * // getter inputMin()\r\n         * // setter inputMin(val)\r\n         */\r\n        this.m_inputMin = \"\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.DateField#m_useCurrentDate\r\n         * @description  현재 날짜를 기본값으로 사용할 지 여부\r\n         * @example\r\n         * // getter useCurrentDate()\r\n         * // setter useCurrentDate(val)\r\n         */\r\n        this.m_useCurrentDate = \"true\";\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.DateField#m_inputFormat\r\n         * @description  날짜 포멧\r\n         * @example\r\n         * // getter inputFormat()\r\n         * // setter inputFormat(val)\r\n         */\r\n        this.m_inputFormat = \"Y-m-d\";\r\n        if (Utils.isStringEmpty(id)) {\r\n            return;\r\n        }\r\n        this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n    }\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.DateField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"DateField\";\r\n    }\r\n    \r\n    ancestors() {\r\n        return [\"DF\", \"TBF\", \"BF\"];\r\n    }\r\n\r\n    get inputFormat() {\r\n        return this.m_inputFormat;\r\n    }\r\n\r\n    set inputFormat(__inputFormat) {\r\n        this.m_inputFormat = __inputFormat;\r\n    }\r\n\r\n    get inputMax() {\r\n        return this.m_inputMax;\r\n    }\r\n\r\n    set inputMax(__inputMax) {\r\n        this.m_inputMax = __inputMax;\r\n    }\r\n\r\n    get inputMin() {\r\n        return this.m_inputMin;\r\n    }\r\n\r\n    set inputMin(__inputMin) {\r\n        this.m_inputMin = __inputMin;\r\n    }\r\n\r\n    get useCurrentDate() {\r\n        return this.m_useCurrentDate;\r\n    }\r\n\r\n    set useCurrentDate(__useCurrentDate) {\r\n        this.m_useCurrentDate = __useCurrentDate;\r\n    }\r\n\r\n    /**\r\n     * @function showFieldAttribute\r\n     * @static\r\n     * @name module:Template/Field.DateField#showFieldAttribute\r\n     * @description (Static)  필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {HTML} node  속성 팝업 Node\r\n     * @param {String} idValue     필드의 id값\r\n     * @param {String} requiredValue     필수여부 값\r\n     * @param {String} ownerIdValue     서명자 아이디\r\n     * @param {String} inputFormatValue     날짜 형식\r\n     * @param {String} useCurrentDateValue     현재 날짜를 쓰는지 여부\r\n     * @param {String} fontFamilyNameValue     폰트 이름\r\n     * @param {String} fontSizeValue     폰트 크기 값\r\n     * @param {String} textAlignValue     텍스트 가로 정렬 값\r\n     * @param {String} boldValue     폰트 볼드 여부\r\n     * @param {String} fontColorValue     폰트 칼라\r\n     * @param {String} comboboxListValue    콤보박스 리스트에 들어가는 리스트 값\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldAttribute(node,\r\n        idValue, fieldIdValue, requiredValue, ownerIdValue, inputFormatValue, useCurrentDateValue,\r\n        fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue,\r\n        userList,\r\n        changeEventFunc) {\r\n        var panel = Utils.createAttributePanelNode();\r\n\r\n        var requireRow = Utils.createAttributeToggleButtonNode(idValue, \"required\", \"Template.isRequired\", requiredValue, changeEventFunc);\r\n        panel.appendChild(requireRow);\r\n\r\n        let useDefaulOptionNode = Utils.getUserInfoOptsListCount() !== 1;\r\n        var ownerSelectRow = Utils.createAttributeSelectNode(idValue, \"ownerId\", userList, \"\", useDefaulOptionNode);\r\n        panel.appendChild(ownerSelectRow);\r\n\r\n        let ownerSelect = ownerSelectRow.querySelector(\"select\");\r\n        $(ownerSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(ownerSelect).val(ownerIdValue).trigger(\"change\");\r\n        $(ownerSelect).on(\"change\", changeEventFunc);\r\n\r\n        var fontAttrRow = Utils.createTextAttrbuteNode(idValue, fontColorValue, textAlignValue, boldValue, changeEventFunc);\r\n        panel.appendChild(fontAttrRow.row);\r\n\r\n        let fontFamilyComboSelect = fontAttrRow.fontFamilyCombo.querySelector(\"select\");\r\n        $(fontFamilyComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontFamilyComboSelect).val(fontFamilyNameValue).trigger(\"change\");\r\n        $(fontFamilyComboSelect).on(\"change\", changeEventFunc);\r\n        let fontSizeComboSelect = fontAttrRow.fontSizeCombo.querySelector(\"select\");\r\n        $(fontSizeComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontSizeComboSelect).val(fontSizeValue).trigger(\"change\");\r\n        $(fontSizeComboSelect).on(\"change\", changeEventFunc);\r\n\r\n        let colorInput = fontAttrRow.colorBtn.querySelector(\"button\");\r\n        colorInput.style.backgroundColor = fontColorValue;\r\n        let picker = new CP(colorInput, { color: fontColorValue });\r\n        colorInput.value = fontColorValue;\r\n        picker.on('change', function (r, g, b, a) {\r\n            if (!picker.visible) {\r\n                return;\r\n            }\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n            colorInput.value = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n        });\r\n        picker.on('exit', function (r, g, b, a) {\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n            colorTextInput.dispatchEvent(new Event(\"change\"));\r\n        });\r\n\r\n\r\n        var fieldIdValueRow = Utils.createAttributeInputNode(idValue, \"fieldId\", \"Template.fieldIdText\", fieldIdValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(fieldIdValueRow);\r\n\r\n        var inputFormatRow = Utils.createAttributeSelectNode(idValue, \"inputFormat\", Utils.dateFormatComboBox, \"Template.dateFormatText\", false);\r\n        panel.appendChild(inputFormatRow);\r\n\r\n        let inputFormatSelect = inputFormatRow.querySelector(\"select\");\r\n        $(inputFormatSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(inputFormatSelect).val(inputFormatValue).trigger(\"change\");\r\n        $(inputFormatSelect).on(\"change\", changeEventFunc);\r\n\r\n        var useCurrentRow = Utils.createAttributeCheckBoxNode(idValue, \"useCurrentDate\", \"Template.useCurrentDateText\", useCurrentDateValue, changeEventFunc);\r\n        panel.appendChild(useCurrentRow);\r\n\r\n        panel.setAttribute(\"Field-id-list\", idValue);\r\n        node.className = \"Editor-Attribute\";\r\n        node.classList.add(\"Text-Field\");\r\n        node.appendChild(panel);\r\n       \r\n    }\r\n\r\n    /**\r\n     * @function showFieldsAttribute\r\n     * @static\r\n     * @name module:Template/Field.DateField#showFieldsAttribute\r\n     * @description (Static)  필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {HTML} ownerNode  속성 팝업 Node\r\n     * @param {Array} fieldList     필드들의 리스트\r\n     * @param {HTML} attrNode    속성 팝업의 Node\r\n     * @param {String} mainGroup    SVG의 메인 Element\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc) {\r\n        let node = attrNode;\r\n        if (attrNode === null || Utils.isEmptyObject(attrNode)) {\r\n            const bbox = Utils.mergeFieldsBBox(fieldList);\r\n            node = Utils.createAttrbutePopup(ownerNode, bbox);\r\n            Utils.repositionFieldDeleteBtn(ownerNode, bbox.x, bbox.y, bbox.width);\r\n        }\r\n        Utils.removeAllChildNode(node);\r\n\r\n        var idValueArr = [];\r\n        fieldList.forEach((field) => {\r\n            idValueArr.push(field.id);\r\n        });\r\n\r\n        var idValue = idValueArr.join();\r\n\r\n        var ownerIdValue = fieldList[0].ownerId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].ownerId !== ownerIdValue) {\r\n                ownerIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var requiredValue = fieldList[0].required;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].required !== requiredValue) {\r\n                requiredValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var idValue = idValueArr.join();\r\n        var fieldIdValue = fieldList[0].fieldId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fieldId !== fieldIdValue) {\r\n                fieldIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fontFamilyNameValue = fieldList[0].fontName;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontName !== fontFamilyNameValue) {\r\n                fontFamilyNameValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontSizeValue = fieldList[0].fontSize;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontSize !== fontSizeValue) {\r\n                fontSizeValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var textAlignValue = fieldList[0].textAlign;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].textAlign !== textAlignValue) {\r\n                textAlignValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var boldValue = fieldList[0].isBold;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].isBold !== boldValue) {\r\n                boldValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontColorValue = fieldList[0].fontColor;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontColor !== fontColorValue) {\r\n                fontColorValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var inputFormatValue = fieldList[0].inputFormat;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].inputFormat !== inputFormatValue) {\r\n                inputFormatValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var useCurrentDateValue = fieldList[0].useCurrentDate;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].useCurrentDate !== useCurrentDateValue) {\r\n                useCurrentDateValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fieldIdValue = fieldList[0].fieldId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fieldId !== fieldIdValue) {\r\n                fieldIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        DateField.showFieldAttribute(node,\r\n            idValue, fieldIdValue, requiredValue, ownerIdValue, inputFormatValue, useCurrentDateValue,\r\n            fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue,\r\n            userList,\r\n            changeEventFunc);\r\n    }\r\n}\r\n","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\nimport { BaseField } from './BaseField';\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\n\r\n/**\r\n * @description 서명 필드 Class\r\n *\r\n * @property {Number} m_signPenThickness {@link module:Template/Field.SignField#m_signPenThickness}\r\n * @property {String} m_signPenColor {@link module:Template/Field.SignField#m_signPenColor}\r\n *\r\n * @property {Function} fieldName {@link module:Template/Field.SignField#fieldName}\r\n * @property {Function} widthValue {@link module:Template/Field.SignField#widthValue}\r\n * @property {Function} heightValue {@link module:Template/Field.SignField#heightValue}\r\n * @property {Function} getSVGFieldObject {@link module:Template/Field.SignField#getSVGFieldObject}\r\n * @property {Function} makeSVGText {@link module:Template/Field.SignField#makeSVGText}\r\n * @property {Function} showFieldAttribute {@link module:Template/Field.SignField#showFieldAttribute}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.SignField#showFieldsAttribute}\r\n *\r\n * @augments BaseField {@link module:Template.BaseField#BaseField}\r\n * @FileName SignField.js\r\n * @since 2021.05.31\r\n */\r\nexport class SignField extends BaseField {\r\n  /**\r\n   * @constructor\r\n   * @param id 필드의 ID\r\n   * @param pageNo 필드가 속한 페이지 번호\r\n   * @param x 필드의 svg상의 x좌표\r\n   * @param y 필드의 svg상의 y좌표\r\n   *\r\n   */\r\n  constructor(id, pageNo, x, y, useDrawSign, useImageSign, useRegSign) {\r\n    super(id, pageNo, x, y, SignField.widthValue(), SignField.heightValue());\r\n    this.m_type = SignField.fieldName();\r\n\r\n    this.m_kind = Utils.translateForKey(\"Template.signFieldTool\");\r\n\r\n    /**\r\n     * @type {Number}\r\n     * @name module:Template.RadioField#m_signPenThickness\r\n     * @description 서명펜의 두께\r\n     * @default 1.0\r\n     * @example\r\n     * // getter signPenThickness()\r\n     * // setter signPenThickness(val)\r\n     */\r\n    this.m_signPenThickness = 1;\r\n\r\n    /**\r\n     * @type {String}\r\n     * @name module:Template.RadioField#m_signPenColor\r\n     * @description 서명펜의 색상\r\n     * @default #000000\r\n     * @example\r\n     * // getter signPenColor()\r\n     * // setter signPenColor(val)\r\n     */\r\n    this.m_signPenColor = \"#000000\";\r\n    if (Utils.isStringEmpty(id)) {\r\n      return;\r\n    }\r\n    this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n\r\n    SignField.useDrawSignDef = useDrawSign;\r\n    SignField.useImageSignDef = useImageSign;\r\n    SignField.useRegSignDef = useRegSign;\r\n\r\n\r\n    this.m_useDrawSign = useDrawSign;\r\n    this.m_useImageSign = useImageSign;\r\n    this.m_useRegSign = useRegSign;\r\n    //regSignApi\r\n    this.m_regSignApiUrl = \"\";\r\n  }\r\n\r\n  /**\r\n   * @function fieldName\r\n   * @name module:Template/Field.SignField#fieldName\r\n   * @return {String}\r\n   * @description (Static) 필드 타입의 이름\r\n   * @static\r\n   *\r\n   */\r\n  static fieldName() {\r\n    return \"SignField\";\r\n  }\r\n\r\n  ancestors() {\r\n    return [\"SF\", \"BF\"];\r\n  }\r\n\r\n  /**\r\n   * @function widthValue\r\n   * @name module:Template/Field.SignField#widthValue\r\n   * @description (Static) 필드의 초기 가로 길이\r\n   * @return {Number}\r\n   * @static\r\n   *\r\n   */\r\n  static widthValue() {\r\n    return 150;\r\n  }\r\n\r\n  /**\r\n   * @function heightValue\r\n   * @name module:Template/Field.SignField#heightValue\r\n   * @description (Static) 필드의 초기 세로 길이\r\n   * @return {Number}\r\n   * @static\r\n   *\r\n   */\r\n  static heightValue() {\r\n    return 60;\r\n  }\r\n\r\n  get signPenThickness() {\r\n    return this.m_signPenThickness;\r\n  }\r\n  set signPenThickness(__signPenThickness) {\r\n    this.m_signPenThickness = __signPenThickness;\r\n  }\r\n\r\n  get signPenColor() {\r\n    return this.m_signPenColor;\r\n  }\r\n  set signPenColor(__signPenColor) {\r\n    this.m_signPenColor = __signPenColor;\r\n  }\r\n\r\n\r\n  /**\r\n   * @function showFieldAttribute\r\n   * @static\r\n   * @name module:Template/Field.SignField#showFieldAttribute\r\n   * @description (Static)  필드의 속성 팝업창을 설정한다.\r\n   *\r\n   * @param {ELEMENT} node  속성 팝업 Node\r\n   * @param {String} idValue     필드의 id값\r\n   * @param {String} requiredValue     필수여부 값\r\n   * @param {String} ownerIdValue     서명자 아이디\r\n   * @param {String} signPenThicknessValue     사인 팬 두깨\r\n   * @param {Array} userList   서명자 리스트\r\n   * @param {String} useDrawSign     필수여부 값\r\n   * @param {String} useImageSign     필수여부 값\r\n   * @param {String} useRegSign     필수여부 값\r\n   * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  static showFieldAttribute(\r\n    node,\r\n    idValue,\r\n    fieldIdValue,\r\n    requiredValue,\r\n    ownerIdValue,\r\n    signPenThicknessValue,\r\n    userList,\r\n    useDrawSignValue,\r\n    useImageSignValue,\r\n    useRegSignValue,\r\n    regSignApiUrlValue,\r\n    changeEventFunc,\r\n    signTabShowOpt\r\n  ) {\r\n    var panel = Utils.createAttributePanelNode();\r\n\r\n    var requireRow = Utils.createAttributeToggleButtonNode(\r\n      idValue,\r\n      \"required\",\r\n      \"Template.isRequired\",\r\n      requiredValue,\r\n      changeEventFunc\r\n    );\r\n    panel.appendChild(requireRow);\r\n\r\n    let useDefaulOptionNode = Utils.getUserInfoOptsListCount() !== 1;\r\n    var ownerSelectRow = Utils.createAttributeSelectNode(\r\n      idValue,\r\n      \"ownerId\",\r\n      userList,\r\n      \"\",\r\n      useDefaulOptionNode\r\n    );\r\n    panel.appendChild(ownerSelectRow);\r\n\r\n    let ownerSelect = ownerSelectRow.querySelector(\"select\");\r\n    $(ownerSelect).select2({\r\n      minimumResultsForSearch: Infinity,\r\n      width: \"100%\",\r\n    });\r\n    $(ownerSelect).val(ownerIdValue).trigger(\"change\");\r\n    $(ownerSelect).on(\"change\", changeEventFunc);\r\n\r\n    var penWidthSelectRow = Utils.createAttributeSelectNode(\r\n      idValue,\r\n      \"signPenThickness\",\r\n      Utils.getSignPenWidthComboBox(),\r\n      \"Template.signPenThicknessText\",\r\n      false\r\n    );\r\n    panel.appendChild(penWidthSelectRow);\r\n\r\n    let penWidthSelect = penWidthSelectRow.querySelector(\"select\");\r\n    $(penWidthSelect).select2({\r\n      minimumResultsForSearch: Infinity,\r\n      width: \"100%\",\r\n    });\r\n    $(penWidthSelect).val(signPenThicknessValue).trigger(\"change\");\r\n    $(penWidthSelect).on(\"change\", changeEventFunc);\r\n\r\n    var fieldIdValueRow = Utils.createAttributeInputNode(\r\n      idValue,\r\n      \"fieldId\",\r\n      \"Template.fieldIdText\",\r\n      fieldIdValue,\r\n      \"\",\r\n      \"\",\r\n      changeEventFunc\r\n    );\r\n    panel.appendChild(fieldIdValueRow);\r\n\r\n    /*\r\n        1214 lbw 시작\r\n        */\r\n\r\n    \r\n    this.useDrawSignDef = signTabShowOpt.useDrawSign;\r\n    this.useImageSignDef = signTabShowOpt.useImageSign;\r\n    this.useRegSignDef = signTabShowOpt.useRegSign;\r\n\r\n    if (this.useDrawSignDef == undefined){\r\n      this.useDrawSignDef = \"true\";\r\n    }\r\n    if (this.useImageSignDef == undefined) {\r\n      this.useImageSignDef = \"true\";\r\n    }\r\n    if (this.useRegSignDef == undefined) {\r\n      this.useRegSignDef = \"true\";\r\n    }\r\n    \r\n    \r\n    //1.펜\r\n    if (\"true\" == this.useDrawSignDef || useDrawSignValue == \"true\") {\r\n      var useDrawSignRow = Utils.createAttributeToggleButtonNode(\r\n        idValue,\r\n        \"useDrawSign\",\r\n        \"Template.drawSignText\",\r\n        useDrawSignValue,\r\n        changeEventFunc\r\n      );\r\n      panel.appendChild(useDrawSignRow);\r\n    }\r\n\r\n    //2. 이미지\r\n    if (\"true\" == this.useImageSignDef || useImageSignValue == \"true\") {\r\n      var useImageSignRow = Utils.createAttributeToggleButtonNode(\r\n        idValue,\r\n        \"useImageSign\",\r\n        \"Template.imageSignText\",\r\n        useImageSignValue,\r\n        changeEventFunc\r\n      );\r\n      panel.appendChild(useImageSignRow);\r\n    }\r\n\r\n    //3. 등록된 이미지\r\n    if (\"true\" == this.useRegSignDef || useRegSignValue == \"true\") {\r\n      var useRegSignRow = Utils.createAttributeToggleButtonNode(\r\n        idValue,\r\n        \"useRegSign\",\r\n        \"Template.regSignText\",\r\n        useRegSignValue,\r\n        changeEventFunc\r\n      );\r\n      panel.appendChild(useRegSignRow);\r\n    }\r\n    \r\n\r\n    /* 1215 제외\r\n    var regSignApiUrlRow = Utils.createAttributeInputNode(\r\n      idValue,\r\n      \"regSignApiUrl\",\r\n      \"Template.regSignApiUrlText\",\r\n      regSignApiUrlValue,\r\n      \"등록된 이미지 서명탭에 이미지를 불러올 수 있도록 서버의 API URL을 입력합니다.\",\r\n      \"\",\r\n      changeEventFunc\r\n    );\r\n    panel.appendChild(regSignApiUrlRow);\r\n    */\r\n    /*\r\n        1214 lbw 끝\r\n        */\r\n\r\n    panel.setAttribute(\"Field-id-list\", idValue);\r\n\r\n    node.className = \"Editor-Attribute\";\r\n    node.classList.add(\"Sign-Field\");\r\n    node.appendChild(panel);\r\n  }\r\n\r\n  /**\r\n   * @function showFieldsAttribute\r\n   * @static\r\n   * @name module:Template/Field.SignField#showFieldsAttribute\r\n   * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n   *\r\n   * @param {ELEMENT} ownerNode  속성 팝업 Node\r\n   * @param {Array} fieldList     필드들의 리스트\r\n   * @param {ELEMENT} attrNode    속성 팝업의 Node\r\n   * @param {String} mainGroup    SVG의 메인 Element\r\n   * @param {Array} userList   서명자 리스트\r\n   * @param {Array} dvOptionList   기본값 선택 리스트\r\n   * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  static showFieldsAttribute(\r\n    ownerNode,\r\n    fieldList,\r\n    attrNode,\r\n    mainGroup,\r\n    userList,\r\n    dvOptionList,\r\n    changeEventFunc,\r\n    signTabShowOpt\r\n  ) {\r\n    let node = attrNode;\r\n    if (attrNode === null || Utils.isEmptyObject(attrNode)) {\r\n      const bbox = Utils.mergeFieldsBBox(fieldList);\r\n      node = Utils.createAttrbutePopup(ownerNode, bbox);\r\n      Utils.repositionFieldDeleteBtn(ownerNode, bbox.x, bbox.y, bbox.width);\r\n    }\r\n    Utils.removeAllChildNode(node);\r\n\r\n    var idValueArr = [];\r\n    fieldList.forEach((field) => {\r\n      idValueArr.push(field.id);\r\n    });\r\n    var idValue = idValueArr.join();\r\n\r\n    var ownerIdValue = fieldList[0].ownerId;\r\n    for (var idx = 0; idx < fieldList.length; ++idx) {\r\n      if (fieldList[idx].ownerId !== ownerIdValue) {\r\n        ownerIdValue = \"\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    var fieldIdValue = fieldList[0].fieldId;\r\n    for (var idx = 0; idx < fieldList.length; ++idx) {\r\n      if (fieldList[idx].fieldId !== fieldIdValue) {\r\n        fieldIdValue = \"\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    var requiredValue = fieldList[0].required;\r\n    for (var idx = 0; idx < fieldList.length; ++idx) {\r\n      if (fieldList[idx].required !== requiredValue) {\r\n        requiredValue = \"\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    var signPenThicknessValue = fieldList[0].signPenThickness;\r\n    fieldList.forEach((field) => {\r\n      if (field.signPenThickness !== signPenThicknessValue) {\r\n        signPenThicknessValue = \"\";\r\n        return;\r\n      }\r\n    });\r\n\r\n    let useDrawSignValue = fieldList[0].m_useDrawSign;\r\n    for (let idx = 0; idx < fieldList.length; ++idx) {\r\n      if (fieldList[idx].m_useDrawSign !== useDrawSignValue) {\r\n        useDrawSignValue = \"\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    let useImageSignValue = fieldList[0].m_useImageSign;\r\n    for (let idx = 0; idx < fieldList.length; ++idx) {\r\n      if (fieldList[idx].m_useImageSign !== useImageSignValue) {\r\n        useImageSignValue = \"\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    let useRegSignValue = fieldList[0].m_useRegSign;\r\n    for (let idx = 0; idx < fieldList.length; ++idx) {\r\n      if (fieldList[idx].m_useRegSign !== useRegSignValue) {\r\n        useRegSignValue = \"\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    var regSignApiUrlValue = fieldList[0].m_regSignApiUrl;\r\n    for (var idx = 0; idx < fieldList.length; ++idx) {\r\n      if (fieldList[idx].m_regSignApiUrl !== regSignApiUrlValue) {\r\n        regSignApiUrlValue = \"\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    SignField.showFieldAttribute(\r\n      node,\r\n      idValue,\r\n      fieldIdValue,\r\n      requiredValue,\r\n      ownerIdValue,\r\n      signPenThicknessValue,\r\n      userList,\r\n      useDrawSignValue,\r\n      useImageSignValue,\r\n      useRegSignValue,\r\n      regSignApiUrlValue,\r\n      changeEventFunc,\r\n      signTabShowOpt\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @function getSVGFieldObject\r\n   * @name module:Template.ImageField#makeSVGText\r\n   * @memberOf module:Template.ImageField\r\n   * @description 필드의 종류를 표현하는 SVG Text element\r\n   *\r\n   * @param {Number} scale 현재 PDF의 Scale\r\n   * @return {Object} SVG Node Element\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  makeSVGText(scale) {\r\n    let value = this.m_fieldId;\r\n    var textFontColor = \"fill='\" + this.fontColor + \"' \";\r\n\r\n    let textPos = ' x=\"50%\"  dy=\"0.35em\" text-anchor=\"middle\" ';\r\n    if (this.textAlign === \"left\") {\r\n      textPos = ' x=\"3%\"  dy=\"0.35em\" text-anchor=\"start\" ';\r\n    } else if (this.textAlign === \"right\") {\r\n      textPos = ' x=\"97%\" dy=\"0.35em\" text-anchor=\"end\" ';\r\n    }\r\n\r\n    let textVerticalPos = 'y=\"50%\"';\r\n\r\n    let fontInfo = ' font-size=\"' + this.fontSize + 'px\" ';\r\n    let textObj =\r\n      \"<text\" +\r\n      textPos +\r\n      textVerticalPos +\r\n      fontInfo +\r\n      textFontColor +\r\n      \">\" +\r\n      value +\r\n      \"</text>\";\r\n    const fobjectSVG =\r\n      '<svg x=\"' +\r\n      this.x +\r\n      'px\" y=\"' +\r\n      this.y +\r\n      'px\" width=\"' +\r\n      this.width * scale +\r\n      'px\" height=\"' +\r\n      this.height * scale +\r\n      'px\"><g  >' +\r\n      textObj +\r\n      \"</g></svg>\";\r\n\r\n    return fobjectSVG;\r\n  }\r\n\r\n  /**\r\n   * @function getSVGFieldObject\r\n   * @name module:Template.RadioField#getSVGFieldObject\r\n   * @memberOf module:Template/Field.SignField\r\n   * @description  필드의 정보를 가지고 SVG Element를 생성한다.\r\n   *\r\n   * @param {Object} canvas Snap SVG의 Canvas Object\r\n   * @param {Object} mainGroup   SVG의 메인 Node\r\n   * @param {Number} scale  현재 PDF의 Scale\r\n   * @param {ELEMENT} ownerNode    해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n   * @param {Callback} removeDragOverGroupFunc     드래그 되어 선택되어진 Field Group을 제거하는 callback function\r\n   * @param {Callback} changeValueEventFunc     속성값이 변할때 호출되는 callback function\r\n   * @param {Callback} changeFreeTransformFunc    FreeTransform을 다시 생성하기 위한 callback function\r\n   * @return SVG Node Element\r\n   * @Date : 2021. 5. 31\r\n   */\r\n  getSVGFieldObject(\r\n    canvas,\r\n    mainGroup,\r\n    scale,\r\n    ownerNode,\r\n    removeDragOverGroupFunc,\r\n    changeValueEventFunc,\r\n    changeFreeTransformFunc\r\n  ) {\r\n    let group = mainGroup.group();\r\n    group.attr({\r\n      id: this.id + \"Group\",\r\n      cursor: \"move\",\r\n    });\r\n    let rect = canvas.rect(\r\n      this.x,\r\n      this.y,\r\n      this.width * scale,\r\n      this.height * scale\r\n    );\r\n    rect.attr({\r\n      id: this.id,\r\n      \"fill-opacity\": \"0.6\",\r\n      fill: \"#ffac7f\",\r\n    });\r\n    group.append(rect);\r\n    const p = Snap.parse(this.makeSVGText(scale));\r\n    group.append(p);\r\n\r\n    group.hover(\r\n      function () {\r\n        // f_in\r\n      },\r\n      function () {\r\n        // f_out\r\n      }\r\n    );\r\n\r\n    let _signField = this;\r\n    let mousePos = { x: 0, y: 0 };\r\n    group.mousedown(function (evt) {\r\n      mousePos.x = evt.pageX;\r\n      mousePos.y = evt.pageY;\r\n      const items = mainGroup.selectAll(\"g\");\r\n      items.forEach(function (element) {\r\n        if (element !== group) {\r\n          if (!Utils.isEmptyObject(element.freeTransform)) {\r\n            element.freeTransform.hideResizeHandler();\r\n          }\r\n        }\r\n      });\r\n      if (!Utils.isEmptyObject(group.freeTransform)) {\r\n        group.freeTransform.showResizeHandler();\r\n      } else {\r\n        changeFreeTransformFunc(group, rect.attr(\"width\"), rect.attr(\"height\"));\r\n      }\r\n    });\r\n\r\n    group.mouseup(function (evt) {\r\n      if (group.parent().attr(\"id\") === CONSTANTS.DRAG_BOX_NAME) {\r\n        if (\r\n          Math.abs(mousePos.x - evt.pageX) > CONSTANTS.MINIMUM_DRAG_SIZE ||\r\n          Math.abs(mousePos.y - evt.pageY) > CONSTANTS.MINIMUM_DRAG_SIZE\r\n        ) {\r\n          return;\r\n        }\r\n        removeDragOverGroupFunc.call();\r\n        const items = mainGroup.selectAll(\"g\");\r\n        items.forEach(function (element) {\r\n          if (element !== group) {\r\n            if (!Utils.isEmptyObject(element.freeTransform)) {\r\n              element.freeTransform.hideResizeHandler();\r\n            }\r\n          }\r\n        });\r\n        if (!Utils.isEmptyObject(group.freeTransform)) {\r\n          group.freeTransform.showResizeHandler();\r\n        } else {\r\n          changeFreeTransformFunc(\r\n            group,\r\n            rect.attr(\"width\"),\r\n            rect.attr(\"height\")\r\n          );\r\n        }\r\n        _signField.constructor.showFieldsAttribute(\r\n          ownerNode,\r\n          [_signField],\r\n          undefined,\r\n          mainGroup,\r\n          Utils.getUserInfoOptsList(),\r\n          Utils.getDVFieldOptsList(),\r\n          changeValueEventFunc,\r\n          Utils.getSignTabShowOpt(),\r\n        );\r\n      } else {\r\n        _signField.constructor.showFieldsAttribute(\r\n          ownerNode,\r\n          [_signField],\r\n          undefined,\r\n          mainGroup,\r\n          Utils.getUserInfoOptsList(),\r\n          Utils.getDVFieldOptsList(),\r\n          changeValueEventFunc,\r\n          Utils.getSignTabShowOpt(),\r\n        );\r\n      }\r\n    });\r\n    return group;\r\n  }\r\n}\r\n","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\nimport { BaseField } from './BaseField';\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\n\r\n/**\r\n * @description 이미지 필드 Class\r\n *\r\n *\r\n * @property {Function} fieldName {@link module:Template/Field.ImageField#fieldName}\r\n * @property {Function} widthValue {@link module:Template/Field.ImageField#widthValue}\r\n * @property {Function} heightValue {@link module:Template/Field.ImageField#heightValue}\r\n * @property {Function} makeSVGText {@link module:Template/Field.ImageField#makeSVGText}\r\n * @property {Function} getSVGFieldObject {@link module:Template/Field.ImageField#getSVGFieldObject}\r\n *\r\n * @augments BaseField {@link module:Template/Field.BaseField#BaseField}\r\n * @FileName ImageField.js\r\n * @since 2021.05.31\r\n */\r\nexport class ImageField extends BaseField {\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y) {\r\n        super(id, pageNo, x, y, ImageField.widthValue(), ImageField.heightValue());\r\n        this.m_type = ImageField.fieldName();\r\n\r\n        this.m_kind = Utils.translateForKey(\"Template.imageFieldTool\");\r\n\r\n        if (Utils.isStringEmpty(id)) {\r\n            return;\r\n        }\r\n        this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n    }\r\n\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.ImageField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"ImageField\";\r\n    }\r\n\r\n    \r\n    ancestors() {\r\n        return [\"IMGF\", \"BF\"];\r\n    }\r\n\r\n    /**\r\n     * @function widthValue\r\n     * @name module:Template/Field.ImageField#widthValue\r\n     * @description (Static) 필드의 초기 가로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static widthValue() {\r\n        return 150;\r\n    }\r\n    \r\n    /**\r\n     * @function heightValue\r\n     * @name module:Template/Field.ImageField#heightValue\r\n     * @description (Static)  필드의 초기 세로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static heightValue() {\r\n        return 60;\r\n    }\r\n\r\n    /**\r\n     * @function getSVGFieldObject\r\n     * @name module:Template/Field.ImageField#makeSVGText\r\n     * @memberOf module:Template/Field.ImageField\r\n     * @description 필드의 종류를 표현하는 SVG Text element\r\n     *\r\n     * @param {Number} scale 현재 PDF의 Scale\r\n     * @return SVG Node Element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    makeSVGText(scale) {\r\n        let value = this.m_fieldId;\r\n        var textFontColor = \"fill='\" + this.fontColor + \"' \";\r\n\r\n        let textPos = ' x=\"50%\"  dy=\"0.35em\" text-anchor=\"middle\" '\r\n        if (this.textAlign === \"left\") {\r\n            textPos = ' x=\"3%\"  dy=\"0.35em\" text-anchor=\"start\" ';\r\n        } else if (this.textAlign === \"right\") {\r\n            textPos = ' x=\"97%\" dy=\"0.35em\" text-anchor=\"end\" ';\r\n        }\r\n\r\n        let textVerticalPos = 'y=\"50%\"';\r\n\r\n        let fontInfo = ' font-size=\"' + this.fontSize + 'px\" ';\r\n        let textObj = '<text' + textPos + textVerticalPos + fontInfo + textFontColor + '>' + value + '</text>';\r\n        const fobjectSVG = '<svg x=\"' + this.x + 'px\" y=\"' + this.y + 'px\" width=\"' + this.width * scale +\r\n            'px\" height=\"' + this.height * scale + 'px\"><g  >' + textObj + '</g></svg>';\r\n\r\n        return fobjectSVG;\r\n    }\r\n\r\n    /**\r\n     * @function getSVGFieldObject\r\n     * @name module:Template/Field.ImageField#getSVGFieldObject\r\n     * @memberOf module:Template/Field.ImageField\r\n     * @description 필드의 정보를 가지고 SVG Element를 생성한다.\r\n     *\r\n     * @param {Object} canvas Snap SVG의 Canvas Object\r\n     * @param {Object} mainGroup   SVG의 메인 Node\r\n     * @param {Number} scale  현재 PDF의 Scale\r\n     * @param {HTML} ownerNode    해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {Callback} removeDragOverGroupFunc     드래그 되어 선택되어진 Field Group을 제거하는 callback function\r\n     * @param {Callback} changeValueEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @param {Callback} changeFreeTransformFunc     FreeTransform을 다시 생성하기 위한 callback function\r\n     * @return SVG Node Element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    getSVGFieldObject(canvas, mainGroup, scale, ownerNode, removeDragOverGroupFunc, changeValueEventFunc, changeFreeTransformFunc) {\r\n        let group = mainGroup.group();\r\n        group.attr({\r\n            id: this.id + \"Group\",\r\n            cursor: \"move\"\r\n        });\r\n        let rect = canvas.rect(this.x, this.y, this.width * scale, this.height * scale);\r\n        rect.attr({\r\n            id: this.id,\r\n            \"fill-opacity\": \"0.6\",\r\n            \"fill\": \"#ffac7f\"\r\n        });\r\n        group.append(rect);\r\n        const p = Snap.parse(this.makeSVGText(scale));\r\n        group.append(p);\r\n\r\n        group.hover(\r\n            function () { // f_in\r\n            },\r\n            function () { // f_out\r\n            }\r\n        );\r\n\r\n        let _imgField = this;\r\n        let mousePos = { x: 0, y: 0 };\r\n        group.mousedown(function (evt) {\r\n            mousePos.x = evt.pageX;\r\n            mousePos.y = evt.pageY;\r\n            const items = mainGroup.selectAll('g');\r\n            items.forEach(function (element) {\r\n                if (element !== group) {\r\n                    if (!Utils.isEmptyObject(element.freeTransform)) {\r\n                        element.freeTransform.hideResizeHandler();\r\n                    }\r\n                }\r\n            });\r\n            if (!Utils.isEmptyObject(group.freeTransform)) {\r\n                group.freeTransform.showResizeHandler();\r\n            } else {\r\n                changeFreeTransformFunc(group, rect.attr(\"width\"), rect.attr(\"height\"));\r\n            }\r\n        });\r\n\r\n        group.mouseup(function (evt) {\r\n            if (group.parent().attr(\"id\") === CONSTANTS.DRAG_BOX_NAME) {\r\n                if (Math.abs(mousePos.x - evt.pageX) > CONSTANTS.MINIMUM_DRAG_SIZE\r\n                    || Math.abs(mousePos.y - evt.pageY) > CONSTANTS.MINIMUM_DRAG_SIZE) {\r\n                    return;\r\n                }\r\n                removeDragOverGroupFunc.call();\r\n                const items = mainGroup.selectAll('g');\r\n                items.forEach(function (element) {\r\n                    if (element !== group) {\r\n                        if (!Utils.isEmptyObject(element.freeTransform)) {\r\n                            element.freeTransform.hideResizeHandler();\r\n                        }\r\n                    }\r\n                });\r\n                if (!Utils.isEmptyObject(group.freeTransform)) {\r\n                    group.freeTransform.showResizeHandler();\r\n                } else {\r\n                    changeFreeTransformFunc(group, rect.attr(\"width\"), rect.attr(\"height\"));\r\n                }\r\n                _imgField.constructor.showFieldsAttribute(ownerNode, [_imgField], undefined, mainGroup, Utils.getUserInfoOptsList(), Utils.getDVFieldOptsList(), changeValueEventFunc);\r\n            } else {\r\n                _imgField.constructor.showFieldsAttribute(ownerNode, [_imgField], undefined, mainGroup, Utils.getUserInfoOptsList(), Utils.getDVFieldOptsList(), changeValueEventFunc);\r\n            }\r\n        });\r\n        return group;\r\n\r\n    }\r\n}\r\n","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\n\r\nimport {TextBaseField} from './TextBaseField';\r\nimport {Utils} from '../utils/utils.js';\r\n\r\n/**\r\n * @description 멀티라인 필드 Class\r\n *\r\n * @property {Function} fieldName {@link module:Template/Field.MultiLineTextField#fieldName}\r\n * @property {Function} showFieldAttribute {@link module:Template/Field.MultiLineTextField#showFieldAttribute}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.MultiLineTextField#showFieldsAttribute}\r\n * @property {Function} makeSVGText {@link module:Template/Field.MultiLineTextField#makeSVGText}\r\n *\r\n * @augments TextBaseField {@link module:Template/Field.TextBaseField#TextBaseField}\r\n * @FileName MultiLineTextField.js\r\n * @since 2021.05.31\r\n */\r\nexport class MultiLineTextField extends TextBaseField {\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y) {\r\n        super(id, pageNo, x, y, MultiLineTextField.widthValue(), MultiLineTextField.heightValue());\r\n        this.m_type = MultiLineTextField.fieldName();\r\n\r\n        this.m_kind = Utils.translateForKey(\"Template.multilineFieldTool\");\r\n        if (Utils.isStringEmpty(id)) {\r\n            return;\r\n        }\r\n        this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n        this.textVeticalAlign = \"top\";\r\n    }\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.MultiLineTextField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"MultiLineTextField\";\r\n    }\r\n\r\n    ancestors() {\r\n        return [\"MLTF\", \"TBF\", \"BF\"];\r\n    }\r\n\r\n    /**\r\n     * @function widthValue\r\n     * @name module:Template/Field.MultiLineTextField#widthValue\r\n     * @description (Static) 필드의 초기 가로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static widthValue() {\r\n        return 150;\r\n    }\r\n\r\n    /**\r\n     * @function heightValue\r\n     * @name module:Template/Field.MultiLineTextField#heightValue\r\n     * @description (Static) 필드의 초기 세로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static heightValue() {\r\n        return 60;\r\n    }\r\n\r\n    /**\r\n     * @function showFieldsAttribute\r\n     * @static\r\n     * @name module:Template/Field.MultiLineTextField#showFieldsAttribute\r\n     * @description (Static)  필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {ELEMENT} ownerNode  속성 팝업 Node\r\n     * @param {Array} fieldList     필드들의 리스트\r\n     * @param {HTML} attrNode    속성 팝업의 Node\r\n     * @param {String} mainGroup    SVG의 메인 Element\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc) {\r\n        TextBaseField.showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc);\r\n    }\r\n\r\n    validateValue(propertyName, value) {\r\n        return true;\r\n    }\r\n}\r\n","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\nimport { BaseField } from './BaseField';\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\n\r\n/**\r\n * @description 체크박스 필드 Class\r\n *\r\n * @property {Function} fieldName {@link module:Template/Field.CheckboxField#fieldName}\r\n * @property {Function} widthValue {@link module:Template/Field.CheckboxField#widthValue}\r\n * @property {Function} heightValue {@link module:Template/Field.CheckboxField#heightValue}\r\n * @property {Function} getSVGFieldObject {@link module:Template/Field.CheckboxField#getSVGFieldObject}\r\n * \r\n * @augments BaseField {@link module:Template/Field.BaseField#BaseField}\r\n * @FileName CheckboxField.js\r\n * @since 2021.05.31\r\n */\r\n\r\nexport class CheckboxField extends BaseField {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y) {\r\n        super(id, pageNo, x, y, CheckboxField.widthValue(), CheckboxField.heightValue());\r\n        this.m_type = CheckboxField.fieldName();\r\n\r\n        this.m_kind = Utils.translateForKey(\"Template.checkFieldTool\");\r\n\r\n        if (Utils.isStringEmpty(id)) {\r\n            return;\r\n        }\r\n        this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n    }\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.CheckboxField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"CheckboxField\";\r\n    }\r\n    \r\n    ancestors() {\r\n        return [\"CBF\", \"BF\"];\r\n    }\r\n\r\n    /**\r\n     * @function widthValue\r\n     * @name module:Template/Field.CheckboxField#widthValue\r\n     * @description (Static) 필드의 초기 가로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static widthValue() {\r\n        return 60;\r\n    }\r\n\r\n    /**\r\n     * @function heightValue\r\n     * @name module:Template/Field.CheckboxField#heightValue\r\n     * @description (Static) 필드의 초기 세로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static heightValue() {\r\n        return 60;\r\n    }\r\n\r\n    /**\r\n     * @function getSVGFieldObject\r\n     * @name module:Template/Field.CheckboxField#getSVGFieldObject\r\n     * @memberOf module:Template/Field.CheckboxField\r\n     * @description 필드의 정보를 가지고 SVG Element를 생성한다.\r\n     *\r\n     * @param {Object} canvas  Snap SVG의 Canvas Object\r\n     * @param {Object} mainGroup   SVG의 메인 Node\r\n     * @param {Number} scale  현재 PDF의 Scale\r\n     * @param {HTML} ownerNode   해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {Callback} removeDragOverGroupFunc   드래그 되어 선택되어진 Field Group을 제거하는 callback function\r\n     * @param {Callback} changeValueEventFunc     속성값이 변할때 호출되는 callback function\r\n     * @param {Callback} changeFreeTransformFunc     FreeTransform을 다시 생성하기 위한 callback function\r\n     * @return SVG Node Element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    getSVGFieldObject(canvas, mainGroup, scale, ownerNode, removeDragOverGroupFunc, changeValueEventFunc, changeFreeTransformFunc) {\r\n        let group = mainGroup.group();\r\n        group.attr({\r\n            id: this.id + \"Group\",\r\n            cursor: \"move\"\r\n        });\r\n        let rect = canvas.rect(this.x, this.y, this.width * scale, this.height * scale);\r\n        rect.attr({\r\n            id: this.id,\r\n            \"fill-opacity\": \"0.6\",\r\n            \"fill\": \"#ffac7f\"\r\n        });\r\n        group.append(rect);\r\n        \r\n        const checkString = '<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"' + this.x + 'px\" y=\"' + this.y + 'px\" width=\"' + this.width * scale +\r\n            'px\" height=\"' + this.height * scale + 'px\"  viewBox=\"0 0 48 48\"><path d=\"M17.2 32.2L4.9 19.9 0 24.8 17.2 42 48 10.9 43.1 6z\"/></svg >'\r\n        const p = Snap.parse(checkString);\r\n        group.append(p);\r\n\r\n        group.hover(\r\n            function () { // f_in\r\n            },\r\n            function () { // f_out\r\n            }\r\n        );\r\n\r\n        let _chkField = this;\r\n        let mousePos = { x: 0, y: 0 };\r\n        group.mousedown(function (evt) {\r\n            mousePos.x = evt.pageX;\r\n            mousePos.y = evt.pageY;\r\n            const items = mainGroup.selectAll('g');\r\n            items.forEach(function (element) {\r\n                if (element !== group) {\r\n                    if (!Utils.isEmptyObject(element.freeTransform)) {\r\n                        element.freeTransform.hideResizeHandler();\r\n                    }\r\n                }\r\n            });\r\n            if (!Utils.isEmptyObject(group.freeTransform)) {\r\n                group.freeTransform.showResizeHandler();\r\n            } else {\r\n                changeFreeTransformFunc(group, rect.attr(\"width\"), rect.attr(\"height\"));\r\n            }\r\n        });\r\n\r\n        group.mouseup(function (evt) {\r\n            if (group.parent().attr(\"id\") === CONSTANTS.DRAG_BOX_NAME) {\r\n                if (Math.abs(mousePos.x - evt.pageX) > CONSTANTS.MINIMUM_DRAG_SIZE\r\n                    || Math.abs(mousePos.y - evt.pageY) > CONSTANTS.MINIMUM_DRAG_SIZE) {\r\n                    return;\r\n                }\r\n                removeDragOverGroupFunc.call();\r\n                const items = mainGroup.selectAll('g');\r\n                items.forEach(function (element) {\r\n                    if (element !== group) {\r\n                        if (!Utils.isEmptyObject(element.freeTransform)) {\r\n                            element.freeTransform.hideResizeHandler();\r\n                        }\r\n                    }\r\n                });\r\n                if (!Utils.isEmptyObject(group.freeTransform)) {\r\n                    group.freeTransform.showResizeHandler();\r\n                } else {\r\n                    changeFreeTransformFunc(group, rect.attr(\"width\"), rect.attr(\"height\"));\r\n                }\r\n                _chkField.constructor.showFieldsAttribute(ownerNode, [_chkField], undefined, mainGroup, Utils.getUserInfoOptsList(), Utils.getDVFieldOptsList(), changeValueEventFunc);\r\n            } else {\r\n                _chkField.constructor.showFieldsAttribute(ownerNode, [_chkField], undefined, mainGroup, Utils.getUserInfoOptsList(), Utils.getDVFieldOptsList(), changeValueEventFunc);\r\n            }\r\n        });\r\n        return group;\r\n\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\nimport { BaseField } from './BaseField';\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\n\r\n/**\r\n * @description 라디오 필드 Class\r\n *\r\n * @property {String} m_groupName {@link module:Template/Field.RadioField#m_groupName}\r\n * @property {String} m_defaultValue {@link module:Template/Field.RadioField#m_defaultValue}\r\n * \r\n * @property {Function} fieldName {@link module:Template/Field.RadioField#fieldName}\r\n * @property {Function} widthValue {@link module:Template/Field.RadioField#widthValue}\r\n * @property {Function} heightValue {@link module:Template/Field.RadioField#heightValue}\r\n * @property {Function} getSVGFieldObject {@link module:Template/Field.RadioField#getSVGFieldObject}\r\n * @property {Function} showFieldAttribute {@link module:Template/Field.RadioField#showFieldAttribute}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.RadioField#showFieldsAttribute}\r\n *\r\n * @augments BaseField {@link module:Template/Field.BaseField#BaseField}\r\n * @FileName RadioField.js\r\n * @since 2021.05.31\r\n */\r\nexport class RadioField extends BaseField {\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y) {\r\n        super(id, pageNo, x, y, RadioField.widthValue(), RadioField.heightValue());\r\n        this.m_type = RadioField.fieldName();\r\n\r\n        this.m_kind = Utils.translateForKey(\"Template.radioFieldTool\");\r\n\r\n        \r\n        if (Utils.isStringEmpty(id)) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.RadioField#m_groupName\r\n         * @description 라디오 그룹 이름\r\n         * @default id가 들어간다.\r\n         * @example\r\n         * // getter groupName()\r\n         * // setter groupName(val)\r\n         */\r\n        this.m_groupName = id;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.RadioField#m_defaultValue\r\n         * @description 라디오를 선택했을 때의 값\r\n         * @default id가 들어간다.\r\n         * @example\r\n         * // getter defaultValue()\r\n         * // setter defaultValue(val)\r\n         */\r\n        this.m_defaultValue = id;\r\n        this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n        this.m_radioType = CONSTANTS.RADIO_TYPE_1;\r\n    }\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.RadioField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"RadioField\";\r\n    }\r\n\r\n    ancestors() {\r\n        return [ \"RF\", \"BF\"];\r\n    }\r\n    /**\r\n     * @function widthValue\r\n     * @name module:Template/Field.RadioField#widthValue\r\n     * @description (Static) 필드의 초기 가로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static widthValue() {\r\n        return 60;\r\n    }\r\n\r\n    /**\r\n     * @function heightValue\r\n     * @name module:Template/Field.RadioField#heightValue\r\n     * @description (Static) 필드의 초기 세로 길이\r\n     * @return {Number}\r\n     * @static\r\n     *\r\n     */\r\n    static heightValue() {\r\n        return 60;\r\n    }\r\n\r\n    get groupName() {\r\n        return this.m_groupName;\r\n    }\r\n\r\n    set groupName(__groupName) {\r\n        this.m_groupName = __groupName;\r\n    }\r\n\r\n    get defaultValue() {\r\n        return this.m_defaultValue;\r\n    }\r\n    set defaultValue(__defaultValue) {\r\n        this.m_defaultValue = __defaultValue;\r\n    }\r\n\r\n    get radioType() {\r\n        return this.m_radioType;\r\n    }\r\n    set radioType(__radioType) {\r\n        this.m_radioType = __radioType;\r\n    }\r\n\r\n    /**\r\n     * @function getSVGFieldObject\r\n     * @name module:Template/Field.RadioField#getSVGFieldObject\r\n     * @memberOf module:Template.CheckboxField\r\n     * @description  필드의 정보를 가지고 SVG Element를 생성한다.\r\n     *\r\n     * @param {Object} canvas Snap SVG의 Canvas Object\r\n     * @param {Object} mainGroup   SVG의 메인 Node\r\n     * @param {Number} scale  현재 PDF의 Scale\r\n     * @param {ELEMENT} ownerNode   해당 프로젝트의 최상단 Element를 감싸고 있는 Element\r\n     * @param {Callback} removeDragOverGroupFunc     드래그 되어 선택되어진 Field Group을 제거하는 callback function\r\n     * @param {Callback} changeValueEventFunc     속성값이 변할때 호출되는 callback function\r\n     * @param {Callback} changeFreeTransformFunc     FreeTransform을 다시 생성하기 위한 callback function\r\n     * @return {Object} SVG Node Element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    getSVGFieldObject(canvas, mainGroup, scale, ownerNode, removeDragOverGroupFunc, changeValueEventFunc, changeFreeTransformFunc) {\r\n        let group = mainGroup.group();\r\n        group.attr({\r\n            id: this.id + \"Group\",\r\n            cursor: \"move\"\r\n        });\r\n        let rect = canvas.rect(this.x, this.y, this.width * scale, this.height * scale);\r\n        rect.attr({\r\n            id: this.id,\r\n            \"fill-opacity\": \"0.6\",\r\n            \"fill\": \"#ffac7f\"\r\n        });\r\n        group.append(rect);\r\n        const radioPath = this.m_radioType === CONSTANTS.RADIO_TYPE_1 ? CONSTANTS.RAIOD_TYPE_1_PATH : CONSTANTS.RAIOD_TYPE_2_PATH \r\n        const radioString = '<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"' + this.x + 'px\" y=\"' + this.y + 'px\" width=\"' + this.width * scale +\r\n            'px\" height=\"' + this.height * scale + 'px\"  viewBox=\"0 0 48 48\"> ' + radioPath + ' </svg >'\r\n        const p = Snap.parse(radioString);\r\n        group.append(p);\r\n\r\n\r\n        group.hover(\r\n            function () { // f_in\r\n            },\r\n            function () { // f_out\r\n            }\r\n        );\r\n\r\n        let _radioField = this;\r\n        let mousePos = { x: 0, y: 0 };\r\n        group.mousedown(function (evt) {\r\n            mousePos.x = evt.pageX;\r\n            mousePos.y = evt.pageY;\r\n            const items = mainGroup.selectAll('g');\r\n            items.forEach(function (element) {\r\n                if (element !== group) {\r\n                    if (!Utils.isEmptyObject(element.freeTransform)) {\r\n                        element.freeTransform.hideResizeHandler();\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (!Utils.isEmptyObject(group.freeTransform)) {\r\n                group.freeTransform.showResizeHandler();\r\n            } else {\r\n                changeFreeTransformFunc(group, rect.attr(\"width\"), rect.attr(\"height\"));\r\n            }\r\n        });\r\n\r\n        group.mouseup(function (evt) {\r\n            if (group.parent().attr(\"id\") === CONSTANTS.DRAG_BOX_NAME) {\r\n                if (Math.abs(mousePos.x - evt.pageX) > CONSTANTS.MINIMUM_DRAG_SIZE\r\n                    || Math.abs(mousePos.y - evt.pageY) > CONSTANTS.MINIMUM_DRAG_SIZE) {\r\n                    return;\r\n                }\r\n                removeDragOverGroupFunc.call();\r\n                const items = mainGroup.selectAll('g');\r\n                items.forEach(function (element) {\r\n                    if (element !== group) {\r\n                        if (!Utils.isEmptyObject(element.freeTransform)) {\r\n                            element.freeTransform.hideResizeHandler();\r\n                        }\r\n                    }\r\n                });\r\n                if (!Utils.isEmptyObject(group.freeTransform)) {\r\n                    group.freeTransform.showResizeHandler();\r\n                } else {\r\n                    changeFreeTransformFunc(group, rect.attr(\"width\"), rect.attr(\"height\"));\r\n                }\r\n                _radioField.constructor.showFieldsAttribute(ownerNode, [_radioField], undefined, mainGroup, Utils.getUserInfoOptsList(), Utils.getDVFieldOptsList(), changeValueEventFunc);\r\n            } else {\r\n                _radioField.constructor.showFieldsAttribute(ownerNode, [_radioField], undefined, mainGroup, Utils.getUserInfoOptsList(), Utils.getDVFieldOptsList(), changeValueEventFunc);\r\n            }\r\n        });\r\n        return group;\r\n\r\n    }\r\n\r\n    changeTextElement(fieldGroup, scale) {\r\n        fieldGroup.select(\"svg\").remove();\r\n        \r\n        const radioPath = this.m_radioType === CONSTANTS.RADIO_TYPE_1 ? CONSTANTS.RAIOD_TYPE_1_PATH : CONSTANTS.RAIOD_TYPE_2_PATH \r\n        const radioString = '<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"' + this.x + 'px\" y=\"' + this.y + 'px\" width=\"' + this.width * scale +\r\n            'px\" height=\"' + this.height * scale + 'px\"  viewBox=\"0 0 48 48\"> ' + radioPath + ' </svg >'\r\n        const p = Snap.parse(radioString);\r\n        fieldGroup.append(p);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @function showFieldAttribute\r\n     * @static\r\n     * @name module:Template/Field.RadioField#showFieldAttribute\r\n     * @description  (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {ELEMENT} node  속성 팝업 Node\r\n     * @param {String} idValue     필드의 id값\r\n     * @param {String} requiredValue     필수여부 값\r\n     * @param {String} ownerIdValue     서명자 아이디\r\n     * @param {String} groupNameValue     라디오 그룹 이름.\r\n     * @param {String} dvValue     기본값\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldAttribute(node,\r\n        idValue, fieldIdValue, requiredValue, ownerIdValue, groupNameValue, dvValue, raiodTypeValue,\r\n        userList,\r\n        changeEventFunc) {\r\n\r\n        var panel = Utils.createAttributePanelNode();\r\n\r\n        var requireRow = Utils.createAttributeToggleButtonNode(idValue, \"required\", \"Template.isRequired\", requiredValue, changeEventFunc);\r\n        panel.appendChild(requireRow);\r\n\r\n        let useDefaulOptionNode = Utils.getUserInfoOptsListCount() !== 1;\r\n        var ownerSelectRow = Utils.createAttributeSelectNode(idValue, \"ownerId\", userList, \"\", useDefaulOptionNode);\r\n        panel.appendChild(ownerSelectRow);\r\n\r\n        let ownerSelect = ownerSelectRow.querySelector(\"select\");\r\n        $(ownerSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(ownerSelect).val(ownerIdValue).trigger(\"change\");\r\n        $(ownerSelect).on(\"change\", changeEventFunc);\r\n\r\n        var radioTypeRow = Utils.createAttributeSelectNode(idValue, \"radioType\", Utils.radioTypeList, \"\", useDefaulOptionNode);\r\n        panel.appendChild(radioTypeRow);\r\n\r\n        let radioTypeSelect = radioTypeRow.querySelector(\"select\");\r\n        $(radioTypeSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(radioTypeSelect).val(raiodTypeValue).trigger(\"change\");\r\n        $(radioTypeSelect).on(\"change\", changeEventFunc);\r\n\r\n        var groupRow = Utils.createAttributeInputNode(idValue, \"groupName\", \"Template.radioGroupNameText\", groupNameValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(groupRow);\r\n\r\n        var dvValueRow = Utils.createAttributeInputNode(idValue, \"defaultValue\", \"Template.radioValueText\", dvValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(dvValueRow);\r\n\r\n        var fieldIdValueRow = Utils.createAttributeInputNode(idValue, \"fieldId\", \"Template.fieldIdText\", fieldIdValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(fieldIdValueRow);\r\n\r\n        panel.setAttribute(\"Field-id-list\", idValue);\r\n\r\n        node.className = \"Editor-Attribute\";\r\n        node.classList.add(\"Base-Field\");\r\n        node.appendChild(panel);\r\n    }\r\n\r\n\r\n    /**\r\n     * @function showFieldsAttribute\r\n     * @static\r\n     * @name module:Template/Field.RadioField#showFieldsAttribute\r\n     * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {ELEMENT} ownerNode  속성 팝업 Node\r\n     * @param {Array} fieldList     필드들의 리스트\r\n     * @param {ELEMENT} attrNode   속성 팝업의 Node\r\n     * @param {String} mainGroup    SVG의 메인 Element\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc) {\r\n        let node = attrNode;\r\n        if (attrNode === null || Utils.isEmptyObject(attrNode)) {\r\n            const bbox = Utils.mergeFieldsBBox(fieldList);\r\n            node = Utils.createAttrbutePopup(ownerNode, bbox);\r\n            Utils.repositionFieldDeleteBtn(ownerNode, bbox.x, bbox.y, bbox.width);\r\n        }\r\n        Utils.removeAllChildNode(node);\r\n\r\n\r\n        var idValueArr = [];\r\n        fieldList.forEach((field) => {\r\n            idValueArr.push(field.id);\r\n        });\r\n        var idValue = idValueArr.join();\r\n\r\n        var ownerIdValue = fieldList[0].ownerId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].ownerId !== ownerIdValue) {\r\n                ownerIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fieldIdValue = fieldList[0].fieldId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fieldId !== fieldIdValue) {\r\n                fieldIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var requiredValue = fieldList[0].required;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].required !== requiredValue) {\r\n                requiredValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var groupNameValue = fieldList[0].groupName;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].groupName !== groupNameValue) {\r\n                groupNameValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var dvValue = fieldList[0].defaultValue;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].defaultValue !== dvValue) {\r\n                dvValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var raiodTypeValue = fieldList[0].m_radioType;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].m_radioType !== raiodTypeValue) {\r\n                raiodTypeValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        RadioField.showFieldAttribute(node,\r\n            idValue, fieldIdValue, requiredValue, ownerIdValue, groupNameValue, dvValue, raiodTypeValue,\r\n            userList,\r\n            changeEventFunc);\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\nimport {TextBaseField} from './TextBaseField';\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\nimport CP from './../utils/color-picker';\r\n\r\n/**\r\n * @description 레이블 필드 Class\r\n *\r\n * @property {Function} fieldName {@link module:Template/Field.LabelField#fieldName}\r\n * @property {Function} showFieldAttribute {@link module:Template/Field.LabelField#showFieldAttribute}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.LabelField#showFieldsAttribute}\r\n * @property {Function} makeSVGText {@link module:Template/Field.LabelField#makeSVGText}\r\n *\r\n * @augments TextBaseField {@link module:Template/Field.TextBaseField#TextBaseField}\r\n * @FileName LabelField.js\r\n * @since 2021.05.31\r\n */\r\nexport class LabelField extends TextBaseField {\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y) {\r\n        super(id, pageNo, x, y, LabelField.widthValue(), LabelField.heightValue());\r\n        this.m_type = LabelField.fieldName();\r\n\r\n\r\n        this.m_maxValueLength = 100;\r\n\r\n        this.m_kind = Utils.translateForKey(\"Template.labelFieldTool\");\r\n        if (Utils.isStringEmpty(id)) {\r\n            return;\r\n        }\r\n        this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n    }\r\n\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.LabelField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"LabelField\";\r\n    }\r\n\r\n    ancestors() {\r\n        return [\"LF\", \"TBF\", \"BF\"];\r\n    }\r\n\r\n    /**\r\n     * @function showFieldAttribute\r\n     * @static\r\n     * @name module:Template/Field.LabelField#showFieldAttribute\r\n     * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {HTML} node   속성 팝업 Node\r\n     * @param {String} idValue     필드의 id값\r\n     * @param {String} requiredValue     필수여부 값\r\n     * @param {String} ownerIdValue     서명자 아이디\r\n     * @param {String} dvValue     기본값\r\n     * @param {String} fontFamilyNameValue     폰트 이름\r\n     * @param {String} fontSizeValue     폰트 크기 값\r\n     * @param {String} textAlignValue     텍스트 가로 정렬 값\r\n     * @param {String} boldValue     폰트 볼드 여부\r\n     * @param {String} fontColorValue     폰트 칼라\r\n     * @param {String} fieldValue    레이블 텍스트\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldAttribute(node,\r\n        idValue, fieldIdValue, requiredValue, ownerIdValue, dvValue, fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue, fieldValue,\r\n        userList, dvOptionList,\r\n        changeEventFunc) {\r\n\r\n        var panel = Utils.createAttributePanelNode();\r\n\r\n        var requireRow = Utils.createAttributeToggleButtonNode(idValue, \"required\", \"Template.isRequired\", requiredValue, changeEventFunc);\r\n        panel.appendChild(requireRow);\r\n\r\n        let useDefaulOptionNode = Utils.getUserInfoOptsListCount() !== 1;\r\n        var ownerSelectRow = Utils.createAttributeSelectNode(idValue, \"ownerId\", userList, \"\", useDefaulOptionNode);\r\n        panel.appendChild(ownerSelectRow);\r\n\r\n        let ownerSelect = ownerSelectRow.querySelector(\"select\");\r\n        jQuery(ownerSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        jQuery(ownerSelect).val(ownerIdValue).trigger(\"change\");\r\n        jQuery(ownerSelect).on(\"change\", changeEventFunc);\r\n\r\n        //12-28\r\n        if (dvOptionList && Array.isArray(dvOptionList) && dvOptionList.length > 0) {\r\n            var defaultValueRow = Utils.createAttributeSelectNode(idValue, \"defaultValue\", dvOptionList, \"Template.defaultValueText\", true);\r\n            panel.appendChild(defaultValueRow);\r\n\r\n            let defaultValueSelect = defaultValueRow.querySelector(\"select\");\r\n            $(defaultValueSelect).select2({\r\n                minimumResultsForSearch: Infinity,\r\n                width: \"100%\"\r\n            });\r\n            $(defaultValueSelect).val(dvValue).trigger(\"change\");\r\n            $(defaultValueSelect).on(\"change\", changeEventFunc);\r\n        }\r\n\r\n        var fieldIdValueRow = Utils.createAttributeInputNode(idValue, \"fieldId\", \"Template.fieldIdText\", fieldIdValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(fieldIdValueRow);\r\n\r\n        var fieldValueRow = Utils.createAttributeInputNode(idValue, \"value\", \"Template.labelValueText\", fieldValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(fieldValueRow);\r\n\r\n        var fontAttrRow = Utils.createTextAttrbuteNode(idValue, fontColorValue, textAlignValue, boldValue, changeEventFunc);\r\n        panel.appendChild(fontAttrRow.row);\r\n\r\n        let fontFamilyComboSelect = fontAttrRow.fontFamilyCombo.querySelector(\"select\");\r\n        $(fontFamilyComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontFamilyComboSelect).val(fontFamilyNameValue).trigger(\"change\");\r\n        $(fontFamilyComboSelect).on(\"change\", changeEventFunc);\r\n        let fontSizeComboSelect = fontAttrRow.fontSizeCombo.querySelector(\"select\");\r\n        $(fontSizeComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontSizeComboSelect).val(fontSizeValue).trigger(\"change\");\r\n        $(fontSizeComboSelect).on(\"change\", changeEventFunc);\r\n\r\n        let colorInput = fontAttrRow.colorBtn.querySelector(\"button\");\r\n        colorInput.style.backgroundColor = fontColorValue;\r\n        let picker = new CP(colorInput, { color: fontColorValue });\r\n        colorInput.value = fontColorValue;\r\n        picker.on('change', function (r, g, b, a) {\r\n            if (!picker.visible) {\r\n                return;\r\n            }\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n            colorInput.value = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n        });\r\n        picker.on('exit', function (r, g, b, a) {\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n            colorTextInput.dispatchEvent(new Event(\"change\"));\r\n        });\r\n\r\n        panel.setAttribute(\"Field-id-list\", idValue);\r\n\r\n        node.className = \"Editor-Attribute\";\r\n        node.classList.add(\"Text-Field\");\r\n        node.appendChild(panel);\r\n    }\r\n\r\n\r\n    /**\r\n     * @function showFieldsAttribute\r\n     * @static\r\n     * @name module:Template/Field.LabelField#showFieldsAttribute\r\n     * @description 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {HTML} ownerNode  속성 팝업 Node\r\n     * @param {Array} fieldList     필드들의 리스트\r\n     * @param {HTML} attrNode    속성 팝업의 Node\r\n     * @param {String} mainGroup    SVG의 메인 Element\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc) {\r\n        let node = attrNode;\r\n        if (attrNode === null || Utils.isEmptyObject(attrNode)) {\r\n            const bbox = Utils.mergeFieldsBBox(fieldList);\r\n            node = Utils.createAttrbutePopup(ownerNode, bbox);\r\n            Utils.repositionFieldDeleteBtn(ownerNode, bbox.x, bbox.y, bbox.width);\r\n        }\r\n        Utils.removeAllChildNode(node);\r\n\r\n        var idValueArr = [];\r\n        fieldList.forEach((field) => {\r\n            idValueArr.push(field.id);\r\n        });\r\n\r\n        var idValue = idValueArr.join();\r\n\r\n        var ownerIdValue = fieldList[0].ownerId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].ownerId !== ownerIdValue) {\r\n                ownerIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        var fieldIdValue = fieldList[0].fieldId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fieldId !== fieldIdValue) {\r\n                fieldIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var requiredValue = fieldList[0].required;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].required !== requiredValue) {\r\n                requiredValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var dvValue = fieldList[0].defaultValue;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].defaultValue !== dvValue) {\r\n                dvValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fontFamilyNameValue = fieldList[0].fontName;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontName !== fontFamilyNameValue) {\r\n                fontFamilyNameValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontSizeValue = fieldList[0].fontSize;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontSize !== fontSizeValue) {\r\n                fontSizeValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var textAlignValue = fieldList[0].textAlign;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].textAlign !== textAlignValue) {\r\n                textAlignValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var boldValue = fieldList[0].isBold;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].isBold !== boldValue) {\r\n                boldValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontColorValue = fieldList[0].fontColor;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontColor !== fontColorValue) {\r\n                fontColorValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fieldValue = fieldList[0].value;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].value !== fieldValue) {\r\n                fieldValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        LabelField.showFieldAttribute(node,\r\n            idValue, fieldIdValue, requiredValue, ownerIdValue, dvValue, fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue, fieldValue,\r\n            userList, dvOptionList,\r\n            changeEventFunc);\r\n    }\r\n\r\n    validateValue(propertyName, value) {\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * @function getSVGFieldObject\r\n     * @name module:Template/Field.LabelField#makeSVGText\r\n     * @memberOf module:Template/Field.LabelField\r\n     * @description (Static)  필드의 종류를 표현하는 SVG Text element\r\n     *\r\n     * @param {Number} scale 현재 PDF의 Scale\r\n     * @return {Object} SVG Node Element\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    makeSVGText(scale) {\r\n        let value = this.value;\r\n        if (value === '' && this.defaultValueText === '') {\r\n            value = this.m_fieldId;\r\n        } else if (value === '' && this.defaultValueText !== '') {\r\n            value = this.defaultValueText;\r\n        }\r\n        var textFontColor = \"fill='\" + this.fontColor + \"' \";\r\n\r\n        let textPos = ' x=\"50%\"  dy=\"0.35em\" text-anchor=\"middle\" '\r\n        if (this.textAlign === \"left\") {\r\n            textPos = ' x=\"3%\"  dy=\"0.35em\" text-anchor=\"start\" ';\r\n        } else if (this.textAlign === \"right\") {\r\n            textPos = ' x=\"97%\" dy=\"0.35em\" text-anchor=\"end\" ';\r\n        }\r\n\r\n        let textVerticalPos = 'y=\"50%\"';\r\n        if (this.textVeticalAlign === \"top\") {\r\n            textVerticalPos = 'y=\"25%\"';\r\n        } else if (this.textVeticalAlign === \"bottom\") {\r\n            textVerticalPos = 'y=\"70%\"';\r\n        }\r\n\r\n        let fontWeigth = \"\";\r\n        if (this.isBold === \"true\") {\r\n            fontWeigth = \" font-weight='bold' \";\r\n        }\r\n\r\n        let fontFmaily = \" font-family='\" + this.fontName + \"' \";\r\n\r\n        let fontInfo = ' font-size=\"' + this.fontSize * scale + 'px\" ';\r\n        let textObj = '<text' + textPos + textVerticalPos + fontFmaily + fontInfo + textFontColor + fontWeigth + '>' + value + '</text>';\r\n        const fobjectSVG = '<svg x=\"' + this.x + 'px\" y=\"' + this.y + 'px\" width=\"' + this.width * scale +\r\n            'px\" height=\"' + this.height * scale + 'px\"><g  >' + textObj + '</g></svg>';\r\n\r\n        return fobjectSVG;\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * @module Template/Field\r\n*/\r\n\r\nimport {TextBaseField} from './TextBaseField';\r\nimport {Utils} from './../utils/utils.js';\r\nimport {CONSTANTS} from './../Constants.js';\r\nimport CP from './../utils/color-picker';\r\n\r\n/**\r\n * @description 콤보박스 필드 Class\r\n *\r\n * @property {String} m_comboboxList {@link module:Template/Field.ComboboxField#m_comboboxList}\r\n *\r\n * @property {Function} fieldName {@link module:Template/Field.ComboboxField#fieldName}\r\n * @property {Function} showFieldAttribute {@link module:Template/Field.ComboboxField#showFieldAttribute}\r\n * @property {Function} showFieldsAttribute {@link module:Template/Field.ComboboxField#showFieldsAttribute}\r\n * \r\n * @augments TextBaseField {@link module:Template/Field.TextBaseField#TextBaseField}\r\n * @FileName ComboboxField.js\r\n * @since 2021.05.31\r\n */\r\nexport class ComboboxField extends TextBaseField {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param id 필드의 ID\r\n     * @param pageNo 필드가 속한 페이지 번호\r\n     * @param x 필드의 svg상의 x좌표\r\n     * @param y 필드의 svg상의 y좌표\r\n     *\r\n     */\r\n    constructor(id, pageNo, x, y) {\r\n        super(id, pageNo, x, y, ComboboxField.widthValue(), ComboboxField.heightValue());\r\n        this.m_type = ComboboxField.fieldName();\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Field.ComboboxField#m_comboboxList\r\n         * @description 콤보박스에 들어갈 리스트\r\n         * @example\r\n         * // getter comboboxList()\r\n         * // setter comboboxList(val)\r\n         */\r\n        this.m_comboboxList = \"\";\r\n\r\n        this.m_kind = Utils.translateForKey(\"Template.comboFieldTool\");\r\n        if (Utils.isStringEmpty(id)) {\r\n            return;\r\n        }\r\n        this.m_fieldId = this.m_id.replace(this.m_type, this.m_kind + \"-\");\r\n    }\r\n\r\n    /**\r\n     * @function fieldName\r\n     * @name module:Template/Field.ComboboxField#fieldName\r\n     * @return {String}\r\n     * @description (Static) 필드 타입의 이름\r\n     * @static\r\n     *\r\n     */\r\n    static fieldName() {\r\n        return \"ComboboxField\";\r\n    }\r\n    \r\n    ancestors() {\r\n        return [\"CMBF\", \"TBF\", \"BF\"];\r\n    }\r\n\r\n    get comboboxList() {\r\n        return this.m_comboboxList;\r\n    }\r\n    set comboboxList(__comboboxList) {\r\n        this.m_comboboxList = __comboboxList;\r\n    }\r\n\r\n    /**\r\n     * @function showFieldAttribute\r\n     * @static\r\n     * @name module:Template/Field.ComboboxField#showFieldAttribute\r\n     * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {HTML} node   속성 팝업 Node\r\n     * @param {String} idValue     필드의 id값\r\n     * @param {String} requiredValue     필수여부 값\r\n     * @param {String} ownerIdValue    서명자 아이디\r\n     * @param {String} dvValue     기본값\r\n     * @param {String} fontFamilyNameValue    폰트 이름\r\n     * @param {String} fontSizeValue     폰트 크기 값\r\n     * @param {String} textAlignValue    텍스트 가로 정렬 값\r\n     * @param {String} boldValue     폰트 볼드 여부\r\n     * @param {String} fontColorValue     폰트 칼라\r\n     * @param {String} comboboxListValue    콤보박스 리스트에 들어가는 리스트 값\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldAttribute(node,\r\n        idValue, fieldIdValue, requiredValue, ownerIdValue, dvValue, fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue, comboboxListValue,\r\n        userList, dvOptionList,\r\n        changeEventFunc) {\r\n\r\n        var panel = Utils.createAttributePanelNode();\r\n\r\n        var requireRow = Utils.createAttributeToggleButtonNode(idValue, \"required\", \"Template.isRequired\", requiredValue, changeEventFunc);\r\n        panel.appendChild(requireRow);\r\n\r\n        let useDefaulOptionNode = Utils.getUserInfoOptsListCount() !== 1;\r\n        var ownerSelectRow = Utils.createAttributeSelectNode(idValue, \"ownerId\", userList, \"\", useDefaulOptionNode);\r\n        panel.appendChild(ownerSelectRow);\r\n\r\n        let ownerSelect = ownerSelectRow.querySelector(\"select\");\r\n        jQuery(ownerSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        jQuery(ownerSelect).val(ownerIdValue).trigger(\"change\");\r\n        jQuery(ownerSelect).on(\"change\", changeEventFunc);\r\n\r\n        //12-28\r\n        if (dvOptionList && Array.isArray(dvOptionList) && dvOptionList.length > 0) {\r\n            var defaultValueRow = Utils.createAttributeSelectNode(idValue, \"defaultValue\", dvOptionList, \"Template.defaultValueText\", true);\r\n            panel.appendChild(defaultValueRow);\r\n\r\n            let defaultValueSelect = defaultValueRow.querySelector(\"select\");\r\n            $(defaultValueSelect).select2({\r\n                minimumResultsForSearch: Infinity,\r\n                width: \"100%\"\r\n            });\r\n            $(defaultValueSelect).val(dvValue).trigger(\"change\");\r\n            $(defaultValueSelect).on(\"change\", changeEventFunc);\r\n        }\r\n\r\n\r\n        var fieldIdValueRow = Utils.createAttributeInputNode(idValue, \"fieldId\", \"Template.fieldIdText\", fieldIdValue, \"\", \"\", changeEventFunc);\r\n        panel.appendChild(fieldIdValueRow);\r\n\r\n        var comboboxRow = Utils.createAttributeTextAreaNode(idValue, \"comboboxList\", \"Template.comboBoxSelctValueText\", comboboxListValue, \"\", changeEventFunc);\r\n        panel.appendChild(comboboxRow);\r\n\r\n        var fontAttrRow = Utils.createTextAttrbuteNode(idValue, fontColorValue, textAlignValue, boldValue, changeEventFunc);\r\n        panel.appendChild(fontAttrRow.row);\r\n\r\n        let fontFamilyComboSelect = fontAttrRow.fontFamilyCombo.querySelector(\"select\");\r\n        $(fontFamilyComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontFamilyComboSelect).val(fontFamilyNameValue).trigger(\"change\");\r\n        $(fontFamilyComboSelect).on(\"change\", changeEventFunc);\r\n        let fontSizeComboSelect = fontAttrRow.fontSizeCombo.querySelector(\"select\");\r\n        $(fontSizeComboSelect).select2({\r\n            minimumResultsForSearch: Infinity,\r\n            width: \"100%\"\r\n        });\r\n        $(fontSizeComboSelect).val(fontSizeValue).trigger(\"change\");\r\n        $(fontSizeComboSelect).on(\"change\", changeEventFunc);\r\n\r\n        let colorInput = fontAttrRow.colorBtn.querySelector(\"button\");\r\n        colorInput.style.backgroundColor = fontColorValue;\r\n        let picker = new CP(colorInput, { color: fontColorValue });\r\n        colorInput.value = fontColorValue;\r\n        picker.on('change', function (r, g, b, a) {\r\n            if (!picker.visible) {\r\n                return;\r\n            }\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n            colorInput.value = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n        });\r\n        picker.on('exit', function (r, g, b, a) {\r\n            colorInput.style.backgroundColor = CP.HEX([r, g, b, a]);\r\n\r\n            let colorTextInput = fontAttrRow.colorBtn.querySelector(\"input[type='text']\");\r\n            colorTextInput.value = (CP.HEX([r, g, b, a]));\r\n            colorTextInput.dispatchEvent(new Event(\"change\"));\r\n        });\r\n\r\n        panel.setAttribute(\"Field-id-list\", idValue);\r\n        node.className = \"Editor-Attribute\";\r\n        node.classList.add(\"Text-Field\");\r\n        node.appendChild(panel);\r\n    }\r\n\r\n\r\n    /**\r\n     * @function showFieldsAttribute\r\n     * @static\r\n     * @name module:Template/Field.ComboboxField#showFieldsAttribute\r\n     * @description (Static) 필드의 속성 팝업창을 설정한다.\r\n     *\r\n     * @param {HTML} ownerNode  속성 팝업 Node\r\n     * @param {Array} fieldList     필드들의 리스트\r\n     * @param {HTML} attrNode    속성 팝업의 Node\r\n     * @param {String} mainGroup    SVG의 메인 Element\r\n     * @param {Array} userList   서명자 리스트\r\n     * @param {Array} dvOptionList   기본값 선택 리스트\r\n     * @param {Callback} changeEventFunc    속성값이 변할때 호출되는 callback function\r\n     * @Date : 2021. 5. 31\r\n     */\r\n    static showFieldsAttribute(ownerNode, fieldList, attrNode, mainGroup, userList, dvOptionList, changeEventFunc) {\r\n        let node = attrNode;\r\n        if (attrNode === null || Utils.isEmptyObject(attrNode)) {\r\n            const bbox = Utils.mergeFieldsBBox(fieldList);\r\n            node = Utils.createAttrbutePopup(ownerNode, bbox);\r\n            Utils.repositionFieldDeleteBtn(ownerNode, bbox.x, bbox.y, bbox.width);\r\n        }\r\n        Utils.removeAllChildNode(node);\r\n\r\n        var idValueArr = [];\r\n        fieldList.forEach((field) => {\r\n            idValueArr.push(field.id);\r\n        });\r\n\r\n        var idValue = idValueArr.join();\r\n\r\n        var ownerIdValue = fieldList[0].ownerId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].ownerId !== ownerIdValue) {\r\n                ownerIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var requiredValue = fieldList[0].required;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].required !== requiredValue) {\r\n                requiredValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var dvValue = fieldList[0].defaultValue;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].defaultValue !== dvValue) {\r\n                dvValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var fontFamilyNameValue = fieldList[0].fontName;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontName !== fontFamilyNameValue) {\r\n                fontFamilyNameValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontSizeValue = fieldList[0].fontSize;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontSize !== fontSizeValue) {\r\n                fontSizeValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var textAlignValue = fieldList[0].textAlign;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].textAlign !== textAlignValue) {\r\n                textAlignValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var boldValue = fieldList[0].isBold;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].isBold !== boldValue) {\r\n                boldValue = '';\r\n                break;\r\n            }\r\n        }\r\n        var fontColorValue = fieldList[0].fontColor;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fontColor !== fontColorValue) {\r\n                fontColorValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        var comboboxListValue = fieldList[0].comboboxList;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].comboboxList !== comboboxListValue) {\r\n                comboboxListValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        let dvOptions = [];\r\n\r\n        if (comboboxListValue !== '') {\r\n            const combolist = comboboxListValue.split(\"\\n\");\r\n            for (var idx = 0; idx < combolist.length; ++idx) {\r\n                if (Utils.isStringEmpty(combolist[idx])) {\r\n                    continue;\r\n                }\r\n                    \r\n                dvOptions.push({\r\n                    text: combolist[idx],\r\n                    value: combolist[idx]\r\n                })\r\n            }\r\n        }\r\n\r\n        var fieldIdValue = fieldList[0].fieldId;\r\n        for (var idx = 0; idx < fieldList.length; ++idx) {\r\n            if (fieldList[idx].fieldId !== fieldIdValue) {\r\n                fieldIdValue = '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        ComboboxField.showFieldAttribute(node,\r\n            idValue, fieldIdValue, requiredValue, ownerIdValue, dvValue, fontFamilyNameValue, fontSizeValue, textAlignValue, boldValue, fontColorValue, comboboxListValue,\r\n            userList, dvOptions,\r\n            changeEventFunc);\r\n    }\r\n\r\n    validateValue(propertyName, value) {\r\n        return true;\r\n    }\r\n\r\n}\r\n","\r\n/**\r\n * @module Template/Data\r\n */\r\n\r\nimport {Utils} from './../utils/utils.js';\r\n\r\n/**\r\n * @description\r\n * 문서의 이름과 서명자의 정보를 담고 있는 Class <br/>\r\n * JSON데이터를 추출하기 위해 만들어진 Data Class\r\n *\r\n * @property {String} formTemplateName {@link module:Template/Data.TemplateData#formTemplateName}\r\n * @property {String} formTemplateUUID {@link module:Template/Data.TemplateData#formTemplateUUID}\r\n * @property {Array} formerList {@link module:Template/Data.TemplateData#formerList}\r\n *\r\n * @property {Function} pushOwner {@link module:Template/Data.TemplateData#pushOwner}\r\n * \r\n * @example\r\n *  아래와 같이 JSON데이터를 만들 때 사용된다.\r\n *  {\r\n        \"formTemplateName\": \"Form Template 문서 이름\",\r\n        \"formTemplateUUID\": \"Form Template 문서 UUID\",\r\n        \"formerList\": [  -- TemplateDataOwner Data Class\r\n            {\r\n                \"pages\": [  -- TemplateDataPage Data Class\r\n                    {\r\n                        \"pageNo\": 0,\r\n                        \"fields\": [\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n *\r\n * @FileName TemplateData.js\r\n * @since 2021.05.31\r\n */\r\nexport class TemplateData {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {String} name Template 문서 이름.\r\n     *\r\n     */\r\n    constructor(name, uuid) {\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Data.TemplateData#formTemplateName\r\n         * @description  Template 문서 이름.\r\n         */\r\n        this.formTemplateName = name;\r\n\r\n        /**\r\n         * @type {String}\r\n         * @name module:Template/Data.TemplateData#formTemplateUUID\r\n         * @description  Template 문서 UUID.\r\n         */\r\n        this.formTemplateUUID = uuid;\r\n        if (uuid === undefined || uuid === null) {\r\n            this.formTemplateUUID = Utils.generate_uuidv4();\r\n        }\r\n\r\n        /**\r\n         * @type {Array}\r\n         * @name module:Template/Data.TemplateData#formerList\r\n         * @description  TemplateDataOwner Array\r\n         */\r\n        this.formerList = [];\r\n    }\r\n\r\n    /**\r\n     * @function pushOwner\r\n     * @name module:Template/Data.TemplateData#pushOwner\r\n     * @description TemplateDataOwner를 추가한다.\r\n     *\r\n     * @param {Object} ownerData 추가할 서명자 데이터 TemplateDataOwner\r\n     * @Date : 2021. 5. 31\r\n    */\r\n    pushOwner(ownerData) {\r\n        this.formerList.push(ownerData);\r\n    }\r\n}","\r\n/**\r\n * @module Template/Data\r\n */\r\n\r\n/**\r\n * @description 페이지 정보를 담고 있는 서명자 정보 Class<br/>\r\n * JSON데이터를 추출하기 위해 만들어진 Data Class\r\n * \r\n *\r\n * @property {Array} pages {@link module:Template/Data.TemplateDataOwner#pages}\r\n *\r\n * @property {Function} pushPage {@link module:Template/Data.TemplateDataOwner#pushPage}\r\n * @property {Function} cloneTemplateDataOwnerObject {@link module:Template/Data.TemplateDataOwner#cloneTemplateDataOwnerObject}\r\n * @property {Function} cloneObject {@link module:Template/Data.TemplateDataOwner#cloneObject}\r\n * \r\n * @see module:Template/Data.TemplateData\r\n * @FileName TemplateDataOwner.js\r\n * @since 2021.05.31\r\n */\r\nexport class TemplateDataOwner {\r\n\r\n    /**\r\n     * @constructor\r\n     *\r\n     */\r\n    constructor() {\r\n        /**\r\n         * @type {Array}\r\n         * @name module:Template/Data.TemplateDataOwner#pages\r\n         * @description  TemplateDataPage 클래스 배열\r\n         */\r\n        this.pages = [];\r\n    }\r\n\r\n    /**\r\n     * @function pushPage\r\n     * @name module:Template/Data.TemplateDataOwner#pushPage\r\n     * @description TemplateDataPage Object를 추가한다.\r\n     *\r\n     * @param {Object} page  TemplateDataPage Object\r\n     * @Date : 2021. 5. 31\r\n    */\r\n    pushPage(page) {\r\n        this.pages.push(page);\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function cloneTemplateDataOwnerObject\r\n     * @name module:Template/Data.TemplateDataOwner#cloneTemplateDataOwnerObject\r\n     * @description (Static) TemplateDataOwner 오브젝트를 복사한다.\r\n     * \r\n     * @param {Object} obj  복사할 Object\r\n     * @return {Object} TemplateDataOwner Object\r\n     * @Date : 2021. 5. 31\r\n    */\r\n    static cloneTemplateDataOwnerObject(obj) {\r\n        var clone = new TemplateDataOwner();\r\n        for (var key in obj) {\r\n            if (key === \"pages\" || key === \"fields\") {\r\n                continue;\r\n            }\r\n            if (typeof obj[key] == \"object\" && obj[key] != null) {\r\n                clone[key] = TemplateDataOwner.cloneObject(obj[key]);\r\n            } else {\r\n                clone[key] = obj[key];\r\n            }\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     * @function cloneObject\r\n     * @name module:Template/Data.TemplateDataOwner#cloneObject\r\n     * @description (Static) 오브젝트를 복사한다.\r\n     *\r\n     * @param {Object} obj  복사할 Object\r\n     * @return {Object}\r\n     * @Date : 2021. 5. 31\r\n    */\r\n    static cloneObject(obj) {\r\n        var clone = {};\r\n        for (var key in obj) {\r\n            if (key === \"pages\" || key === \"fields\") {\r\n                continue;\r\n            }\r\n            if (typeof obj[key] == \"object\" && obj[key] != null) {\r\n                clone[key] = TemplateDataOwner.cloneObject(obj[key]);\r\n            } else {\r\n                clone[key] = obj[key];\r\n            }\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n}\r\n","\r\n/**\r\n * @module Template/Data\r\n */\r\n\r\n/**\r\n * @description  필드 리스트 정보를 담고 있는 페이지 정보 Class<br/>\r\n * JSON데이터를 추출하기 위해 만들어진 Data Class\r\n *\r\n * @property {Number} pageNo {@link module:Template/Data.TemplateDataPage#pageNo}\r\n * @property {Array} fields {@link module:Template/Data.TemplateDataPage#fields}\r\n *\r\n * @property {Function} pushField {@link module:Template/Data.TemplateDataPage#pushField}\r\n *\r\n * @see module:Template/Data.TemplateData\r\n * @FileName TemplateDataPage.js\r\n * @since 2021.05.31\r\n */\r\nexport class TemplateDataPage {\r\n\r\n    /**\r\n     * @constructor\r\n     *\r\n     * @param {Number} pageNo 페이지 번호\r\n     */\r\n    constructor(pageNo) {\r\n        /**\r\n         * @type {Number}\r\n         * @name module: Template/Data.TemplateDataPage#pageNo\r\n         * @description  페이지 번호\r\n         */\r\n        this.pageNo = pageNo;\r\n\r\n        /**\r\n         * @type {Array}\r\n         * @name module:Template/Data.TemplateDataPage#fields\r\n         * @description  Field 리스트.\r\n         */\r\n        this.fields = [];\r\n    }\r\n\r\n    /**\r\n     * @function pushField\r\n     * @name module:Template/Data.TemplateDataOwner#pushField\r\n     * @description Field Object를 추가한다.\r\n     *\r\n     * @param {Object} field  Field Object\r\n     * @Date : 2021. 5. 31\r\n    */\r\n    pushField(field) {\r\n        this.fields.push(field);\r\n    }\r\n}","\r\n/**\r\n * @module Template/Data\r\n */\r\n\r\n/**\r\n * @description 서명자 정보 Class\r\n * \r\n *\r\n * @property {Array} fields {@link module:Template/Data.TemplateUserFieldInfo#fields}\r\n *\r\n * @property {Function} pushField {@link module:Template/Data.TemplateUserFieldInfo#pushField}\r\n * @property {Function} field {@link module:Template/Data.TemplateUserFieldInfo#field}\r\n * @property {Function} removeField {@link module:Template/Data.TemplateUserFieldInfo#removeField}\r\n * @property {Function} contains {@link module:Template/Data.TemplateUserFieldInfo#contains}\r\n * \r\n * @class\r\n * @FileName TemplateUserFieldInfo.js\r\n * @since 2021.05.31\r\n */\r\nexport class TemplateUserFieldInfo {\r\n\r\n    constructor() {\r\n\r\n        /**\r\n         * @type {Array}\r\n         * @name module: Template/Data.TemplateUserFieldInfo#fields\r\n         * @description  Field 리스트.\r\n         */\r\n        this.fields = {};\r\n    }\r\n\r\n    /**\r\n     * @function pushField\r\n     * @name module:Template/Data.TemplateUserFieldInfo#pushField\r\n     * @description Field Object를 추가한다.\r\n     *\r\n     * @param {Object} field  Field Object\r\n     * @Date : 2021. 5. 31\r\n    */\r\n    pushField(fieldId, field) {\r\n        this.fields[fieldId] = field;\r\n    }\r\n\r\n    /**\r\n     * @function field\r\n     * @name module:Template/Data.TemplateUserFieldInfo#field\r\n     * @description ID에 해당하는 Field Object를 리턴한다.\r\n     *\r\n     * @param {String} fieldId  Field ID\r\n     * @return {Object} Field Object\r\n     * @Date : 2021. 5. 31\r\n    */\r\n    field(fieldId) {\r\n        return this.fields[fieldId];\r\n    }\r\n\r\n    /**\r\n     * @function removeField\r\n     * @name module:Template/Data.TemplateUserFieldInfo#removeField\r\n     * @description ID에 해당하는 Field Object를 삭제한다.\r\n     *\r\n     * @param {String} fieldId  Field ID\r\n     * @Date : 2021. 5. 31\r\n    */\r\n    removeField(fieldId) {\r\n        if (this.contains(fieldId)) {\r\n            delete this.fields[fieldId];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function contains\r\n     * @name module:Template/Data.TemplateUserFieldInfo#contains\r\n     * @description ID에 해당하는 Field Object가 존재하는지 여부를 리턴한다.\r\n     *\r\n     * @param {String} fieldId  Field ID\r\n     * @return {Boolean}} 존재하면 True 아니면 false\r\n     * @Date : 2021. 5. 31\r\n    */\r\n    contains(fieldId) {\r\n        return this.fields.hasOwnProperty(fieldId);\r\n    }\r\n}"],"names":["root","factory","exports","module","define","amd","this","CONSOLE_MESSAGES","INVALID_PARAM_LANGUAGE","param","INVALID_PARAM_JSON","EMPTY_PARAM_LANGUAGE","EMPTY_PARAM_JSON","INVALID_PARAM_KEY","NO_LANGUAGE_REGISTERED","language","TRANSLATION_NOT_FOUND","key","INVALID_PARAMETER_SOURCES","FETCH_ERROR","response","url","status","statusText","INVALID_ENVIRONMENT","MODULE_NOT_FOUND","message","MISMATCHING_ATTRIBUTES","keys","attributes","element","length","join","outerHTML","INVALID_OPTIONS","logger","isEnabled","code","args","TypeError","ex","line","stack","split","method","filepath","console","error","Translator","constructor","options","debug","Array","isArray","languages","Map","config","Object","assign","defaultConfig","registerGlobally","detectLanguage","_globalObject","translateForKey","bind","_env","_detectLanguage","window","g","inMemory","localStorage","getItem","persistKey","defaultLanguage","lang","navigator","substr","_getValueFromJSON","toLanguage","json","get","reduce","obj","i","_replace","getAttribute","forEach","index","text","attr","setAttribute","translatePageTo","has","elements","selector","from","document","querySelectorAll","undefined","_currentLanguage","documentElement","persist","setItem","add","set","remove","delete","fetch","sources","save","urls","map","source","filename","replace","filesLocation","Promise","all","then","responses","ok","languageFiles","filter","file","setDefaultLanguage","currentLanguage","documentMode","chrome2","chrome","matchesSelector","webstore","app","test","vendor","userAgent","some","prefix","name","PDFCursorTools","container","eventBus","cursorToolOnLoad","active","activeBeforePresentationMode","handTool","GrabToPan","_addEventListeners","resolve","switchTool","activeTool","tool","disableActiveTool","deactivate","activate","_dispatchEvent","dispatch","_on","evt","switchInProgress","previouslyActive","x","isFunction","isInstance","of","isSet","isNumber","isObject","isPlain","isDefined","isNull","isString","fromValue","v","k","toCaseUpper","toUpperCase","toEdge","edges","toNumber","base","parseInt","parseFloat","toObjectKeys","toRound","Math","round","toString","toValue","isNumeric","D","W","B","body","R","node","attribute","parseValue","hasAttribute","value","getDatum","datum","trim","slice","JSON","parse","e","fromJSON","getParent","parentNode","hasState","state","letAttribute","removeAttribute","setChildLast","parent","appendChild","setDatum","stringify","setElement","content","createElement","setHTML","setAttributes","setStyle","style","m0","m1","offEvents","names","removeEventListener","offEvent","onEvents","supportsPassive","opts","defineProperty","addEventListener","passive","onEvent","getAxis","event","touches","clientX","y","clientY","rect","getRect","h","w","X","Y","isWindow","pageXOffset","scrollLeft","pageYOffset","scrollTop","innerWidth","innerHeight","getBoundingClientRect","left","top","width","height","right","bottom","delay","setTimeout","hex","getClosest","a","b","parentElement","P2RGB","r","f","p","q","t","s","floor","RGB2HSV","max","min","d","EVENTS_DOWN","EVENTS_MOVE","EVENTS_RESIZE","EVENTS_UP","CP","$","fire","hooks","data","apply","off","_j","splice","j","on","push","hook","theValue","theColor","to","color","getState","getText","setText","_len","arguments","lot","_key","concat","fromStates","visible","instances","id","toCount","doEnter","doExit","doFit","doResize","className","theData","self","C","SV","H","A","SVColor","SVSaturation","SVValue","SVCursor","HColor","HCursor","AColor","APattern","ACursor","SVStarting","HStarting","AStarting","SVDragging","HDragging","ADragging","doClick","focus","target","doApply","isFirst","toParent","doDownA","current","doMove","doDownH","doDownSV","SVPoint","SVWidth","SVHeight","doSetColor","doSetSVCursor","HHeight","doSetHCursor","AHeight","doSetACursor","SVWidthCursor","SVHeightCursor","HHeightCursor","AHeightCursor","doSetCursor","doStop","isSource","isSelf","blur","rootRect","sourceRect","winRect","scrollBarHeight","clientHeight","scrollBarWidth","selfRect","selfHeight","selfWidth","selfLeft","selfTop","minX","minY","maxX","maxY","SVRect","SVRectCursor","HRect","HRectCursor","ARect","ARectCursor","enter","exit","fit","pop","count","version","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","call","n","getter","__esModule","definition","o","enumerable","globalThis","Function","hmd","create","children","Error","prop","prototype","hasOwnProperty","Symbol","toStringTag","CONSTANTS","static","defaultInstanceSettings","update","begin","loopBegin","changeBegin","change","changeComplete","loopComplete","complete","loop","direction","autoplay","timelineOffset","defaultTweenSettings","duration","endDelay","easing","validTransforms","cache","CSS","springs","minMax","val","stringContains","str","indexOf","applyArguments","func","is","arr","pth","svg","SVGElement","inp","HTMLInputElement","dom","nodeType","fnc","und","nil","rgb","hsl","col","parseEasingParameters","string","match","exec","spring","params","mass","stiffness","damping","velocity","w0","sqrt","zeta","wd","solver","progress","exp","cos","sin","cached","frame","elapsed","rest","steps","ceil","eases","functionEasings","bezier","kSampleStepSize","aA1","aA2","calcBezier","aT","getSlope","mX1","mY1","mX2","mY2","sampleValues","Float32Array","aX","intervalStart","currentSample","kSplineTableSize","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","abs","binarySubdivide","getTForX","penner","linear","Sine","PI","Circ","Back","Bounce","pow2","pow","Elastic","amplitude","period","asin","easeIn","parseEasings","ease","selectString","filterArray","callback","len","thisArg","result","flattenArray","toArray","NodeList","HTMLCollection","arrayContains","cloneObject","clone","replaceObjectProps","o1","o2","mergeObjects","getUnit","getFunctionValue","animatable","total","el","convertPxToUnit","unit","tempEl","tagName","parentEl","position","factor","offsetWidth","removeChild","convertedUnit","getCSSValue","uppercasePropName","toLowerCase","getComputedStyle","getPropertyValue","getAnimationType","getElementTransforms","m","transform","reg","transforms","getOriginalTargetValue","propName","defaultVal","getTransformUnit","list","getTransformValue","getRelativeValue","operator","u","validateValue","rgbValue","hexValue","hexToRgba","hslValue","l","hue2rgb","hslToRgba","colorToRgb","originalUnit","unitLess","getDistance","p1","p2","getPolylineLength","previousPos","points","totalLength","numberOfItems","currentPos","getTotalLength","getCircleLength","getRectLength","getLineLength","getPolygonLength","getParentSvg","pathEl","svgData","parentSvgEl","getParentSvgEl","viewBoxAttr","viewBox","vW","vH","getPathProgress","path","isPathTargetInsideSVG","point","offset","getPointAtLength","p0","scaleX","scaleY","property","atan2","decomposeValue","rgx","original","numbers","Number","strings","parseTargets","targets","item","pos","getAnimatables","parsed","normalizePropertyTweens","tweenSettings","settings","propArray","setProgressValue","css","object","manual","last","setTargetsValue","properties","valueUnit","originalValue","animType","getAnimations","animatables","tweens","previousTween","tween","normalizeTweenValues","tweenValue","toUnit","previousValue","fromUnit","start","end","isPath","isColor","normalizeTweens","lastTween","type","createAnimation","getInstanceTimings","animations","animLength","getTlOffset","anim","timings","instanceID","activeInstances","engine","raf","step","activeInstancesLength","activeInstance","paused","tick","requestAnimationFrame","anime","suspendWhenDocumentHidden","isDocumentHidden","cancelAnimationFrame","instance","_onDocumentVisibility","hidden","startTime","lastTime","now","childrenLength","makePromise","promise","_resolve","finished","instanceSettings","keyframes","propertyNames","newKey","flattenKeyframes","getProperties","createNewInstance","toggleInstanceDirection","reversed","child","adjustTime","time","resetTime","currentTime","speed","seekChild","seek","setAnimationsProgress","insTime","animationsLength","tweenLength","eased","isNaN","toNumbersLength","fromNumber","stringsLength","n$1","currentValue","setCallback","cb","passThrough","setInstanceProgress","engineTime","insDuration","insDelay","insEndDelay","reversePlayback","i$1","syncInstanceChildren","began","loopBegan","changeBegan","changeCompleted","remaining","completed","reset","pause","play","reverse","restart","removeTargetsFromInstance","removeTargetsFromAnimations","targetsArray","c","childAnimations","running","convertPx","percent","setDashoffset","pathLength","stagger","grid","axis","fromIndex","fromFirst","fromCenter","fromLast","isRange","val1","val2","values","maxValue","fromX","fromY","distanceX","distanceY","timeline","tl","instanceParams","tlIndex","ins","insParams","tlDuration","random","Utils","RADIO_TYPE_1","RADIO_TYPE_2","isEmptyObject","closeSelect2Tag","EDITOR_ATTR_SELECT_CLASS","classList","contains","select2","removeAllChildNode","firstChild","lastChild","EDITOR_ATTR_PANEL_ID","createAttributePanelNode","panel","EDITOR_ATTR_PANEL_CLASS","createAttributeInputNode","fieldId","fieldPropetyName","title","nodeTooltip","changeEventFunc","row","EDITOR_ATTR_CONTENTS_ROW_CLASS","titleWrap","TITLE_WRAP_CLASS","titleSpan","TITLE_CLASS","textContent","input","EDITOR_ATTR_INPUT_CLASS","createAttributeTextAreaNode","textarea","EDITOR_ATTR_TEXTAREA_CLASS","createAttributeCheckBoxNode","inputText","display","checked","dispatchEvent","Event","checkBoxContainerNode","checkBoxLabelNode","htmlFor","createAttributeDateInputNode","inputPicker","EDITOR_ATTR_DATE_INPUT_CLASS","createAttributeColorInputNode","inputBtn","inputWrap","EDITOR_ATTR_INPUT_WRAP_CLASS","createAttributeToggleButtonNode","rowWrap","EDITOR_ATTR_ROW_WRAP_CLASS","switchLabel","SWITCH_LABEL_CLASS","sliderSpan","SWITCH_LABEL_SLIDER_CLASS","SWITCH_LABEL_SLIDER_ROUND_CLASS","createAttributeSelectInnerNode","useDefaulOptionNode","selectNode","defaultOptionNode","idx","optionNode","createAttributeSelectNode","createDividerNode","dividerRow","DIVIDER_CLASS","createTextAlignButtonNode","btnsWrap","leftBtn","leftIconBtn","centerBtn","centerIconBtn","rightBtn","rightIconBtn","inputNode","toggle","createTextBoldButtonNode","boldBtn","boldBtnIconBtn","createTextColorButtonNode","createTextAttrbuteNode","fontColor","fontAlign","isBold","fontAttrTable","row1","col1","paddingRight","colSpan","fontFamilyCombo","fontFamilyComboBox","col2","fontSizeCombo","getFonSizeComboBox","row2","col3","paddingTop","alignBtnsNode","col4","boldBtnNode","col5","colorBtnNode","colorBtn","createTextMemoAttrbuteNode","backgroundColor","col6","backgroundColorBtnNode","backgroundColorBtn","shift","fieldAncestors","anyclass","getPrototypeOf","findSameAncestor","fieldList","firstAncestors","sameAncestor","ancestors","startIdx","startIdx2","sameAncestorParents","secIdx","ancestor","firstIdx","findSameAncestor2","firstFieldAncestors","commonAncestor","includes","idx2","getUserInfoOptsList","userInfoOptionList","setUserInfoOptsList","getUserInfoOptsListCount","userInfoOptionListCount","setUserInfoOptsListCount","getDVFieldOptsList","dvFieldOptionList","setDVFieldOptsList","getSignTabShowOpt","signTabShowOpt","setSignTabShowOpt","fontSizeComboBox","getSignPenWidthComboBox","signPenWidthComboBox","createAttrbutePopup","ownerNode","ownerFieldBBox","attrDiv","querySelector","EDITOR_ATTR_CLASS","SHOW_CLASS","TEMPLATE_PDF_VIEWER","showAsteriskDiv","isShow","fieldX","fieldY","fieldHeight","asteriskDiv","asteriskHeight","ASTREISK_DIV_HEIGHT","asteriskY","HIDE_CLASS","createAsteriskDiv","ASTERISK_ICON_CLASS","TEMPLATE_LAYER_ASTERISK_NAME","isShowAsteriskDiv","createFieldDeleteBtn","btnClickEvtHandler","deleteBtnDiv","FIELD_DELETE_BUTTON_CLASS","repositionFieldDeleteBtn","log","addSignSvgToCanvas","field","canvasDiv","signWidth","signHeight","canvasObj","m_id","staticCanvs1","fabric","StaticCanvas","isDrawingMode","setHeight","setWidth","loadSVGFromString","objects","util","groupSVGElements","xScale","yScale","scale1","scale","strokeWidth","_objects","centerObject","renderAll","setCoords","crossOrigin","addObjectsToCanvas","_ownerNode","orgWidth","orgHeight","canvasId","enlivenObjects","objs","origRenderOnAddRemove","renderOnAddRemove","gotoCenter","calcOffset","getObjects","group","Group","cloneObjectToObject","fromObj","toObj","cloneFabricCanvas","isStringEmpty","mergeRect","r1","r2","boundingRectToRect","mergeObjectsRect","canvas","forEachObject","bound","getBoundingRect","mergeFieldsBBox","fields","getBBox","imageFileToBase64","callBackFunc","startsWith","reader","FileReader","readAsDataURL","onload","onerror","changeLocale","locale","translator","translatorFileLocation","addTranslator","langData","appendFontFamily","fontFamilyArr","generate_uuidv4","substring","BaseField","pageNo","m_x","m_y","m_width","m_height","m_pageNo","m_pdfX","m_pdfY","m_pdfX2","m_pdfY2","m_type","fieldName","m_fontSize","m_fontName","m_fontWeight","m_fontStyle","m_fontColor","m_kind","m_isRemoved","m_value","m_ownerId","m_fieldId","m_required","fromJson","jsonData","kind","__id","__fieldId","_pageNo","__x","__y","__width","__height","toolTip","m_toolTip","__toolTip","pdfX","__pdfX","pdfY","__pdfY","pdfX2","__pdfX2","pdfY2","__pdfY2","fontSize","__fontSize","fontName","__fontName","fontWeight","__fontWeight","fontStyle","__fontStyle","__fontColor","isRemoved","_isRemoved","_value","ownerId","__ownerId","required","__required","showFieldAttribute","idValue","fieldIdValue","requiredValue","ownerIdValue","userList","requireRow","ownerSelectRow","ownerSelect","minimumResultsForSearch","Infinity","trigger","fieldIdValueRow","showFieldsAttribute","attrNode","mainGroup","dvOptionList","bbox","idValueArr","propertyName","_templateMod","pdfViewer","templatemod","__templateOwnerNode","TextBaseField","super","m_placeHolder","m_defaultValue","m_defaultValueText","m_textAlign","m_textVeticalAlign","m_bold","widthValue","heightValue","placeHolder","__placeHolder","defaultValue","__defaultValue","defaultValueText","__defaultValueText","textAlign","__textAlign","textVeticalAlign","__textVeticalAlign","__bold","needTextSvgRefresh","makeSVGText","textFontColor","textPos","textVerticalPos","fontWeigth","textObj","getSVGFieldObject","removeDragOverGroupFunc","changeValueEventFunc","changeFreeTransformFunc","cursor","append","Snap","hover","_textBaseField","mousePos","mousedown","pageX","pageY","selectAll","freeTransform","hideResizeHandler","showResizeHandler","mouseup","DRAG_BOX_NAME","MINIMUM_DRAG_SIZE","changeTextElement","fieldGroup","select","newText","dvValue","fontFamilyNameValue","fontSizeValue","textAlignValue","boldValue","fontColorValue","jQuery","defaultValueRow","defaultValueSelect","fontAttrRow","fontFamilyComboSelect","fontSizeComboSelect","colorInput","picker","colorTextInput","TextField","m_maxValueLength","maxValueLength","__maxValueLength","NumberField","m_inputMax","m_inputMin","m_useCalc","inputMax","__inputMax","inputMin","__inputMin","minValue","useCalcVal","minVal","minValueRow","maxVal","maxValueRow","calcRow","useCalcValue","DateField","m_useCurrentDate","m_inputFormat","inputFormat","__inputFormat","useCurrentDate","__useCurrentDate","inputFormatValue","useCurrentDateValue","inputFormatRow","dateFormatComboBox","inputFormatSelect","useCurrentRow","SignField","useDrawSign","useImageSign","useRegSign","m_signPenThickness","m_signPenColor","useDrawSignDef","useImageSignDef","useRegSignDef","m_useDrawSign","m_useImageSign","m_useRegSign","m_regSignApiUrl","signPenThickness","__signPenThickness","signPenColor","__signPenColor","signPenThicknessValue","useDrawSignValue","useImageSignValue","useRegSignValue","regSignApiUrlValue","penWidthSelectRow","penWidthSelect","useDrawSignRow","useImageSignRow","useRegSignRow","fill","_signField","ImageField","_imgField","MultiLineTextField","CheckboxField","checkString","_chkField","RadioField","m_groupName","m_radioType","groupName","__groupName","radioType","__radioType","radioPath","RAIOD_TYPE_1_PATH","RAIOD_TYPE_2_PATH","radioString","_radioField","groupNameValue","raiodTypeValue","radioTypeRow","radioTypeList","radioTypeSelect","groupRow","dvValueRow","LabelField","fieldValue","fieldValueRow","ComboboxField","m_comboboxList","comboboxList","__comboboxList","comboboxListValue","comboboxRow","dvOptions","combolist","TemplateData","uuid","formTemplateName","formTemplateUUID","formerList","pushOwner","ownerData","TemplateDataOwner","pages","pushPage","page","cloneTemplateDataOwnerObject","TemplateDataPage","pushField","TemplateUserFieldInfo","removeField","TemplateMod","dragStart","dragBox","mainCanvas","pageBoundingBox","templateRectMousePosition","selectAddFieldType","fieldDictionary","unredoActionIdx","unredoActionDict","templateUserFieldInfo","isFieldDragStart","menuCode","templateClipBoard","_pdfViewer","signTabShowDefOptVal","appendSignTabShowOpt","addUndoRedoAct","oldData","newData","CREATE_FIELD_ACTION","REMOVE_FIELD_ACTION","action","old","new","buildDVOptsInfo","displayText","variable","buildSignTabShowOpt","Options","buildFieldUserInfo","fieldUserInfo","userUUID","convertUserListToSelectOptions","buildFieldformerList","ownerDom","userFieldInfo","isFormer","fieldListDom","fieldKeys","listDom","listItemDom","listItemSpanDom","displayUserName","fieldKey","userField","listItemDom2","listItemSpanDom2","calcFieldPostion","isImport","viewBBox","fieldPageNo","viewport","_pages","viewportXY","convertToViewportPoint","viewportXY2","pageOffSet","computePageOffset","newX","newY","newX2","newY2","pageBorderWidth","getPageBorderWidth","newW","newH","calcTemplateBoundary","objectWidth","objectHeight","viewerBoundingRect","pgRect","getPageBoundingClientRect","changeFieldPosition","newMatrix","donotUndoRedo","childRect","fieldGlobalMatrix","globalMatrix","childRectBBox","x1","y1","x2","y2","matrix","toTransformString","getFieldJsonData","updateFieldPoint","changeFreeTransform","FIELD_ATTR_CHANGE_ACTION","changeFieldValueEvent","targetNode","oldDataArr","newDataArr","idVal","dvText","getDvTextValue","curScale","currentScale","refreshformerList","validateSignOptions","selectUserList","actionName","GROUP_ATTR_CHANGE_ACTION","GROUP_ATTR_OWNER_CHANGE_ACTION","signField","useDrawSignInput","useImageSignInput","useRegSignInput","hasHideClass","isShowResizeHandler","unplug","snap","rotate","attrs","stroke","subjectBBox","size","draw","boundary","ft2","events","fieldFtEvent","setOpts","changeGroupBoxFreeTransform","tempGroupBox","ft","tmpGroupFtEvent","checkTemplateFieldData","usrKeyIdx","pagesCount","keyIdx","svgRect","TEMPLATE_PDF_VIEWER_CONTAINER","clearSelectedTool","toolElement","EDITOR_COMPONENT_CLASS","getPageElement","bodyElt","optionList","usrInfo","copyObject","selectedNode","attrPanelNode","idListAttr","createDragOverGroup","border","hideFieldAttribute","tempGNew","items","MAIN_GROUP_NAME","selectItemArray","mybounds","isBBoxIntersect","showFieldListAttribute","createField","mousePageX","mousePageY","diffMatrix","invert","createFieldObject","getPdfPageFromSvgPos","ost","removeDragOverGroup","groupBBox","pdfPoision","convertToPdfPoint","pdfPoision2","pageNum","generateFieldId","currentPageNumber","createTemplateRect","templateLayer","TEMPLATE_LAYER_NAME","templateRect","TEMPLATE_LAYER_RECT_NAME","getFieldSize","background","templateMouseMoveEvent","templateMouseUpEvent","dragendFunc","stopPropagation","dragmoveFunc","dx","dy","xoffset","yoffset","dragstartFunc","nodeName","dragStop","srcElement","obj1","br","mainCavnasMatrix","gragBoxX","gragBoxY","exportFieldData","templateTitle","templateData","userInfo","templateDataOwner","templateDataPage","fieldDeleteBtnClicked","removeSelectedField","eventName","getFieldIdFromGroupNode","fieldRepositioning","fieldRect","fieldSvg","oldW","newRect","fieldSvgText","typeList","maxNoStr","maxNo","typeIdx","objNoStr","objNo","getCreateFieldDefaultWidth","dvOpts","getFieldFromJson","fieldGorup","pageNumber","pgNode","pageComputedStyle","borderTopStr","borderLeftStr","borderBottomStr","borderRightStr","borderTopWidth","borderLeftWidth","borderBottomWidth","borderRightWidth","currentHeightSum","pageHeight","hideAllResizeHandles","deleteBtnNode","hideTemplateLayer","importFieldData","owner","replaceFieldData","keycheck","keyCode","which","ctrlKey","redoAction","undoAction","pasteObject","fieldIdList","fieldJsonData","copyField1","newId","replaceFieldStringData","GROUP_REMOVE_ACTION","removeDragGroupField","tempGOld","hideHandles","chds","usrFieldData","layerDiv","tempGMatrix","replaceData","field1","selectedFieldGroup","idArray","selectedItem","removeTemplateRect","resetTool","userKey","childNodes","childUserKey","selectTool","fieldCenterY","showCommonFieldListAttribute","dragOverBBox","commonFieldType","sortFieldsAlign","tempGBox","selectedItems","sortFieldsLeftAlign","sortFieldsHCenterAlign","sortFieldsRightAlign","sortFieldsTopAlign","sortFieldsVCenterAlign","sortFieldsBottomAlign","sortFieldsVRegularIntervalAlign","sortFieldsHRegularIntervalAlign","cx","firstItem","sort","childRectA","childRectB","lastItem","firstItemBBox","lastItemBBox","totalInterval","interval","beforeX2","childRect2","MAX_VALUE","cy","beforeY2","templateInit","zIndex","viewer","drag","asteriskLayer","target1","target2","offsetX","offsetY","ox","oy","translateX","translateY","pageRect","templateResize","groups","oldPdfX","oldPdfX2","oldPdfY","oldPdfY2","toFixed","USE_ONLY_CSS_ZOOM","TEXT_LAYER_MODE","DEFAULT_SCALE_DELTA","initDocument","pdfFileUrl","importData","langs","pdfContainer","pdfjsViewer","EventBus","PDFViewer","useOnlyCssZoom","textLayerMode","changeLayerSize","pdfjsLib","getDocument","cMapUrl","cMapPacked","pdfDocument","getData","setDocument","oldvalue","pageViewsReady","clearcheck","setInterval","reject","clearInterval","checkPageViewsReady","documentZoomOut","documentZoomIn","hideShowSidePanel","onclick","fieldSelectTool","sortFieldAligLeft","sortFieldAligHCenter","sortFieldAligRight","sortFieldAligTop","sortFieldAligVCenter","sortFieldAligBottom","showScaleSelector","getJsonData","releaseTemplate","targetElBtn","targetElPanel","changeTemplateLocale","changeTranslatorFileLocation","lcation","copyField","pasteField","pageElement","div","currentStyle","marginHeight","marginTop","marginBottom","paddingHeight","paddingBottom","borderHeight","calcPageHeight","setScaleValueText","closest","selectValue","targetBbox","scaleContainer","scaleSelect","hasClass"],"sourceRoot":""}