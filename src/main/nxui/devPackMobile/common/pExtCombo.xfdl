<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="pExtCombo" width="395" height="213" onload="pExtCombo_onload" ontimer="pExtCombo_ontimer" titletext="팝업콤보">
    <Layouts>
      <Layout height="213" mobileorientation="portrait" width="395">
        <Button id="btnClose" taborder="0" text="완료" top="10" width="67" height="50" right="10" bottom="" left="" onclick="btnClose_onclick"/>
        <Div id="divList" taborder="2" text="Div00" left="10" top="65" width="" height="" right="10" bottom="8">
          <Layouts>
            <Layout>
              <Grid id="grdComboList" taborder="1" left="0" top="0" width="" height="" right="3" bottom="0" autoenter="select" autofittype="col" oncellclick="grdComboList_oncellclick" onkillfocus="divList_grdComboList_onkillfocus" onsetfocus="divList_grdComboList_onsetfocus">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="362"/>
                    </Columns>
                    <Rows>
                      <Row size="54"/>
                    </Rows>
                    <Band id="body">
                      <Cell/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </Div>
        <Static id="stcTitle" taborder="3" left="15" top="10" width="294" height="50" right="" bottom=""/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsCopy"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  컨설팅 표준화 작업
*  @MenuPath    cmmM > pExtCombo(공통 팝업달력)
*  @FileName 	pExtCombo.xfdl 
*  @Creator 	mobile_consulting
*  @CreateDate 	2017.11.28
*  @Desction    월/기간 달력
************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  2017.11.28     	mobile_consulting		 	최초 생성 
*******************************************************************************
*/

/************************************************************************************************
 * FORM 변수 선언 영역
 ************************************************************************************************/
// fv json구조를 변경하지 마세요,
//    항목추가는 가능합니다.
this.fv = {};
	
/***********************************************************************************************
* FORM EVENT 영역(onload)
/***********************************************************************************************/	
this.pExtCombo_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
// 	this.divList.vscrollbar.set_width(1);
// 	this.divList.set_scrollbars("none");
//	this.divList.form.grdComboList.vscrollbar.set_width(1);
	this.fv = {};
	this.set_titletext("타이틀");
	// Dataset Object
	this.fv.Data = this.getOwnerFrame().data;
	this.dsCopy.set_enableevent(false);
	this.dsCopy.copyData(this.fv.Data);
	this.dsCopy.set_enableevent(true);
	// Dataset Column Info String
	this.fv.ColCd = this.getOwnerFrame().cdCol;
	this.fv.ColNm = this.getOwnerFrame().nmCol;
	this.fv.combo = this.getOwnerFrame().objcombo;
	this.fv.text = this.getOwnerFrame().sText;
	this.fv.frame = this.getOwnerFrame().name;
	this.fv.nUnitItemHeight = this.getOwnerFrame().nUnitItemHeight;
	this.fv.nFullDispCount = this.getOwnerFrame().nFullDispCount;
		
	if (this.fv.text != "")
	{
    
    trace("========"+ this.fv.text +"===========");
		this.stcTitle.set_text(this.fv.text);
		this.stcTitle.set_visible(true);
	}
	//for(var k in this.fv) trace("-->"+k +"::"+this.fv[k]);
	if (!this.fv.Data) this.close("");
	
	this.fnResizeGrid(this.fv);
	//this.setTimer(0,200);
}


this.pExtCombo_ontimer = function(obj:Form, e:nexacro.TimerEventInfo)
{
	this.killTimer(e.timerid);
	if (e.timerid == 0)
	{
		this.dsCopy.set_rowposition(0);	//접근성 모드에서 로우포지션이 아래에 있음
	}
	else if (e.timerid == 1)
	{
		this.close("");
	}
}

 /************************************************************************************************
 * 사용자 FUNCTION 영역
 ************************************************************************************************/
this.fnResizeGrid = function(objInfo)
{
	this.divList.form.grdComboList.set_binddataset("dsCopy");
	this.divList.form.grdComboList.setCellProperty("Body",0,"text","bind:"+objInfo.ColNm);
	//trace(this.dsCopy.rowcount*this.fv.nUnitItemHeight);
	//trace(this.divList.height);
	var rtn = this.dsCopy.rowcount*this.fv.nUnitItemHeight+parseInt(3,10);
	this.divList.form.grdComboList.setOffsetHeight(rtn);

	this.divList.form.resetScroll();
	this.resetScroll();

	var objCombo = objInfo.combo;
	var val = objCombo.value;
	var nIndex = objCombo.index;
	var nRow = this.dsCopy.findRow(objInfo.ColCd , val);

	if (nIndex>-1) 
	{
		this.dsCopy.set_rowposition(nRow );
		this.divList.form.vscrollbar.set_pos((nRow-1)*this.fv.nUnitItemHeight);
		
	}
}
this.fnCallFrameResize = function()
{
	var cf = this.getOwnerFrame();
	var npHeight = nexacro.getApplication().mainframe.getOffsetWidth();
	var npWidth = nexacro.getApplication().mainframe.getOffsetHeight();
	
	var nWidth = npWidth-100;
	var nFullDispCount = parseInt((npHeight-75)/this.fv.nUnitItemHeight);
	var nHeight = this.fv.nUnitItemHeight*(this.dsCopy.rowcount>nFullDispCount?nFullDispCount:this.dsCopy.rowcount)+75 ;
	
	var nLeft = 50;
	var nTop = (npHeight - nHeight)/2;	
	cf.move(nLeft,nTop,nWidth,nHeight);
}
this._old_fnResizeGrid = function(objInfo)
{
	this.divList.form.grdComboList.set_binddataset("dsCopy");
	this.divList.form.grdComboList.setCellProperty("Body",0,"text","bind:"+objInfo.ColNm);
	
	if (this.dsCopy.rowcount>5)
		this.divList.setOffsetHeight(5*this.fv.nUnitItemHeight+4);
	else
		this.divList.setOffsetHeight(this.dsCopy.rowcount*this.fv.nUnitItemHeight+4);
		
	this.divList.form.grdComboList.setOffsetHeight(this.dsCopy.rowcount*this.fv.nUnitItemHeight);

	this.divList.form.resetScroll();
	this.resetScroll();

	var objCombo = objInfo.combo;
	var val = objCombo.value;
	var nIndex = objCombo.index;
	var nRow = this.dsCopy.findRow(objInfo.ColCd , val);

	if (nIndex>-1) 
	{
		this.dsCopy.set_rowposition(nRow );
		if ( this.dsCopy.rowcount<5 )
		{}
		else if (nRow>4)
			this.divList.vscrollbar.form.set_pos((nRow-1)*this.fv.nUnitItemHeight);
		
	}
}
 /************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
 ************************************************************************************************/
this.btnClose_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.close("");
}

this.grdComboList_oncellclick = function(obj:Grid, e:nexacro.GridClickEventInfo)
{
	// post값을 세팅해서 ExtCombo로 넘기는 용도
	this.fv.value = this.dsCopy.getColumn(e.row,this.fv.ColCd);
	this.fv.text = this.dsCopy.getColumn(e.row,this.fv.ColNm);
	this.fv.index = this.dsCopy.rowposition;
	
	var objCombo = this.fv.combo;
	
	// set_item
	// 콤보에 값을 세팅하고 리스트팝업을 닫는다.
	objCombo.set_item(this.fv);
	
	// 접근성시 오류로 timer설정하여 팝업종료함.
	if (nexacro.getApplication().enableaccessibility)
	{
		this.setTimer(1,200);
	}
	else
	{
		this.close("");
	}
}


this.divList_grdComboList_onsetfocus = function(obj:Grid, e:nexacro.SetFocusEventInfo)
{
	//trace("divList_grdComboList_onsetfocus");
	this.divList.form.grdComboList.set_useselcolor(true);
}

this.divList_grdComboList_onkillfocus = function(obj:Grid, e:nexacro.KillFocusEventInfo)
{
	//trace("divList_grdComboList_onkillfocus");
	this.divList.form.grdComboList.set_useselcolor(false);
}
]]></Script>
  </Form>
</FDL>
