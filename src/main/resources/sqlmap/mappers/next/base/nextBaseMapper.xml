<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nextBaseMapper">

<select id="selectCompanyList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT A.COMPANY_CODE,
		   A.TMP_FLAG,
		   A.COMPANY_NAME,
		   A.L_CATEGORY,
		   A.CEO_NAME,
		   A.POST_NO,
		   CONCAT(IFNULL(A.POST_ADDR, ''), ' ', IFNULL(A.DETAIL_ADDR, '')) AS ADDR,
		   A.CLIENT_FLAG,
		   A.COMPANY_FLAG,
		   (SELECT COUNT(*)
			FROM SALES_PROJECT_LIST PL
			JOIN SALES_COMPANY_LIST CL ON (CL.COMPANY_CODE = PL.CLIENT_CODE AND CL.DELETE_FLAG = '0')
			WHERE PL.DELETE_FLAG = '0'
			AND PL.PROJECT_CODE IN (SELECT PL.PROJECT_CODE
									FROM SALES_CONTRACT_LIST CL
									JOIN SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0')
									WHERE CL.CONTRACT_STATUS = '3'
									AND CL.DELETE_FLAG = '0'
									AND CL.CO_CD = #{CO_CD}
									AND PL.CLIENT_CODE = A.COMPANY_CODE
									UNION ALL
									SELECT PL.PROJECT_CODE
									FROM SALES_CONTRACT_LIST CL
									JOIN SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0')
									WHERE CL.CONTRACT_STATUS = '3'
									AND CL.DELETE_FLAG = '0'
									AND CL.CO_CD = #{CO_CD}
									AND CL.CONTRACT_MAIN = A.COMPANY_CODE)
		   ) AS PROJECT_CNT,
		   (SELECT COUNT(*)
			FROM SALES_PROJECT_LIST PL
			JOIN SALES_COMPANY_LIST CL ON (CL.COMPANY_CODE = PL.CLIENT_CODE AND CL.DELETE_FLAG = '0')
			WHERE PL.DELETE_FLAG = '0'
			AND PL.PROJECT_CODE IN (SELECT PL.PROJECT_CODE
									FROM SALES_CONTRACT_LIST CL
									JOIN SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0')
									WHERE CL.CONTRACT_STATUS != '3'
									AND CL.DELETE_FLAG = '0'
									AND CL.CO_CD = #{CO_CD}
									AND PL.CLIENT_CODE = A.COMPANY_CODE
									UNION ALL
									SELECT PL.PROJECT_CODE
									FROM SALES_CONTRACT_LIST CL
									JOIN SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0')
									WHERE CL.CONTRACT_STATUS != '3'
									AND CL.DELETE_FLAG = '0'
									AND CL.CO_CD = #{CO_CD}
									AND CL.CONTRACT_MAIN = A.COMPANY_CODE)
		   ) AS PRE_PROJECT_CNT,
		   (SELECT COUNT(*)
			FROM SALES_CONTRACT_LIST CL
			JOIN SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0')
			WHERE CL.CONTRACT_STATUS = '3'
			AND CL.DELETE_FLAG = '0'
			AND CL.CO_CD = #{CO_CD}
			AND CL.CONTRACT_MAIN = A.COMPANY_CODE
		   ) AS CONTRACT_CNT,
		   (SELECT COUNT(*)
			FROM SALES_PURCHASE_LIST PU
			JOIN SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = PU.PROJECT_CODE AND PL.DELETE_FLAG = '0')
			WHERE PU.DELETE_FLAG = '0'
			AND PU.CONTRACT_STATUS = '3'
			AND PU.CO_CD = #{CO_CD}
			AND PU.CONTRACT_MAIN = A.COMPANY_CODE
		   ) AS PURCHASE_CNT,
		   A.BLACKLIST_FLAG
	FROM SALES_COMPANY_LIST A
	WHERE A.DELETE_FLAG = '0'
	AND A.TMP_FLAG = #{TMP_CODE}
	<if test="SEARCH_TEXT != null and SEARCH_TEXT != '' ">
	  AND (A.COMPANY_NAME LIKE CONCAT('%', #{SEARCH_TEXT}, '%') OR A.TAG LIKE CONCAT('%', #{SEARCH_TEXT}, '%'))
	</if>
	<if test=' SEARCH_GB != null and SEARCH_GB != "" and SEARCH_GB == "CLIENT" '>
	  AND A.CLIENT_FLAG = '1'
	</if>
	<if test=' SEARCH_GB != null and SEARCH_GB != "" and SEARCH_GB == "COMPANY" '>
	  AND A.COMPANY_FLAG = '1'
	</if>
	<if test="BLACKLIST_FLAG != null and BLACKLIST_FLAG != '' ">
	  AND A.BLACKLIST_FLAG = #{BLACKLIST_FLAG}
	</if>
	<if test="L_CATEGORY != null and L_CATEGORY != '' ">
	  AND A.L_CATEGORY = #{L_CATEGORY}
	</if>
	ORDER BY A.COMPANY_NAME

</select>


<select id="selectDetailCompany" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  C.COMPANY_CODE,
			C.COMPANY_NAME,
			C.COMPANY_NAME_ENG,
			C.COMPANY_ABBREVIATION,
			C.TAG,
			C.CLIENT_FLAG,
			C.COMPANY_FLAG,
			C.TMP_FLAG,
			C.BLACKLIST_FLAG,
			C.TURNKEY_FLAG,
			(SELECT  COUNT(*)
			 FROM   (
				SELECT  EMP_NO
				FROM    SALES_PROJECT_SI_EMP PSE
				JOIN    SALES_CONTRACT_LIST CL ON (CL.CONTRACT_NO = PSE.CONTRACT_NO AND CL.DELETE_FLAG = '0')
				UNION
				SELECT  EMP_NO
				FROM    SALES_REQUEST_SI_STAFF_CONFIRM RSSC
				JOIN    SALES_REQUEST_SI_STAFF_DETAIL RSSD ON (RSSD.RSSD_SEQ = RSSC.RSSD_SEQ)
				JOIN    SALES_REQUEST_SI_STAFF RSS ON (RSS.RSS_SEQ = RSSD.RSSD_SEQ)
				JOIN    SALES_CONTRACT_LIST CL ON (CL.CONTRACT_NO = RSS.CONTRACT_NO AND CL.DELETE_FLAG = '0')
				UNION
				SELECT  EMP_NO
				FROM    SALES_PURCHASE_SI_DETAIL PSD
				JOIN    SALES_PURCHASE_LIST PU ON (PU.CONTRACT_NO_PURCHASE = PSD.CONTRACT_NO_PURCHASE AND PU.DELETE_FLAG = '0')
				JOIN    SALES_CONTRACT_LIST CL ON (CL.CONTRACT_NO = PU.CONTRACT_NO AND CL.DELETE_FLAG = '0')
				UNION
				SELECT  EMP_NO
				FROM    SALES_COSTSHEET_PURCHASE_SI CPS
				JOIN    SALES_CONTRACT_LIST CL ON (CL.CONTRACT_NO = CPS.CONTRACT_NO AND CL.DELETE_FLAG = '0')
			 ) A
			 WHERE EMP_NO = C.COMPANY_CODE) AS TURNKEY_CNT,
			C.NATION_CODE,
			C.BUSINESS_SCALE,
			C.L_CATEGORY,
			C.M_CATEGORY,
			C.COMPANY_REG_NO,
			C.CORPORATE_REG_NO,
			DATE_FORMAT(C.INCORPORATION_DATE, '%Y%m%d') AS INCORPORATION_DATE,
			C.CEO_NAME,
			C.CEO_PHONE,
			C.POST_NO,
			C.POST_ADDR,
			IFNULL(C.DETAIL_ADDR, '') AS DETAIL_ADDR,
			C.PHONE_NO,
			C.FAX_NO,
			C.BUSINESS_FORM,
			C.BUSINESS_KIND,
			C.PURCHASE_COMPANY_CODE,
			C.PRODUCT_FLAG,
			C.SI_FLAG,
			C.SOLUTION_FLAG,
			C.GOODS_FLAG,
			C.PARTNER_FLAG,
			C.PARTNER_KIND,
			C.COMPANY_STATE,
			C.COMPANY_KIND,
			C.BANK_CODE,
			C.ACCOUNT_NO,
			C.ACCOUNT_NAME,
			C.SI_VIEW_FLAG,
			C.COLLECTION_BOND_FLAG,
			C.CL_APPROVAL_EMP_NO,
			IFNULL(CAST(C.CL_ASSET AS SIGNED), 0) AS CL_ASSET,
			C.CL_EMP_NUMBER,
			DATE_FORMAT(C.CL_APPROVAL_DATE, '%Y%m%d') AS CL_APPROVAL_DATE,
			IFNULL(CAST(C.CL_CAPITAL AS SIGNED), 0) AS CL_CAPITAL,
			C.CL_OPINION,
			IFNULL(CAST(C.CL_PS AS SIGNED), 0) AS CL_PS,
			IFNULL(CAST(C.CL_ANNUAL_SALES AS SIGNED), 0) AS CL_ANNUAL_SALES,
			IFNULL(CAST(C.CL_SI AS SIGNED), 0) AS CL_SI,
			IFNULL(CAST(C.CL_NET_INCOME AS SIGNED), 0) AS CL_NET_INCOME,
			C.CL_EVALUATION,
			C.CL_LISTED_FLAG,
			C.CL_EXCEPTION_CODE,
			C.CL_CURRENT_ASSETS,
			C.CL_PROFITABILITY,
			C.CL_SAFETY,
			C.CL_ADD_SCORE1,
			C.CL_ADD_SCORE2,
			C.CL_ADD_SCORE3,
			C.REMARKS,
			C.CONTRACT_REMARKS,
			C.PURCHASE_REMARKS,
			C.DELETE_FLAG,
			IFNULL(C.SUBSIDIARY_COMPANY_FLAG, '0') AS SUBSIDIARY_COMPANY_FLAG,
			<!--  DBO.GET_COMPANY_SALES_EMP(C.COMPANY_CODE, #{LANGUAGE}) AS COMPANY_SALES_EMP,  -->
			CAST(IFNULL(C.CL_PS, 0) AS SIGNED) - IFNULL(CL.PAST_NOT_BILL_AND_RECV, 0) AS REST,
			IFNULL(VED.EMP_NM, 0) AS CL_APPROVAL_EMP_NAME
	FROM    SALES_COMPANY_LIST C
	LEFT JOIN T_SYTM_USER VED ON C.CL_APPROVAL_EMP_NO = VED.EMP_NO AND VED.MAIN_DEPT_FLAG = '1'
	LEFT JOIN (
		SELECT CL.CONTRACT_MAIN,
			   SUM(IFNULL(CAST(CB.TAX_PRICE AS SIGNED), 0))
			   - SUM(CASE
					   WHEN (IFNULL(CAST(CB.TAX_PRICE AS SIGNED), 0) 
							 - IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0)
							 - IFNULL(CAST(CB.VAT_PRICE AS SIGNED), 0)) > 0
					   THEN ROUND(IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0) / 1.1, 1)
					   WHEN IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0) > 0
					   THEN IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0) - IFNULL(CAST(CB.VAT_PRICE AS SIGNED), 0)
					   ELSE 0
					 END) AS PAST_NOT_BILL_AND_RECV
		FROM SALES_CONTRACT_LIST CL
		LEFT JOIN SALES_CONTRACT_BILL CB ON CL.CONTRACT_NO = CB.CONTRACT_NO
		AND CL.DELETE_FLAG = '0'
		WHERE CL.CO_CD = #{CO_CD}
		AND CB.BILL_EXCEPT_FLAG = '0'
		GROUP BY CL.CONTRACT_MAIN
	) CL ON (C.COMPANY_CODE = CL.CONTRACT_MAIN)
	LEFT JOIN SALES_COMPANY_LIST CJ ON (C.COMPANY_CODE = CJ.COMPANY_CODE)
	WHERE C.COMPANY_CODE = #{COMPANY_CODE}
</select>

<select id="selectDetailAddressBook" parameterType="java.util.List" resultType="java.util.Map">
SELECT  CA.CA_SEQ,
        CA.COMPANY_CODE,
        CL.COMPANY_NAME,
        CA.EMP_NAME,
        CA.DEPT_NAME,
        CA.GRADE_CODE,
        CA.ROLE_CODE,
        CA.H_PHONE_NO,
        CA.O_PHONE_NO,
        CA.HOLD_OFFICE,
        CA.EMAIL,
        CA.ETAX_FLAG,
        CA.ORDER_FLAG,
        CA.REMARKS,
        IFNULL(CA.CHGE_DTTM, CA.INPT_DTTM) AS UPDATE_DATE,
        IFNULL(CA.CHGE_ID, CA.INPT_ID) AS UPDATE_EMP_NO,
        VE.EMP_NM AS UPDATE_EMP_NAME,
        CA.HISTORY
FROM    SALES_COMPANY_ADDRESSBOOK CA
JOIN    SALES_COMPANY_LIST CL ON (CL.COMPANY_CODE = CA.COMPANY_CODE)
LEFT JOIN T_SYTM_USER VE ON (VE.EMP_NO = IFNULL(CA.CHGE_ID, CA.INPT_ID))
WHERE   CA.COMPANY_CODE = #{COMPANY_CODE}
ORDER BY CA.HOLD_OFFICE,
         CA.EMP_NAME,
         CA.INPT_DTTM DESC
</select>

<select id="selectDetailSalesEmp" parameterType="java.util.List" resultType="java.util.Map">
SELECT  EMP_NO,
        DEPT_CD,
        EMP_NAME,
        SUM(SS_FLAG) AS SS_FLAG /* 영업지원 권한 */
FROM   (
    SELECT  SG.EMP_NO,
            SG.DEPT_CD,
            VE.EMP_NM AS EMP_NAME,
            0 AS SS_FLAG
    FROM    SALES_GOAL SG
    JOIN    T_SYTM_USER VE ON SG.EMP_NO = VE.EMP_NO
    WHERE   SG.YEAR = DATE_FORMAT(NOW(), '%Y')
    GROUP BY SG.EMP_NO, SG.DEPT_CD, SG.YEAR, VE.EMP_NM

    UNION

    SELECT  VE.EMP_NO,
            VE.DEPT_CD,
            VE.EMP_NM AS EMP_NAME,
            1 AS SS_FLAG
    FROM    AUTHORITY_USER AU
    JOIN    T_SYTM_USER VE ON VE.MAIN_DEPT_FLAG = '1'
                           AND VE.MSG_FLAG = '1'
                           AND (
                                (AU.AUTH_USER = 'DEPT' AND AU.USER_CD = VE.DEPT_CD)
                                OR (AU.AUTH_USER = 'EMP' AND AU.USER_CD = VE.EMP_NO)
                                OR (AU.AUTH_USER = 'DUTY' AND AU.USER_CD = VE.DUTY_CODE)
                                OR (AU.AUTH_USER = 'GRADE' AND AU.USER_CD = VE.GRADE_CODE)
                            )
    WHERE   AU.ATM_SEQ = 166
) A
GROUP BY EMP_NO, DEPT_CD, EMP_NAME
ORDER BY SS_FLAG, DEPT_CD, EMP_NAME;

</select>

<select id="selectDetailContractList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  
		CASE 
			WHEN PL.CLIENT_CODE = #{COMPANY_CODE} THEN '1'
			ELSE '0'
		END AS CLIENT_FLAG,
		PL.CLIENT_CODE,
		CM.COMPANY_NAME AS CLIENT_NAME,
		CASE 
			WHEN CL.CONTRACT_MAIN = #{COMPANY_CODE} THEN '1'
			ELSE '0'
		END AS CONTRACT_MAIN_FLAG,
		CL.CONTRACT_MAIN,
		CM1.COMPANY_NAME AS CONTRACT_MAIN_NAME,
		PL.PROJECT_CODE,
		PL.PROJECT_NAME,
		CL.CONTRACT_NO,
		CL.CONTRACT_TYPE,
		CD.SSC_CD_KORN_NM AS CONTRACT_TYPE_NAME,
		CL.CONTRACT_NAME,
		CL.CONTRACT_DATE,
		VCR.CONTRACT_PRICE,
		CL.PRODUCT_CODE,
		PD.PRODUCT_NAME,
		VE.EMP_NM AS EMP_NAME
	FROM SALES_CONTRACT_LIST CL
	JOIN SALES_PROJECT_LIST PL ON PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0'
	JOIN SALES_COMPANY_LIST CM ON CM.COMPANY_CODE = PL.CLIENT_CODE
	JOIN SALES_COMPANY_LIST CM1 ON CM1.COMPANY_CODE = CL.CONTRACT_MAIN
	JOIN T_SYTM_CODE CD ON CD.HCL_CD = 'CONTRACT_TYPE' AND CD.SSC_CD = CL.CONTRACT_TYPE
	JOIN T_SYTM_USER VE ON VE.EMP_NO = CL.SALES_EMP_NO
	LEFT JOIN V_CONTRACT_PRICE VCR ON VCR.CONTRACT_NO = CL.CONTRACT_NO
	LEFT JOIN SALES_PRODUCT_LIST PD ON PD.PRODUCT_CODE = CL.PRODUCT_CODE
	WHERE CL.CONTRACT_STATUS = '3'
	AND CL.DELETE_FLAG = '0'
	AND (CL.CONTRACT_MAIN = #{COMPANY_CODE} OR PL.CLIENT_CODE = #{COMPANY_CODE})
	AND CL.CO_CD = #{CO_CD}
	ORDER BY CL.CONTRACT_DATE DESC

</select>

<select id="selectDetailPurchaseList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  
	    CASE 
	        WHEN PL.CLIENT_CODE = #{COMPANY_CODE} THEN '1'
	        ELSE '0'
	    END AS CLIENT_FLAG,
	    PL.CLIENT_CODE,
	    CM.COMPANY_NAME AS CLIENT_NAME,
	    CASE 
	        WHEN PU.CONTRACT_MAIN = #{COMPANY_CODE} THEN '1'
	        ELSE '0'
	    END AS CONTRACT_MAIN_FLAG,
	    PU.CONTRACT_MAIN,
	    CM1.COMPANY_NAME AS CONTRACT_MAIN_NAME,
	    PL.PROJECT_CODE,
	    PL.PROJECT_NAME,
	    PU.CONTRACT_NO_PURCHASE,
	    PU.CONTRACT_TYPE,
	    CD.SSC_CD_KORN_NM AS CONTRACT_TYPE_NAME,
	    PU.CONTRACT_NAME,
	    PU.CONTRACT_DATE,
	    VCR.CONTRACT_PURCHASE_PRICE AS CONTRACT_PRICE,
	    CL.PRODUCT_CODE,
	    <!-- 
	    CASE 
	        WHEN PU.CONTRACT_TYPE = 'S' THEN NEXTp.DBO.GET_PURCHASE_SI_EMP(PU.CONTRACT_NO_PURCHASE)
	        ELSE NEXTp.DBO.GET_PURCHASE_PRODUCT(PU.CONTRACT_NO_PURCHASE)
	    END AS PRODUCT_NAME,
	     -->
	    VE.EMP_NM AS EMP_NAME
	FROM SALES_PURCHASE_LIST PU
	JOIN SALES_PROJECT_LIST PL ON PL.PROJECT_CODE = PU.PROJECT_CODE AND PL.DELETE_FLAG = '0'
	JOIN SALES_COMPANY_LIST CM ON CM.COMPANY_CODE = PL.CLIENT_CODE
	JOIN SALES_COMPANY_LIST CM1 ON CM1.COMPANY_CODE = PU.CONTRACT_MAIN
	LEFT JOIN V_CONTRACT_PRICE_PURCHASE VCR ON VCR.CONTRACT_NO_PURCHASE = PU.CONTRACT_NO_PURCHASE
	LEFT JOIN T_SYTM_CODE CD ON CD.HCL_CD = 'CONTRACT_TYPE' AND CD.SSC_CD = PU.CONTRACT_TYPE
	LEFT JOIN SALES_CONTRACT_LIST CL ON CL.CONTRACT_NO = PU.CONTRACT_NO AND CL.DELETE_FLAG = '0' AND CL.CO_CD = #{CO_CD}
	LEFT JOIN SALES_PRODUCT_LIST PD ON PD.PRODUCT_CODE = CL.PRODUCT_CODE
	LEFT JOIN T_SYTM_USER VE ON VE.EMP_NO = CL.SALES_EMP_NO
	WHERE PU.CONTRACT_STATUS = '3'
	AND PU.DELETE_FLAG = '0'
	AND (PU.CONTRACT_MAIN = #{COMPANY_CODE} OR PL.CLIENT_CODE = #{COMPANY_CODE})
	AND PU.CO_CD = #{CO_CD}
	ORDER BY PU.CONTRACT_DATE DESC
</select>

<select id="selectDetailContractSum" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  
	    MIN(CL.CONTRACT_DATE) AS MIN_CONTRACT_DATE,      /* 최초거래일 */
	    MAX(CL.CONTRACT_DATE) AS MAX_CONTRACT_DATE,      /* 마지막거래일 */
	    MAX(CL.CONTRACT_PRICE) AS MAX_CONTRACT_PRICE,    /* 최대계약금액 */
	    AVG(AVG_BILL_DATE) AS AVG_BILL_DATE,             /* 수금주기 */
	    COUNT(CL.CONTRACT_NO) AS CNT
	FROM (
	    SELECT  
	        CL.CONTRACT_NO,
	        CL.CONTRACT_TYPE,
	        CL.CONTRACT_DATE,
	        VCR.CONTRACT_PRICE,
	        AVG(DATEDIFF(CB.BILL_DATE, CB.TAX_DATE)) AS AVG_BILL_DATE
	    FROM    
	        SALES_CONTRACT_LIST CL
	    JOIN    
	        SALES_PROJECT_LIST PL ON PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0'
	    LEFT JOIN   
	        SALES_CONTRACT_BILL CB ON CB.CONTRACT_NO = CL.CONTRACT_NO
	    LEFT JOIN   
	        V_CONTRACT_PRICE VCR ON VCR.CONTRACT_NO = CL.CONTRACT_NO
	    WHERE   
	        CL.CONTRACT_STATUS = '3'
	        AND CL.DELETE_FLAG = '0'
	        AND CL.CONTRACT_MAIN = #{COMPANY_CODE}
	        AND CL.CO_CD = #{CO_CD}
	    GROUP BY 
	        CL.CONTRACT_NO,
	        CL.CONTRACT_TYPE,
	        CL.CONTRACT_DATE,
	        VCR.CONTRACT_PRICE
	) AS CL

</select>

<select id="selectDetailContractTotal" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  
	    CL.CONTRACT_TYPE,
	    CD.SSC_CD_KORN_NM AS CONTRACT_TYPE_NAME,
	    SUM(CL.CONTRACT_PRICE) AS CONTRACT_PRICE_SUM,
	    COUNT(CL.CONTRACT_NO) AS CONTRACT_CNT,
	    SUM(CL1.CONTRACT_PRICE) AS CONTRACT_PRICE_SUM_1,
	    COUNT(CL1.CONTRACT_NO) AS CONTRACT_CNT_1
	FROM    
	    T_SYTM_CODE CD
	LEFT JOIN (
	    SELECT  
	        CL.CONTRACT_NO,
	        CL.CONTRACT_TYPE,
	        CL.CONTRACT_DATE,
	        VCR.CONTRACT_PRICE,
	        AVG(DATEDIFF(CB.BILL_DATE, CB.TAX_DATE)) AS AVG_BILL_DATE
	    FROM    
	        SALES_CONTRACT_LIST CL
	    JOIN    
	        SALES_PROJECT_LIST PL ON PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0'
	    LEFT JOIN   
	        SALES_CONTRACT_BILL CB ON CB.CONTRACT_NO = CL.CONTRACT_NO
	    LEFT JOIN   
	        V_CONTRACT_PRICE VCR ON VCR.CONTRACT_NO = CL.CONTRACT_NO
	    WHERE   
	        CL.CONTRACT_STATUS = '3'
	        AND CL.DELETE_FLAG = '0'
	        AND CL.CONTRACT_MAIN = #{COMPANY_CODE}
	        AND CL.CO_CD = #{CO_CD}
	    GROUP BY 
	        CL.CONTRACT_NO,
	        CL.CONTRACT_TYPE,
	        CL.CONTRACT_DATE,
	        VCR.CONTRACT_PRICE
	) CL ON CD.SSC_CD = CL.CONTRACT_TYPE
	LEFT JOIN (
	    SELECT  
	        CL.CONTRACT_NO,
	        CL.CONTRACT_TYPE,
	        CL.CONTRACT_DATE,
	        VCR.CONTRACT_PRICE,
	        AVG(DATEDIFF(CB.BILL_DATE, CB.TAX_DATE)) AS AVG_BILL_DATE
	    FROM    
	        SALES_CONTRACT_LIST CL
	    JOIN    
	        SALES_PROJECT_LIST PL ON PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0'
	    LEFT JOIN   
	        SALES_CONTRACT_BILL CB ON CB.CONTRACT_NO = CL.CONTRACT_NO
	    LEFT JOIN   
	        V_CONTRACT_PRICE VCR ON VCR.CONTRACT_NO = CL.CONTRACT_NO
	    WHERE   
	        CL.CONTRACT_STATUS = '3'
	        AND CL.DELETE_FLAG = '0'
	        AND CL.CONTRACT_DATE BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE()
	        AND CL.CONTRACT_MAIN = #{COMPANY_CODE}
	        AND CL.CO_CD = #{CO_CD}
	    GROUP BY 
	        CL.CONTRACT_NO,
	        CL.CONTRACT_TYPE,
	        CL.CONTRACT_DATE,
	        VCR.CONTRACT_PRICE
	) CL1 ON CL1.CONTRACT_TYPE = CD.SSC_CD AND CL1.CONTRACT_NO = CL.CONTRACT_NO
	WHERE   
	    CD.HCL_CD = 'CONTRACT_TYPE'
	    AND CD.GRP_CD_1 = '1'
	    AND CL.CONTRACT_TYPE IS NOT NULL
	GROUP BY 
	    CL.CONTRACT_TYPE,
	    CD.SSC_CD_KORN_NM,
	    CD.SORT_ORDR
	ORDER BY CD.SORT_ORDR

</select>

<select id="selectDetailPurchaseSum" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  
	    MIN(PL.CONTRACT_DATE) AS MIN_CONTRACT_DATE,      /* 최초거래일 */
	    MAX(PL.CONTRACT_DATE) AS MAX_CONTRACT_DATE,      /* 마지막거래일 */
	    MAX(PL.CONTRACT_PRICE) AS MAX_CONTRACT_PRICE,    /* 최대계약금액 */
	    AVG(AVG_PAY_DATE) AS AVG_PAY_DATE,               /* 지급주기 */
	    COUNT(PL.CONTRACT_NO_PURCHASE) AS CNT
	FROM (
	    SELECT  
	        PU.CONTRACT_NO_PURCHASE,
	        PU.CONTRACT_TYPE,
	        PU.CONTRACT_DATE,
	        VCR.CONTRACT_PURCHASE_PRICE AS CONTRACT_PRICE,
	        AVG(DATEDIFF(CB.PAY_DATE, CB.TAX_DATE)) AS AVG_PAY_DATE
	    FROM    
	        SALES_PURCHASE_LIST PU
	    JOIN    
	         SALES_PROJECT_LIST PL ON PL.PROJECT_CODE = PU.PROJECT_CODE AND PL.DELETE_FLAG = '0'
	    LEFT JOIN   
	         SALES_PURCHASE_PAY CB ON CB.CONTRACT_NO_PURCHASE = PU.CONTRACT_NO_PURCHASE
	    LEFT JOIN   
	        V_CONTRACT_PRICE_PURCHASE VCR ON VCR.CONTRACT_NO_PURCHASE = PU.CONTRACT_NO_PURCHASE
	    WHERE   
	        PU.DELETE_FLAG = '0'
	        AND PU.CONTRACT_MAIN = #{COMPANY_CODE}
	        AND PU.CO_CD = #{CO_CD}
	    GROUP BY 
	        PU.CONTRACT_NO_PURCHASE,
	        PU.CONTRACT_TYPE,
	        PU.CONTRACT_DATE,
	        VCR.CONTRACT_PURCHASE_PRICE
	) PL

</select>

<select id="selectDetailPurchaseTotal" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  
	    PL.CONTRACT_TYPE,
	    CD.SSC_CD_KORN_NM AS CONTRACT_TYPE_NAME,
	    SUM(PL.CONTRACT_PURCHASE_PRICE) AS CONTRACT_PRICE_SUM,
	    COUNT(PL.CONTRACT_NO_PURCHASE) AS CONTRACT_CNT,
	    SUM(PL1.CONTRACT_PURCHASE_PRICE) AS CONTRACT_PRICE_SUM_1,
	    COUNT(PL1.CONTRACT_NO_PURCHASE) AS CONTRACT_CNT_1
	FROM    
	    T_SYTM_CODE CD
	LEFT JOIN (
	    SELECT  
	        PU.CONTRACT_NO_PURCHASE,
	        PU.CONTRACT_TYPE,
	        PU.CONTRACT_DATE,
	        VCR.CONTRACT_PURCHASE_PRICE,
	        AVG(DATEDIFF(CB.PAY_DATE, CB.TAX_DATE)) AS AVG_PAY_DATE
	    FROM    
	        SALES_PURCHASE_LIST PU
	    JOIN    
	        SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = PU.PROJECT_CODE AND PL.DELETE_FLAG = '0')
	    LEFT JOIN   
	        SALES_PURCHASE_PAY CB ON (CB.CONTRACT_NO_PURCHASE = PU.CONTRACT_NO_PURCHASE)
	    LEFT JOIN   
	        V_CONTRACT_PRICE_PURCHASE VCR ON (VCR.CONTRACT_NO_PURCHASE = PU.CONTRACT_NO_PURCHASE)
	    WHERE   
	        PU.DELETE_FLAG = '0'
	        AND PU.CONTRACT_STATUS = '3'
	        AND PU.CONTRACT_MAIN = #{COMPANY_CODE}
	        AND PU.CO_CD = #{CO_CD}
	    GROUP BY 
	        PU.CONTRACT_NO_PURCHASE,
	        PU.CONTRACT_TYPE,
	        PU.CONTRACT_DATE,
	        VCR.CONTRACT_PURCHASE_PRICE
	) PL ON (CD.SSC_CD = PL.CONTRACT_TYPE)
	LEFT JOIN (
	    SELECT  
	        PU.CONTRACT_NO_PURCHASE,
	        PU.CONTRACT_TYPE,
	        PU.CONTRACT_DATE,
	        VCR.CONTRACT_PURCHASE_PRICE,
	        AVG(DATEDIFF(CB.PAY_DATE, CB.TAX_DATE)) AS AVG_PAY_DATE
	    FROM    
	        SALES_PURCHASE_LIST PU
	    JOIN    
	        SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = PU.PROJECT_CODE AND PL.DELETE_FLAG = '0')
	    LEFT JOIN   
	        SALES_PURCHASE_PAY CB ON (CB.CONTRACT_NO_PURCHASE = PU.CONTRACT_NO_PURCHASE)
	    LEFT JOIN   
	        V_CONTRACT_PRICE_PURCHASE VCR ON (VCR.CONTRACT_NO_PURCHASE = PU.CONTRACT_NO_PURCHASE)
	    WHERE   
	        PU.DELETE_FLAG = '0'
	        AND PU.CONTRACT_STATUS = '3'
	        AND PU.CONTRACT_DATE BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE()
	        AND PU.CONTRACT_MAIN = #{COMPANY_CODE}
	        AND PU.CO_CD = #{CO_CD}
	    GROUP BY 
	        PU.CONTRACT_NO_PURCHASE,
	        PU.CONTRACT_TYPE,
	        PU.CONTRACT_DATE,
	        VCR.CONTRACT_PURCHASE_PRICE
	) PL1 ON (PL1.CONTRACT_TYPE = CD.SSC_CD AND PL1.CONTRACT_NO_PURCHASE = PL.CONTRACT_NO_PURCHASE)
	WHERE   
	    CD.HCL_CD = 'CONTRACT_TYPE'
	    AND CD.GRP_CD_1 = '1'
	    AND PL.CONTRACT_TYPE IS NOT NULL
	GROUP BY 
	    PL.CONTRACT_TYPE,
	    CD.SSC_CD_KORN_NM,
	    CD.SORT_ORDR
	ORDER BY CD.SORT_ORDR

</select>

<select id="selectDetailEvaluate" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  
	    SUM(CASE A.KIND
	        WHEN 'CONTRACT_CNT' THEN A.CNT
	        ELSE 0
	    END) AS CONTRACT_CNT,
	    SUM(CASE A.KIND
	        WHEN 'UNRECV_CNT' THEN A.CNT
	        ELSE 0
	    END) AS UNRECV_CNT
	FROM (
	    SELECT  
	        'CONTRACT_CNT' AS KIND,
	        COUNT(*) AS CNT
	    FROM    
	        SALES_CONTRACT_LIST CL
	    JOIN    
	        SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0')
	    WHERE   
	        CL.CONTRACT_STATUS = '3'
	        AND CL.DELETE_FLAG = '0'
	        AND CL.CONTRACT_DATE BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND CURDATE()
	        AND CL.CONTRACT_MAIN = #{COMPANY_CODE}
	        AND CL.CO_CD = #{CO_CD}
	    
	    UNION ALL
	    
	    SELECT  
	        'UNRECV_CNT' AS KIND,
	        COUNT(*) AS CNT
	    FROM    
	        SALES_CONTRACT_BILL CB
	    JOIN    
	        SALES_CONTRACT_LIST CL ON (CL.CONTRACT_NO = CB.CONTRACT_NO AND CL.DELETE_FLAG = '0')
	    JOIN    
	        SALES_PROJECT_LIST PL ON (PL.PROJECT_CODE = CL.PROJECT_CODE AND PL.DELETE_FLAG = '0')
	    WHERE   
	        COALESCE(CB.BILL_EXCEPT_FLAG, '0') = '0'
	        AND (COALESCE(CB.TAX_PRICE, 0) + COALESCE(CB.VAT_PRICE, 0) - COALESCE(CB.BILL_PRICE, 0)) > 0
	        AND CB.TAX_DATE <![CDATA[<=]]> DATE_SUB(CURDATE(), INTERVAL 6 MONTH)
	        AND CL.CONTRACT_MAIN = #{COMPANY_CODE}
	        AND CL.CO_CD = #{CO_CD}
	) A

</select>

<select id="selectDetailAdminOpinion" parameterType="java.util.List" resultType="java.util.Map">
SELECT  
    COH.COH_SEQ,
    COH.COMPANY_CODE,
    COH.CL_OPINION,
    COH.SALES_EMP_NO,
    VE1.EMP_NM AS SALES_EMP_NAME,
    COH.REMARKS_REASON,
    COH.INPT_DTTM,
    COH.INPT_ID,
    VE2.EMP_NM AS INSERT_EMP_NAME
FROM    
    SALES_COMPANY_OPINION_HISTORY COH
JOIN    
    T_SYTM_USER VE1 ON (VE1.EMP_NO = COH.SALES_EMP_NO)
JOIN    
    T_SYTM_USER VE2 ON (VE2.EMP_NO = COH.INPT_ID)
WHERE   
    COH.COMPANY_CODE = #{COMPANY_CODE}
ORDER BY 
    COH.COH_SEQ DESC

</select>

<select id="selectDetailCredithistory" parameterType="java.util.List" resultType="java.util.Map">
SELECT  
    CLH.CLH_SEQ,
    CLH.COMPANY_CODE,
    DATE_FORMAT(CLH.EVALUATION_DATE, '%Y%m%d') AS EVALUATION_DATE, -- 날짜 포맷 변경
    CLH.YEAR,
    CLH.CREDIT_COMPANY,
    CD2.SSC_CD_KORN_NM AS CREDIT_COMPANY_NAME,
    CLH.CREDIT_LEVEL,
    CD1.SSC_CD_KORN_NM AS CREDIT_LEVEL_NAME,
    CLH.INPT_DTTM,
    CLH.INPT_ID,
    VE.EMP_NM AS INSERT_EMP_NAME
FROM    
    SALES_CREDIT_LEVEL_HISTORY CLH
LEFT JOIN    
   T_SYTM_CODE CD2 ON (CD2.HCL_CD = 'CREDIT_COMPANY' AND CD2.SSC_CD = CLH.CREDIT_COMPANY)
LEFT JOIN    
    T_SYTM_USER VE ON (VE.EMP_NO = CLH.INPT_ID)
LEFT JOIN 
    T_SYTM_CODE CD1 ON (CD1.HCL_CD = 'CREDIT_LEVEL' AND CD1.SSC_CD = CLH.CREDIT_LEVEL)
WHERE   
    CLH.COMPANY_CODE = #{COMPANY_CODE}
ORDER BY 
    CLH.INPT_DTTM DESC;

</select>

<select id="selectNewCompanyCode" parameterType="java.util.List" resultType="java.util.Map">
	SELECT CONCAT('Z', LPAD(CAST(A.CC AS CHAR), 7, '0')) AS NEW_COMPANY_CODE
	FROM ( 
		SELECT (MAX(CAST(RIGHT(COMPANY_CODE, 7) AS UNSIGNED)) + 1) AS CC
		FROM SALES_COMPANY_LIST
		WHERE COMPANY_CODE LIKE 'Z%'
	) A
</select>

<insert id="insertCompanyList" parameterType="java.util.Map">
	INSERT INTO SALES_COMPANY_LIST
	(
		COMPANY_CODE
		,COMPANY_NAME
		,COMPANY_NAME_JAP
		,COMPANY_NAME_ENG
		,COMPANY_ABBREVIATION
		,TAG
		,CLIENT_FLAG
		,COMPANY_FLAG
		,TMP_FLAG
		,BLACKLIST_FLAG
		,SI_VIEW_FLAG
		,TURNKEY_FLAG
		,NATION_CODE
		,BUSINESS_SCALE
		,L_CATEGORY
		,M_CATEGORY
		,COMPANY_REG_NO
		,CORPORATE_REG_NO
		,INCORPORATION_DATE
		,CEO_NAME
		,CEO_PHONE
		,POST_NO
		,POST_ADDR
		,DETAIL_ADDR
		,PHONE_NO
		,FAX_NO
		,BUSINESS_FORM
		,BUSINESS_KIND
		,PURCHASE_COMPANY_CODE
		,PRODUCT_FLAG
		,SI_FLAG
		,SOLUTION_FLAG
		,GOODS_FLAG
		,PARTNER_FLAG
		,PARTNER_KIND
		,COMPANY_STATE
		,COMPANY_KIND
		,BANK_CODE
		,ACCOUNT_NO
		,ACCOUNT_NAME
		,COLLECTION_BOND_FLAG
		,CL_APPROVAL_EMP_NO
		,CL_ASSET
		,CL_EMP_NUMBER
		,CL_APPROVAL_DATE
		,CL_CAPITAL
		,CL_OPINION
		,CL_PS
		,CL_ANNUAL_SALES
		,CL_SI
		,CL_NET_INCOME
		,CL_EVALUATION
		,CL_LISTED_FLAG
		,CL_EXCEPTION_CODE
		,CL_CURRENT_ASSETS
		,CL_PROFITABILITY
		,CL_SAFETY
		,CL_ADD_SCORE1
		,CL_ADD_SCORE2
		,CL_ADD_SCORE3
		,REMARKS
		,CONTRACT_REMARKS
		,PURCHASE_REMARKS
		<if test="DELETE_FLAG !=null and DELETE_FLAG != ''">
		,DELETE_FLAG
		</if>
		,SUBSIDIARY_COMPANY_FLAG
		,TRANS_TARGET
		,INPT_ID
		,INPT_IP
		,INPT_DTTM
		,CHGE_ID
		,CHGE_IP
		,CHGE_DTTM
	)
	VALUES
	(
		#{NEW_COMPANY_CD}
		,#{COMPANY_NAME}
		,#{COMPANY_NAME_JAP}
		,#{COMPANY_NAME_ENG}
		,#{COMPANY_ABBREVIATION}
		,#{TAG}
		,#{CLIENT_FLAG}
		,#{COMPANY_FLAG}
		,#{TMP_FLAG}
		,#{BLACKLIST_FLAG}
		,#{SI_VIEW_FLAG}
		,#{TURNKEY_FLAG}
		,#{NATION_CODE}
		,#{BUSINESS_SCALE}
		,#{L_CATEGORY}
		,#{M_CATEGORY}
		,#{COMPANY_REG_NO}
		,#{CORPORATE_REG_NO}
		,#{INCORPORATION_DATE}
		,#{CEO_NAME}
		,#{CEO_PHONE}
		,#{POST_NO}
		,#{POST_ADDR}
		,#{DETAIL_ADDR}
		,#{PHONE_NO}
		,#{FAX_NO}
		,#{BUSINESS_FORM}
		,#{BUSINESS_KIND}
		,
	    <choose>
	        <when test=' COMPANY_KIND == "0" or COMPANY_KIND == "1" '>
	            (SELECT MAX(CAST(SCL.PURCHASE_COMPANY_CODE AS UNSIGNED)) + 1
				   FROM SALES_COMPANY_LIST SCL
				  WHERE SCL.PURCHASE_COMPANY_CODE != '999'
		 		)
	        </when>
	        <otherwise>
	        NULL
	        </otherwise>
	    </choose>		
		,#{PRODUCT_FLAG}
		,#{SI_FLAG}
		,#{SOLUTION_FLAG}
		,#{GOODS_FLAG}
		,#{PARTNER_FLAG}
		,#{PARTNER_KIND}
		,#{COMPANY_STATE}
		,#{COMPANY_KIND}
		,#{BANK_CODE}
		,#{ACCOUNT_NO}
		,#{ACCOUNT_NAME}
		,#{COLLECTION_BOND_FLAG}
		,#{CL_APPROVAL_EMP_NO}
		,#{CL_ASSET}
		,#{CL_EMP_NUMBER}
		,#{CL_APPROVAL_DATE}
		,#{CL_CAPITAL}
		,#{CL_OPINION}
		,#{CL_PS}
		,#{CL_ANNUAL_SALES}
		,#{CL_SI}
		,#{CL_NET_INCOME}
		,#{CL_EVALUATION}
		,#{CL_LISTED_FLAG}
		,#{CL_EXCEPTION_CODE}
		,#{CL_CURRENT_ASSETS}
		,#{CL_PROFITABILITY}
		,#{CL_SAFETY}
		,#{CL_ADD_SCORE1}
		,#{CL_ADD_SCORE2}
		,#{CL_ADD_SCORE3}
		,#{REMARKS}
		,#{CONTRACT_REMARKS}
		,#{PURCHASE_REMARKS}
		<if test="DELETE_FLAG !=null and DELETE_FLAG != ''">
		,#{DELETE_FLAG}
		</if>
		,#{SUBSIDIARY_COMPANY_FLAG}
		,#{TRANS_TARGET}
	    ,#{USER_ID_SRV}
	    ,#{USER_CON_IPADDR_SRV}
	    ,NOW()
	    ,#{USER_ID_SRV}
	    ,#{USER_CON_IPADDR_SRV}
	    ,NOW()		
	)
</insert>

<update id="updateCompanyList" parameterType="java.util.Map">
	UPDATE SALES_COMPANY_LIST
	SET 
	COMPANY_NAME=#{COMPANY_NAME}
	, COMPANY_NAME_JAP=#{COMPANY_NAME_JAP}
	, COMPANY_NAME_ENG=#{COMPANY_NAME_ENG}
	, COMPANY_ABBREVIATION=#{COMPANY_ABBREVIATION}
	, TAG=#{TAG}
	, CLIENT_FLAG=#{CLIENT_FLAG}
	, COMPANY_FLAG=#{COMPANY_FLAG}
	, TMP_FLAG=#{TMP_FLAG}
	, BLACKLIST_FLAG=#{BLACKLIST_FLAG}
	, SI_VIEW_FLAG=#{SI_VIEW_FLAG}
	, TURNKEY_FLAG=#{TURNKEY_FLAG}
	, NATION_CODE=#{NATION_CODE}
	, BUSINESS_SCALE=#{BUSINESS_SCALE}
	, L_CATEGORY=#{L_CATEGORY}
	, M_CATEGORY=#{M_CATEGORY}
	, COMPANY_REG_NO=#{COMPANY_REG_NO}
	, CORPORATE_REG_NO=#{CORPORATE_REG_NO}
	, INCORPORATION_DATE=#{INCORPORATION_DATE}
	, CEO_NAME=#{CEO_NAME}
	, CEO_PHONE=#{CEO_PHONE}
	, POST_NO=#{POST_NO}
	, POST_ADDR=#{POST_ADDR}
	, DETAIL_ADDR=#{DETAIL_ADDR}
	, PHONE_NO=#{PHONE_NO}
	, FAX_NO=#{FAX_NO}
	, BUSINESS_FORM=#{BUSINESS_FORM}
	, BUSINESS_KIND=#{BUSINESS_KIND}
	, PURCHASE_COMPANY_CODE=
	<choose>
		<when test=' (PURCHASE_COMPANY_CODE == null or PURCHASE_COMPANY_CODE == "") and COMPANY_KIND !=null and COMPANY_KIND != "" and (COMPANY_KIND == "0" or COMPANY_KIND == "1") '>
			(SELECT CAST(MAX(CAST(PURCHASE_COMPANY_CODE AS UNSIGNED)) + 1 AS CHAR)
				FROM SALES_COMPANY_LIST
				WHERE PURCHASE_COMPANY_CODE != '99999999'
			)
		</when>
		<otherwise>
			#{PURCHASE_COMPANY_CODE}
		</otherwise>
	</choose>	
		
	, PRODUCT_FLAG=#{PRODUCT_FLAG}
	, SI_FLAG=#{SI_FLAG}
	, SOLUTION_FLAG=#{SOLUTION_FLAG}
	, GOODS_FLAG=#{GOODS_FLAG}
	, PARTNER_FLAG=#{PARTNER_FLAG}
	, PARTNER_KIND=#{PARTNER_KIND}
	, COMPANY_STATE=#{COMPANY_STATE}
	, COMPANY_KIND=#{COMPANY_KIND}
	, BANK_CODE=#{BANK_CODE}
	, ACCOUNT_NO=#{ACCOUNT_NO}
	, ACCOUNT_NAME=#{ACCOUNT_NAME}
	, COLLECTION_BOND_FLAG=#{COLLECTION_BOND_FLAG}
	, CL_APPROVAL_EMP_NO=#{CL_APPROVAL_EMP_NO}
	, CL_ASSET=#{CL_ASSET}
	, CL_EMP_NUMBER=#{CL_EMP_NUMBER}
	, CL_APPROVAL_DATE=#{CL_APPROVAL_DATE}
	, CL_CAPITAL=#{CL_CAPITAL}
	, CL_OPINION=#{CL_OPINION}
	, CL_PS=#{CL_PS}
	, CL_ANNUAL_SALES=#{CL_ANNUAL_SALES}
	, CL_SI=#{CL_SI}
	, CL_NET_INCOME=#{CL_NET_INCOME}
	, CL_EVALUATION=#{CL_EVALUATION}
	, CL_LISTED_FLAG=#{CL_LISTED_FLAG}
	, CL_EXCEPTION_CODE=#{CL_EXCEPTION_CODE}
	, CL_CURRENT_ASSETS=#{CL_CURRENT_ASSETS}
	, CL_PROFITABILITY=#{CL_PROFITABILITY}
	, CL_SAFETY=#{CL_SAFETY}
	, CL_ADD_SCORE1=#{CL_ADD_SCORE1}
	, CL_ADD_SCORE2=#{CL_ADD_SCORE2}
	, CL_ADD_SCORE3=#{CL_ADD_SCORE3}
	, REMARKS=#{REMARKS}
	, CONTRACT_REMARKS=#{CONTRACT_REMARKS}
	, PURCHASE_REMARKS=#{PURCHASE_REMARKS}
	, DELETE_FLAG=#{DELETE_FLAG}
	, SUBSIDIARY_COMPANY_FLAG=#{SUBSIDIARY_COMPANY_FLAG}
	, TRANS_TARGET=#{TRANS_TARGET}
	, CHGE_ID = #{USER_ID_SRV}
	, CHGE_IP = #{USER_CON_IPADDR_SRV}
	, CHGE_DTTM = NOW()
	WHERE COMPANY_CODE=#{COMPANY_CODE}
</update>

<delete id="deleteCompanyList" parameterType="java.util.Map">
	UPDATE	SALES_COMPANY_LIST	 
	SET  DELETE_FLAG = '1'
	WHERE COMPANY_CODE = #{COMPANY_CODE}
</delete>

<insert id="insertCompanyAddressBook" parameterType="java.util.Map">
	INSERT INTO SALES_COMPANY_ADDRESSBOOK
	(
	  COMPANY_CODE
	, EMP_NAME
	, DEPT_NAME
	, GRADE_CODE
	, ROLE_CODE
	, H_PHONE_NO
	, O_PHONE_NO
	, HOLD_OFFICE
	, EMAIL
	, ETAX_FLAG
	, ORDER_FLAG
	, REMARKS
	, HISTORY
	, INPT_ID
	, INPT_IP
	, INPT_DTTM
	, CHGE_ID
	, CHGE_IP
	, CHGE_DTTM
	)
	VALUES
	(
	<choose>
		<when test="COMPANY_CODE !=null and COMPANY_CODE != ''">
			#{COMPANY_CODE}
		</when>
		<otherwise>
			#{NEW_COMPANY_CD}
		</otherwise>
	</choose>		
	, #{EMP_NAME}
	, #{DEPT_NAME}
	, #{GRADE_CODE}
	, #{ROLE_CODE}
	, #{H_PHONE_NO}
	, #{O_PHONE_NO}
	, #{HOLD_OFFICE}
	, #{EMAIL}
	<choose>
		<when test='ETAX_FLAG ==null or ETAX_FLAG == ""'>
			,'0'
		</when>
		<otherwise>
			,#{ETAX_FLAG}
		</otherwise>
	</choose>	
	<choose>
		<when test='ORDER_FLAG ==null or ORDER_FLAG == ""'>
			,'0'
		</when>
		<otherwise>
			,#{ORDER_FLAG}
		</otherwise>
	</choose>		
	, #{REMARKS}
	, #{HISTORY}
	,#{USER_ID_SRV}
	,#{USER_CON_IPADDR_SRV}
	,NOW()
	,#{USER_ID_SRV}
	,#{USER_CON_IPADDR_SRV}
	,NOW()	
	)
</insert>

<update id="updateCompanyAddressBook" parameterType="java.util.Map">
	UPDATE SALES_COMPANY_ADDRESSBOOK
	SET COMPANY_CODE= #{COMPANY_CODE}
		, EMP_NAME= #{EMP_NAME}
		, DEPT_NAME= #{DEPT_NAME}
		, GRADE_CODE= #{GRADE_CODE}
		, ROLE_CODE= #{ROLE_CODE}
		, H_PHONE_NO= #{H_PHONE_NO}
		, O_PHONE_NO= #{O_PHONE_NO}
		, HOLD_OFFICE= #{HOLD_OFFICE}
		, EMAIL= #{EMAIL}
		, ETAX_FLAG= #{ETAX_FLAG}
		, ORDER_FLAG= #{ORDER_FLAG}
		, REMARKS= #{REMARKS}
		, HISTORY= #{HISTORY}
		, CHGE_ID = #{USER_ID_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE CA_SEQ=#{CA_SEQ}
</update>

<delete id="deleteCompanyAddressBook" parameterType="java.util.Map">
	DELETE FROM SALES_COMPANY_ADDRESSBOOK
	WHERE CA_SEQ=#{CA_SEQ}
</delete>

<insert id="insertCompanyOpinionHistory" parameterType="java.util.Map">
	INSERT INTO SALES_COMPANY_OPINION_HISTORY
	(
		  COMPANY_CODE
		, CL_OPINION
		, SALES_EMP_NO
		, REMARKS_REASON
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		<choose>
			<when test="COMPANY_CODE !=null and COMPANY_CODE != ''">
				#{COMPANY_CODE}
			</when>
			<otherwise>
				#{NEW_COMPANY_CD}
			</otherwise>
		</choose>		
		, #{CL_OPINION}
		, #{SALES_EMP_NO}
		, #{REMARKS_REASON}
		,#{USER_ID_SRV}
		,#{USER_CON_IPADDR_SRV}
		,NOW()
		,#{USER_ID_SRV}
		,#{USER_CON_IPADDR_SRV}
		,NOW()	
	)
</insert>

<update id="updateCompanyOpinionHistory" parameterType="java.util.Map">
	UPDATE SALES_COMPANY_OPINION_HISTORY
	SET COMPANY_CODE=#{COMPANY_CODE}
	, CL_OPINION=#{CL_OPINION}
	, SALES_EMP_NO=#{SALES_EMP_NO}
	, REMARKS_REASON=REMARKS_REASON
	, CHGE_ID = #{USER_ID_SRV}
	, CHGE_IP = #{USER_CON_IPADDR_SRV}
	, CHGE_DTTM = NOW()
	WHERE COH_SEQ=#{COH_SEQ}
</update>

<delete id="deleteCompanyOpinionHistory" parameterType="java.util.Map">
	DELETE FROM SALES_COMPANY_OPINION_HISTORY
	WHERE COH_SEQ=#{COH_SEQ}
</delete>

<insert id="insertCreditLevelHistory" parameterType="java.util.Map">
	INSERT INTO SALES_CREDIT_LEVEL_HISTORY
	(
	  COMPANY_CODE
	, EVALUATION_DATE
	, `YEAR`
	, CREDIT_COMPANY
	, CREDIT_LEVEL
	, INPT_ID
	, INPT_IP
	, INPT_DTTM
	, CHGE_ID
	, CHGE_IP
	, CHGE_DTTM
	)
	VALUES
	(
	<choose>
		<when test="COMPANY_CODE !=null and COMPANY_CODE != ''">
			#{COMPANY_CODE}
		</when>
		<otherwise>
			#{NEW_COMPANY_CD}
		</otherwise>
	</choose>		
	, #{EVALUATION_DATE}
	, #{YEAR}
	, #{CREDIT_COMPANY}
	, #{CREDIT_LEVEL}
	,#{USER_ID_SRV}
	,#{USER_CON_IPADDR_SRV}
	,NOW()
	,#{USER_ID_SRV}
	,#{USER_CON_IPADDR_SRV}
	,NOW()	
	)
</insert>

<update id="updateCreditLevelHistory" parameterType="java.util.Map">
	UPDATE SALES_CREDIT_LEVEL_HISTORY
	SET COMPANY_CODE=#{COMPANY_CODE}
	, EVALUATION_DATE=#{EVALUATION_DATE}
	, YEAR=#{YEAR}
	, CREDIT_COMPANY=#{CREDIT_COMPANY}
	, CREDIT_LEVEL=#{CREDIT_LEVEL}
	, CHGE_ID = #{USER_ID_SRV}
	, CHGE_IP = #{USER_CON_IPADDR_SRV}
	, CHGE_DTTM = NOW()
	WHERE CLH_SEQ=#{CLH_SEQ}
</update>

<delete id="deleteCreditLevelHistory" parameterType="java.util.Map">
	DELETE FROM SALES_CREDIT_LEVEL_HISTORY
	WHERE CLH_SEQ=#{CLH_SEQ}
</delete>

<select id="selectPoppupCompany" parameterType="java.util.List" resultType="java.util.Map">
SELECT 	COMPANY_CODE, COMPANY_NAME, COMPANY_NAME_ENG
 FROM 	SALES_COMPANY_LIST

 <if test=' COMPANY_NAME != null and COMPANY_NAME != "" '>
 WHERE DELETE_FLAG = '0'
 AND (COMPANY_NAME LIKE CONCAT('%',#{COMPANY_NAME},'%')
		OR COMPANY_NAME_ENG LIKE CONCAT('%',#{COMPANY_NAME},'%')
		OR  TAG LIKE CONCAT('%',#{COMPANY_NAME},'%'))
 </if>
 ORDER BY COMPANY_NAME
</select>

<select id="selectProductTreeList" parameterType="java.util.List" resultType="java.util.Map">
	WITH RECURSIVE CTE_Prdt AS (
		SELECT
			 AA.COMPANY_CODE
			, AA.CONTRACT_TYPE
			, AA.PRODUCT_CODE
			, AA.PRODUCT_NAME
			, AA.PRODUCT_NAME_ENG
			, AA.PRODUCT_NAME_SHORT
			, AA.HIPO_PRODUCT_CODE
			,(SELECT A1.PRODUCT_NAME FROM SALES_PRODUCT_LIST A1 WHERE A1.COMPANY_CODE = AA.COMPANY_CODE AND A1.PRODUCT_CODE = AA.HIPO_PRODUCT_CODE) AS HIPO_PRODUCT_NAME
			, AA.MAIN_PRODUCT_CODE
			, AA.MAIN_PRODUCT_FLAG
			, AA.SELECT_FLAG
			, AA.MA_FLAG
			, AA.GOODS_FLAG
			, AA.UNIT_COST
			, AA.REMARKS
			, AA.DELETE_FLAG
			, AA.PRODUCT_LVL
			, AA.RELATED_COMPANY_CODE
			, AA.NO_PURCHASE_FLAG
			, AA.ROYALTY_TYPE
			, AA.PRODUCT_ORDR AS PRODUCT_ORDER
			, CONVERT(AA.PRODUCT_ORDR, char(100)) as SortOrder
		FROM SALES_PRODUCT_LIST AA
		WHERE AA.PRODUCT_LVL = '0'
		AND AA.COMPANY_CODE  = #{COMPANY_CODE}
		AND AA.CONTRACT_TYPE = #{CONTRACT_TYPE}
		
		UNION ALL
		
		SELECT
			 BB.COMPANY_CODE
			, BB.CONTRACT_TYPE
			, BB.PRODUCT_CODE
			, BB.PRODUCT_NAME
			, BB.PRODUCT_NAME_ENG
			, BB.PRODUCT_NAME_SHORT
			, BB.HIPO_PRODUCT_CODE
			,(SELECT B1.PRODUCT_NAME FROM SALES_PRODUCT_LIST B1 WHERE B1.COMPANY_CODE = BB.COMPANY_CODE AND B1.PRODUCT_CODE = BB.HIPO_PRODUCT_CODE) AS HIPO_PRODUCT_NAME
			, BB.MAIN_PRODUCT_CODE
			, BB.MAIN_PRODUCT_FLAG
			, BB.SELECT_FLAG
			, BB.MA_FLAG
			, BB.GOODS_FLAG
			, BB.UNIT_COST
			, BB.REMARKS
			, BB.DELETE_FLAG
			, BB.PRODUCT_LVL
			, BB.RELATED_COMPANY_CODE
			, BB.NO_PURCHASE_FLAG
			, BB.ROYALTY_TYPE	
			, BB.PRODUCT_ORDR AS PRODUCT_ORDER
			, CONCAT(CTE_Prdt.SortOrder, '|', BB.PRODUCT_ORDR) as PRODUCT_ORDR
		FROM SALES_PRODUCT_LIST BB
		INNER JOIN CTE_Prdt ON BB.HIPO_PRODUCT_CODE = CTE_Prdt.PRODUCT_CODE
		WHERE BB.COMPANY_CODE 	= #{COMPANY_CODE}
		AND BB.CONTRACT_TYPE 	= #{CONTRACT_TYPE}
	)
	SELECT *
	FROM CTE_Prdt
	WHERE 1=1
	<if test="DELETE_FLAG != null and DELETE_FLAG != ''">
		AND CTE_Prdt.DELETE_FLAG = #{DELETE_FLAG}
	</if>
	ORDER BY SortOrder
</select>

<insert id="insertProductList" parameterType="java.util.Map">
INSERT INTO SALESDOT.SALES_PRODUCT_LIST
(
	  COMPANY_CODE
	, CONTRACT_TYPE
	, PRODUCT_CODE
	, PRODUCT_NAME
	, PRODUCT_NAME_ENG
	, PRODUCT_NAME_SHORT
	, HIPO_PRODUCT_CODE
	, MAIN_PRODUCT_CODE
	<if test="MAIN_PRODUCT_FLAG != null and MAIN_PRODUCT_FLAG != ''">
	, MAIN_PRODUCT_FLAG
	</if>
	<if test="SELECT_FLAG != null and SELECT_FLAG != ''">
	, SELECT_FLAG
	</if>
	<if test="MA_FLAG != null and MA_FLAG != ''">
	, MA_FLAG
	</if>
	<if test="GOODS_FLAG != null and GOODS_FLAG != ''">
	, GOODS_FLAG
	</if>
	, UNIT_COST
	, REMARKS
	<if test="DELETE_FLAG != null and DELETE_FLAG != ''">
	, DELETE_FLAG
	</if>
	, PRODUCT_LVL
	, PRODUCT_ORDR
	, RELATED_COMPANY_CODE
	, NO_PURCHASE_FLAG
	, ROYALTY_TYPE
	, _ORG_PRODUCT_CODE
	, INPT_ID
	, INPT_IP
	, INPT_DTTM
	, CHGE_ID
	, CHGE_IP
	, CHGE_DTTM
)
VALUES
(
	#{COMPANY_CODE}
	, #{CONTRACT_TYPE}
	, (SELECT  IFNULL(
	    (
	        SELECT 
	            CONCAT(#{HIPO_PRODUCT_CODE}, LPAD(CAST(REPLACE(MAX(SPL.PRODUCT_CODE), #{HIPO_PRODUCT_CODE}, '') AS UNSIGNED) + 1, 2, '0'))
	        FROM SALES_PRODUCT_LIST SPL
	        WHERE SPL.PRODUCT_CODE LIKE CONCAT(#{HIPO_PRODUCT_CODE}, '%')
	        AND LENGTH(SPL.PRODUCT_CODE) = (LENGTH(#{HIPO_PRODUCT_CODE}) + 2)
	    ), 
	    CONCAT(#{HIPO_PRODUCT_CODE}, '01')
	 ))
	, #{PRODUCT_NAME}
	, #{PRODUCT_NAME_ENG}
	, #{PRODUCT_NAME_SHORT}
	, #{HIPO_PRODUCT_CODE}
	, #{MAIN_PRODUCT_CODE}
	<if test="MAIN_PRODUCT_FLAG != null and MAIN_PRODUCT_FLAG != ''">
	, #{MAIN_PRODUCT_FLAG}
	</if>
	<if test="SELECT_FLAG != null and SELECT_FLAG != ''">
	, #{SELECT_FLAG}
	</if>
	<if test="MA_FLAG != null and MA_FLAG != ''">
	, #{MA_FLAG}
	</if>
	<if test="GOODS_FLAG != null and GOODS_FLAG != ''">
	, #{GOODS_FLAG}
	</if>
	, #{UNIT_COST}
	, #{REMARKS}
	<if test="DELETE_FLAG != null and DELETE_FLAG != ''">
	, #{DELETE_FLAG}
	</if>
	, #{PRODUCT_LVL}
	, #{PRODUCT_ORDER}
	, #{RELATED_COMPANY_CODE}
	, #{NO_PURCHASE_FLAG}
	, #{ROYALTY_TYPE}
	, #{_ORG_PRODUCT_CODE}
	,#{USER_ID_SRV}
	,#{USER_CON_IPADDR_SRV}
	,NOW()
	,#{USER_ID_SRV}
	,#{USER_CON_IPADDR_SRV}
	,NOW()	
)
</insert>
<update id="updateProductList" parameterType="java.util.Map">
	UPDATE SALES_PRODUCT_LIST
	SET PRODUCT_NAME = #{PRODUCT_NAME}
		, PRODUCT_NAME_ENG = #{PRODUCT_NAME_ENG}
		, PRODUCT_NAME_SHORT = #{PRODUCT_NAME_SHORT}
		, HIPO_PRODUCT_CODE = #{HIPO_PRODUCT_CODE}
		, MAIN_PRODUCT_CODE = #{MAIN_PRODUCT_CODE}
		<if test="MAIN_PRODUCT_FLAG != null and MAIN_PRODUCT_FLAG != ''">
		, MAIN_PRODUCT_FLAG = #{MAIN_PRODUCT_FLAG}
		</if>
		<if test="SELECT_FLAG != null and SELECT_FLAG != ''">
		, SELECT_FLAG = #{SELECT_FLAG}
		</if>
		<if test="MA_FLAG != null and MA_FLAG != ''">
		, MA_FLAG = #{MA_FLAG}
		</if>
		<if test="GOODS_FLAG != null and GOODS_FLAG != ''">
		, GOODS_FLAG = #{GOODS_FLAG}
		</if>
		, UNIT_COST = #{UNIT_COST}
		, REMARKS = #{REMARKS}
		<if test="DELETE_FLAG != null and DELETE_FLAG != ''">
		, DELETE_FLAG = #{DELETE_FLAG}
		</if>
		, PRODUCT_LVL = #{PRODUCT_LVL}
		, PRODUCT_ORDR = #{PRODUCT_ORDER}
		, RELATED_COMPANY_CODE = #{RELATED_COMPANY_CODE}
		, NO_PURCHASE_FLAG = #{NO_PURCHASE_FLAG}
		, ROYALTY_TYPE = #{ROYALTY_TYPE}
		, CHGE_ID = #{USER_ID_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
		, _ORG_PRODUCT_CODE = #{_ORG_PRODUCT_CODE}
	WHERE COMPANY_CODE = #{COMPANY_CODE}
	AND CONTRACT_TYPE = #{CONTRACT_TYPE}
	AND PRODUCT_CODE = #{PRODUCT_CODE}
</update>
<delete id="deleteProductList" parameterType="java.util.Map">	
	DELETE FROM SALES_PRODUCT_LIST
	WHERE COMPANY_CODE = #{COMPANY_CODE}
	AND CONTRACT_TYPE = #{CONTRACT_TYPE}
	AND PRODUCT_CODE = #{PRODUCT_CODE}
</delete>

<select id="selectStaffList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT 
	  VED.COMPANY_CD
	, VED.USER_ID
	, VED.EMP_NO
	, VED.EMP_NM
	, VED.KORN_NM
	, VED.ENGL_NM
	, VED.JAPN_NM
	, VED.DEPT_CD
	, VED.USER_FLAG_CD
	, VED.WKGD_CD
	, VED.WKDT_CD
	, VED.OCCU_CD
	, VED.CHAG_WORK
	, VED.JOIN_DATE
	, VED.RETR_DATE
	, VED.HOOF_STAT_CD
	, VED.WKPL_TELP_NUMB
	, VED.REGI_NUMB
	, VED.BIR_DT
	, VED.BIR_LUNAR_FLAG
	, VED.CELL_NUMB
	, VED.HUS_TELP_NUMB
	, VED.EMAIL
	, VED.EMAILSUB
	, VED.ZIP_NUMB
	, VED.BASC_ADDR
	, VED.DTL_ADDR
	, VED.THEME_ID
	, VED.MARRIAGE_FLAG
	, VED.MILITARY_FLAG
	, VED.WORK_STARTDATE
	, VED.WORK_YY
	, VED.WORK_MM
	, VED.WORK_LEVEL_CD
	, VED.EDU_LEVEL_CD
	, VED.SEX_FLAG
	, VED.SI_FLAG
	, VED.MAIN_DEPT_FLAG
	, '' AS NEW_COMPANY_CD
	<if test="EMP_NO != null and EMP_NO != '' ">
	, VED.USER_PIC
	 ,MP.FM_SEQ
	 ,FM.FILE_NAME
	</if>
	, DEPT.DEPT_KORN_NM AS DEPT_NAME
	, COM.COMPANY_NAME
	FROM T_SYTM_USER VED
	LEFT JOIN T_SYTM_DEPT DEPT ON (DEPT.DEPT_CD = VED.DEPT_CD)
	LEFT JOIN SALES_COMPANY_LIST COM ON (COM.COMPANY_CODE = VED.COMPANY_CD)
	<if test="EMP_NO != null and EMP_NO != '' ">
	 LEFT JOIN   SALES_FILE_MAP  MP  ON (MP.SOURCE_CD = 'EI' AND MP.SOURCE_SEQ = VED.EMP_NO AND MP.STATUS_CD = 'PRIVACY')
	 LEFT JOIN   SALES_FILE_MASTER    FM  ON (FM.FM_SEQ = MP.FM_SEQ)
	</if>
	<!-- 
	LEFT JOIN  	( SELECT  PSE.EMP_NO, COUNT(*) CNT
					FROM  SALES_PROJECT_SI_EMP PSE
				   GROUP BY PSE.EMP_NO
				) PSE ON (PSE.EMP_NO = VED.EMP_NO)
	 -->
	WHERE VED.MAIN_DEPT_FLAG = '1'
	<if test="COMPANY_CODE != null and COMPANY_CODE != '' ">
	 AND VED.COMPANY_CD = #{COMPANY_CODE}
	</if>
	<if test="EMP_NO != null and EMP_NO != '' ">
	 AND     VED.EMP_NO = #{EMP_NO}
	</if>
	<if test="SEARCH_TEXT != null and SEARCH_TEXT != '' ">
		    <choose>
		        <when test=' SEARCH_GB == "E" '>
					AND VED.EMP_NM LIKE CONCAT('%',#{SEARCH_TEXT},'%')
		        </when>
		        <when test=' SEARCH_GB == "O" '>
					AND COM.COMPANY_NAME LIKE CONCAT('%',#{SEARCH_TEXT},'%')
		        </when>
		        <otherwise>
					AND VED.EMAIL LIKE CONCAT('%',#{SEARCH_TEXT},'%')
		        </otherwise>
		    </choose>	
	</if>

</select>

<select id="selectStaffEduList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT
		 ESC.COMPANY_CD,
		 ESC.ESC_SEQ,
		 ESC.EMP_NO,
		 ESC.SCHOOL_NAME,
		 ESC.START_DATE,
		 ESC.END_DATE,
		 ESC.SUBJECT_NAME,
		 ESC.GRADUATE_FLAG,
		 ESC.PLACE_NAME
	 FROM EMP_SCHOOL_CAREER ESC
	 WHERE ESC.EMP_NO = #{EMP_NO}
	 AND ESC.COMPANY_CD = #{COMPANY_CODE}
	 ORDER BY ESC.START_DATE
</select>

<select id="selectStaffCompanyList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT
		 ECC.COMPANY_CD,
		 ECC.ECC_SEQ,
		 ECC.EMP_NO,
		 ECC.START_DATE,
		 ECC.END_DATE,
		 ECC.COMPANY_NAME,
		 ECC.GRADE_NAME,
		 ECC.WORK_PART
	FROM EMP_COMPANY_CAREER ECC
	WHERE ECC.EMP_NO = #{EMP_NO}
	 AND ECC.COMPANY_CD = #{COMPANY_CODE}
	ORDER BY ECC.START_DATE
</select>

<select id="selectStaffProjectList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT
		EPC.COMPANY_CD,
		EPC.EPC_SEQ,
		EPC.EMP_NO,
		EPC.PROJECT_NAME,
		EPC.START_DATE,
		EPC.END_DATE,
		EPC.CLIENT_NAME,
		EPC.COMPANY_NAME,
		EPC.ROLE_CODE,
		EPC.ENV,
		EPC.PRLANGUAGE,
		EPC.DBMS,
		EPC.REMARKS
	FROM EMP_PROJECT_CAREER EPC
	WHERE EPC.EMP_NO = #{EMP_NO}
	AND EPC.COMPANY_CD = #{COMPANY_CODE}
	ORDER BY EPC.START_DATE DESC
</select>

<select id="selectStaffEtcTechList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT
	 ETS.COMPANY_CD,
	 ETS.ETS_SEQ,
	 ETS.EMP_NO,
	 ETS.SKILL_NAME,
	 ETS.SKILL
	 FROM EMP_TECH_SKILL ETS
	 WHERE ETS.EMP_NO = #{EMP_NO}
	   AND ETS.COMPANY_CD = #{COMPANY_CODE}
	 ORDER BY ETS.ETS_SEQ
</select>

<select id="selectStaffEtcEduList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT
	 EE.COMPANY_CD,
	 EE.EE_SEQ,
	 EE.EMP_NO,
	 EE.EDU_NAME,
	 EE.INSTITUTION_NAME,
	 EE.START_DATE,
	 EE.END_DATE
	 FROM EMP_EDUCATION EE
	 WHERE EE.EMP_NO = #{EMP_NO}
	 AND EE.COMPANY_CD = #{COMPANY_CODE}
	 ORDER BY EE.END_DATE DESC
</select>

<select id="selectStaffAppointmentList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT 
	  COMPANY_CD
	, EMP_NO
	, EA_SEQ
	, APPOINT_CD
	, APPOINT_DATE
	, GROUP_NAME
	, TEAM_NAME
	, WKDT_CD
	, REMARKS
	FROM EMP_APPOINTMENT
	 WHERE   EMP_NO = #{EMP_NO}
	 AND COMPANY_CD = #{COMPANY_CODE}
	 ORDER BY APPOINT_DATE DESC
</select>

<select id="selectStaffLicenseList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  
	  EL.COMPANY_CD
	 ,EL.EL_SEQ
	 ,EL.EMP_NO
	 ,EL.LICENSE_CODE
	 ,EL.LICENSE_DATE
	 ,EL.LICENSE_FM_SEQ
	 ,MP.FM_SEQ
	 ,FM.FILE_NAME
	 FROM    EMP_LICENSE                 EL
	 LEFT JOIN   SALES_FILE_MAP  MP  ON (MP.SOURCE_CD = 'EL' AND MP.SOURCE_SEQ = EL.EMP_NO AND MP.STATUS_CD = EL.LICENSE_CODE)
	 LEFT JOIN   SALES_FILE_MASTER    FM  ON (FM.FM_SEQ = MP.FM_SEQ)
	 WHERE   EL.EMP_NO = #{EMP_NO}
	 AND EL.COMPANY_CD = #{COMPANY_CODE}
	 ORDER BY EL.LICENSE_DATE
</select>

<select id="selectDetailPopupCompany" parameterType="java.util.List" resultType="java.util.Map">
	SELECT 
	  COMPANY_CODE
	, COMPANY_NAME
	, COMPANY_NAME_ENG
	, COMPANY_STATE
	, CLIENT_FLAG
	, COMPANY_FLAG
	, TMP_FLAG
	, BLACKLIST_FLAG
	, SI_VIEW_FLAG
	, TURNKEY_FLAG
	, SUBSIDIARY_COMPANY_FLAG
	, COMPANY_REG_NO
	, CORPORATE_REG_NO
	, PHONE_NO
	, REMARKS
	, CONTRACT_REMARKS
	, PURCHASE_REMARKS
	FROM SALES_COMPANY_LIST
	WHERE DELETE_FLAG = '0'
	 <if test="COMPANY_NAME != null and COMPANY_NAME != '' ">
	 AND ( COMPANY_NAME LIKE CONCAT('%',#{COMPANY_NAME},'%') OR TAG LIKE CONCAT('%',#{COMPANY_NAME},'%') )
	 </if>
	 <if test=' COMPANY_TYPE == "1" or COMPANY_TYPE == "2" '>
	     AND CLIENT_FLAG = '1'
	 </if>

</select>

</mapper>
