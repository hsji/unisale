<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="codeMapper">

<select id="selectCommonCodeGubunAll" parameterType="java.util.List" resultType="java.util.Map">
	SELECT   /* selectCommonCodeGubunAll */
	    COMPANY_CD, HCL_CD
	    , HCL_CD_KORN_NM
	    , HCL_CD_ENGL_NM
	    , USED_YN
	    , REMK
	    , BEFO_HCL_CD
	    , HIPO_HCL_CD
	FROM T_SYTM_CODE_GUBN
	WHERE 1=1
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
		AND COMPANY_CD = #{COMPANY_CD}
	</if>
	ORDER BY HCL_CD
</select>

<select id="selectCommonCodeAll" parameterType="java.util.List" resultType="java.util.Map">
/* selectCommonCodeAll */
	SELECT	COMPANY_CD
	    , SSC_NUMB
	    , SSC_CD
	    , HCL_CD
	    , SSC_CD_KORN_NM
	    , SSC_CD_ENGL_NM
	    , ABBR_KORN_NM
	    , ABBR_ENGL_NM
	    , GRP_CD_1
	    , GRP_CD_2
	    , GRP_CD_3
	    , GRP_CD_4
	    , GRP_CD_5
	    , GRP_CD_6
	    , GRP_CD_7
	    , GRP_CD_8
	    , GRP_CD_9
	    , BEFO_SSC_CD
	    , USED_YN
	    , SORT_ORDR
	    , REMK
	    , SSC_CD AS CODE
	    , SSC_CD_KORN_NM AS CAPTION
	FROM T_SYTM_CODE
	WHERE 1=1
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
		AND COMPANY_CD = #{COMPANY_CD}
	</if>	
	ORDER BY SSC_NUMB
</select>
<!-- 대분류코드 머지문 -->
<insert id="insertCommonCodeGubunAll" parameterType="java.util.Map">
INSERT INTO T_SYTM_CODE_GUBN
    	(COMPANY_CD, HCL_CD
    	, HCL_CD_KORN_NM
    	, HCL_CD_ENGL_NM
    	, USED_YN
    	, REMK
    	, BEFO_HCL_CD
    	, HIPO_HCL_CD
    	, INPT_ID
    	, INPT_IP
    	, INPT_DTTM
    	, CHGE_ID
    	, CHGE_IP
    	, CHGE_DTTM)
VALUES
    (	#{COMPANY_CD},  #{HCL_CD}
	    , #{HCL_CD_KORN_NM}
	    , #{HCL_CD_ENGL_NM}
	    , #{USED_YN}
	    , #{REMK}
	    , #{BEFO_HCL_CD}
	    , #{HIPO_HCL_CD}
	    , #{USER_ID_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW()
	    , #{USER_ID_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW())
ON DUPLICATE KEY UPDATE
    		HCL_CD_KORN_NM   = #{HCL_CD_KORN_NM}
			, HCL_CD_ENGL_NM = #{HCL_CD_ENGL_NM}
			, USED_YN        = #{USED_YN}
			, REMK           = #{REMK}
			, BEFO_HCL_CD    = #{BEFO_HCL_CD}
			, HIPO_HCL_CD    = #{HIPO_HCL_CD}
			, CHGE_ID        = #{USER_ID_SRV}
		    , CHGE_IP        = #{USER_CON_IPADDR_SRV}
		    , CHGE_DTTM	     = NOW()
</insert>

<!-- 소분류코드 머지문 -->
<!-- to-do 2023.07.11 성능관련 확인 필요 -->
<insert id="insertCommonCodeAll" parameterType="java.util.Map">
INSERT INTO T_SYTM_CODE
	(
    	COMPANY_CD
    	, SSC_NUMB
		, HCL_CD
		, SSC_CD
		, SSC_CD_KORN_NM
		, SSC_CD_ENGL_NM
		, ABBR_KORN_NM
		, ABBR_ENGL_NM
		, GRP_CD_1
		, GRP_CD_2
		, GRP_CD_3
		, GRP_CD_4
		, GRP_CD_5
		, GRP_CD_6
		, GRP_CD_7
		, GRP_CD_8
		, GRP_CD_9
		, BEFO_SSC_CD
		, USED_YN
		, SORT_ORDR
		, REMK
		, INPT_ID
		, INPT_DTTM
		, INPT_IP
		, CHGE_ID
		, CHGE_DTTM
		, CHGE_IP
	) 
	select
		COMPANY_CD
		, IFNULL(SSC_NUMB, LPAD(MAX(SSC_NUMB)+1,8,0)) as SSC_NUMB
		, HCL_CD						AS HCL_CD
		, SSC_CD                        AS SSC_CD
		, #{SSC_CD_KORN_NM}             AS SSC_CD_KORN_NM
		, #{SSC_CD_ENGL_NM}             AS SSC_CD_ENGL_NM
		, #{ABBR_KORN_NM}               AS ABBR_KORN_NM
		, #{ABBR_ENGL_NM}               AS ABBR_ENGL_NM
		, #{GRP_CD_1}                   AS GRP_CD_1
		, #{GRP_CD_2}                   AS GRP_CD_2
		, #{GRP_CD_3}                   AS GRP_CD_3
		, #{GRP_CD_4}                   AS GRP_CD_4
		, #{GRP_CD_5}                   AS GRP_CD_5
		, #{GRP_CD_6}                   AS GRP_CD_6
		, #{GRP_CD_7}                   AS GRP_CD_7
		, #{GRP_CD_8}                   AS GRP_CD_8
		, #{GRP_CD_9}                   AS GRP_CD_9
		, #{BEFO_SSC_CD}                AS BEFO_SSC_CD
		, #{USED_YN}                    AS USED_YN
		, #{SORT_ORDR}                  AS SORT_ORDR
		, #{REMK}                       AS REMK
		, #{USER_ID_SRV}                AS INPT_ID
		, NOW()                         AS INPT_DTTM
		, #{USER_CON_IPADDR_SRV}        AS INPT_IP
		, #{USER_ID_SRV}                AS CHGE_ID
		, NOW()                         AS CHGE_DTTM
		, #{USER_CON_IPADDR_SRV}        AS CHGE_IP
	from T_SYTM_CODE
	where SSC_CD = #{SSC_CD}
    	AND HCL_CD = #{HCL_CD}
    	AND COMPANY_CD = #{COMPANY_CD}
ON DUPLICATE KEY UPDATE
    		 SSC_CD_KORN_NM	 = #{SSC_CD_KORN_NM}
	        , SSC_CD_ENGL_NM = #{SSC_CD_ENGL_NM}
			, ABBR_KORN_NM 	 = #{ABBR_KORN_NM}
			, ABBR_ENGL_NM 	 = #{ABBR_ENGL_NM}
			, GRP_CD_1 		 = #{GRP_CD_1}
			, GRP_CD_2 		 = #{GRP_CD_2}
			, GRP_CD_3 		 = #{GRP_CD_3}
			, GRP_CD_4 		 = #{GRP_CD_4}
			, GRP_CD_5 		 = #{GRP_CD_5}
			, GRP_CD_6 		 = #{GRP_CD_6}
			, GRP_CD_7 		 = #{GRP_CD_7}
			, GRP_CD_8 		 = #{GRP_CD_8}
			, GRP_CD_9 		 = #{GRP_CD_9}
			, BEFO_SSC_CD 	 = #{BEFO_SSC_CD}
			, USED_YN 		 = #{USED_YN}    
			, SORT_ORDR 	 = #{SORT_ORDR}  
			, REMK 			 = #{REMK}       
			, CHGE_ID 		 = #{USER_ID_SRV}
			, CHGE_DTTM 	 = NOW()                 
			, CHGE_IP 		 = #{USER_CON_IPADDR_SRV}
</insert>

<!--  MAP 신규등록 코드 존재여부 체크 -->
<select id="checkMasterCommonCode" parameterType="java.util.List" resultType="java.util.Map">
	SELECT
	   	HCL_CD
	FROM T_SYTM_CODE_GUBN
	WHERE 
		HCL_CD IN
	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
	    #{item.HCL_CD}
	</foreach>  
	AND	COMPANY_CD IN
	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
	    #{item.COMPANY_CD}
	</foreach>  

</select>
 
<!--  MAP 신규등록 코드 존재여부 체크 -->
<select id="checkDetailCommonCode" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
	   	SSC_CD
	FROM T_SYTM_CODE
	WHERE 1=1
		AND HCL_CD = #{HCL_CD}
		AND SSC_CD IN (#{SSC_CD})
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
		AND COMPANY_CD = #{COMPANY_CD}
	</if>			
</select>
 
<select id="searchUnionCommonCode" parameterType="java.util.List" resultType="java.util.Map">
SELECT
    BB.*
FROM (
    SELECT 
        AA.*,
        (@row_number:=@row_number + 1) AS RNUM
    FROM (
        SELECT 
        	CODE.COMPANY_CD
            , CODE.SSC_NUMB
            , GUBUN.HCL_CD
            , GUBUN.HCL_CD_KORN_NM
            , CODE.SSC_CD
            , CODE.SSC_CD_KORN_NM 
            , CODE.SSC_CD_ENGL_NM
            , CODE.ABBR_KORN_NM
            , CODE.ABBR_ENGL_NM
            , CODE.GRP_CD_1
            , CODE.GRP_CD_2 
            , CODE.GRP_CD_3 
            , CODE.GRP_CD_4 
            , CODE.GRP_CD_5 
            , CODE.GRP_CD_6 
            , CODE.GRP_CD_7 
            , CODE.GRP_CD_8
            , CODE.GRP_CD_9 
            , CODE.BEFO_SSC_CD
            , CODE.USED_YN AS SSC_USED_YN
            , GUBUN.USED_YN AS HCL_USED_YN
            , CODE.SORT_ORDR
            , CODE.REMK
	    	, CODE.SSC_CD AS CODE
	    	, CODE.SSC_CD_KORN_NM AS CAPTION            
        FROM T_SYTM_CODE CODE
        	,T_SYTM_CODE_GUBN GUBUN
        WHERE 1=1
        AND CODE.HCL_CD = GUBUN.HCL_CD
        <if test="HCL_CD != null and HCL_CD != '' ">
        AND UPPER(GUBUN.HCL_CD) LIKE CONCAT('%', UPPER(#{HCL_CD}), '%')
        </if>
        <if test="HCL_NM != null and HCL_NM != '' ">
        AND GUBUN.HCL_CD_KORN_NM LIKE CONCAT('%', UPPER(#{HCL_NM}), '%')
        </if>
        <if test="SSC_CD != null and SSC_CD != '' ">
        AND UPPER(CODE.SSC_CD) LIKE CONCAT('%', UPPER(#{SSC_CD}), '%')
        </if>
        <if test="SSC_KNM != null and SSC_KNM != '' ">
        AND CODE.SSC_CD_KORN_NM LIKE CONCAT('%', UPPER(#{SSC_KNM}), '%')
        </if>
		<if test="COMPANY_CD != null and COMPANY_CD != '' ">
		AND CODE.COMPANY_CD = #{COMPANY_CD}
		AND GUBUN.COMPANY_CD = #{COMPANY_CD}
		</if>	        
        ORDER BY GUBUN.HCL_CD, CODE.SORT_ORDR, GUBUN.HCL_CD_KORN_NM
    ) AA,
    (SELECT @row_number:=0) AS t
) BB
<if test="END_NUM != null and END_NUM != '' ">
WHERE BB.RNUM BETWEEN #{START_NUM} AND #{END_NUM}
</if>	
</select> 

<select id="searchUnionCommonCodeCnt" parameterType="java.util.List" resultType="java.util.Map">
	SELECT 
    COUNT(*) AS TOTALCNT
FROM (
    SELECT 
    	CODE.COMPANY_CD
        , CODE.SSC_NUMB
        , GUBUN.HCL_CD
        , GUBUN.HCL_CD_KORN_NM
        , CODE.SSC_CD
        , CODE.SSC_CD_KORN_NM 
        , CODE.SSC_CD_ENGL_NM
        , CODE.ABBR_KORN_NM
        , CODE.ABBR_ENGL_NM
        , CODE.GRP_CD_1
        , CODE.GRP_CD_2 
        , CODE.GRP_CD_3 
        , CODE.GRP_CD_4 
        , CODE.GRP_CD_5 
        , CODE.GRP_CD_6 
        , CODE.GRP_CD_7 
        , CODE.GRP_CD_8
        , CODE.GRP_CD_9 
        , CODE.BEFO_SSC_CD
        , CODE.USED_YN AS SSC_USED_YN
        , GUBUN.USED_YN AS HCL_USED_YN
        , CODE.SORT_ORDR
        , CODE.REMK
        , @row_number := @row_number + 1 AS RNUM
    FROM T_SYTM_CODE CODE
    LEFT OUTER JOIN T_SYTM_CODE_GUBN GUBUN
        ON CODE.HCL_CD = GUBUN.HCL_CD 
    CROSS JOIN (SELECT @row_number := 0) AS t
    WHERE 1=1 
<if test="HCL_CD != null and HCL_CD != '' ">
	  AND UPPER(GUBUN.HCL_CD) LIKE CONCAT('%', UPPER(#{HCL_CD}), '%')
</if>
<if test="HCL_NM != null and HCL_NM != '' ">
	  AND GUBUN.HCL_CD_KORN_NM LIKE CONCAT('%', UPPER(#{HCL_NM}), '%')
</if>
<if test="SSC_CD != null and SSC_CD != '' ">
	  AND UPPER(CODE.SSC_CD) LIKE CONCAT('%', UPPER(#{SSC_CD}), '%')
</if>
<if test="SSC_KNM != null and SSC_KNM != '' ">
	  AND CODE.SSC_CD_KORN_NM LIKE CONCAT('%', UPPER(#{SSC_KNM}), '%')
</if>
<if test="COMPANY_CD != null and COMPANY_CD != '' ">
		AND CODE.COMPANY_CD = #{COMPANY_CD}
</if>	
    ORDER BY GUBUN.HCL_CD, CODE.SORT_ORDR, GUBUN.HCL_CD_KORN_NM
) AS SubQuery;
</select>
 
<!--  공통코드 목록 조회 (대분류코드) -->
<select id="searchComCodeList" parameterType="java.util.List" resultType="java.util.Map">

	SELECT   /* searchComCodeList */
		COMPANY_CD
		, HCL_CD
		, HCL_CD_KORN_NM
		, HCL_CD_ENGL_NM
		, USED_YN
		, REMK
		, BEFO_HCL_CD
		, HIPO_HCL_CD
		, INPT_ID
		, INPT_DTTM
		, INPT_IP
		, CHGE_ID
		, CHGE_DTTM
		, CHGE_IP
	FROM T_SYTM_CODE_GUBN
	WHERE 1=1
	<if test="HCL_CD != null and HCL_CD != '' ">
	   AND HCL_CD LIKE CONCAT('%', #{HCL_CD}, '%')
	</if>
	<if test="HCL_CD_KORN_NM != null and HCL_CD_KORN_NM != '' ">
	   AND HCL_CD_KORN_NM LIKE CONCAT('%', #{HCL_CD_KORN_NM}, '%')
	         OR HCL_CD_ENGL_NM LIKE CONCAT('%', #{HCL_CD_KORN_NM}, '%')
	</if>
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
			AND COMPANY_CD = #{COMPANY_CD}
	</if>		
	ORDER BY HCL_CD, HCL_CD_KORN_NM
</select> 
    
<!--  공통코드 목록 조회 -->
<select id="searchPopComCodeList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT /* searchPopComCodeList */
		'0' AS CHK
		, COMPANY_CD
		, SSC_NUMB       /* 소분류번호 */
		, SSC_CD         /* 소분류코드 */  
		, HCL_CD         /* 대분류코드 */ 
		, SSC_CD_KORN_NM /* 소분류코드 한글명 */ 
		, SSC_CD_ENGL_NM /* 소분류코드 영문명 */ 
		, SORT_ORDR      /* 정렬순서 */ 
		, USED_YN        /* 사용여부 */ 
		, GRP_CD_1       /* 그룹코드 1 */ 
		, GRP_CD_2       /* 그룹코드 2 */
		, GRP_CD_3       /* 그룹코드 3 */
		, GRP_CD_4       /* 그룹코드 4 */
		, GRP_CD_5       /* 그룹코드 5 */
		, GRP_CD_6       /* 그룹코드 6 */
		, GRP_CD_7       /* 그룹코드 7 */
		, GRP_CD_8       /* 그룹코드 8 */
		, GRP_CD_9       /* 그룹코드 9 */
		, REMK           /* 비고 */
		, ABBR_KORN_NM
		, ABBR_ENGL_NM
    	, SSC_CD AS CODE
    	, SSC_CD_KORN_NM AS CAPTION    		
	FROM T_SYTM_CODE
	WHERE 1=1
		AND HCL_CD = #{HCL_CD} 
		<if test="SSC_CD !=null and SSC_CD != ''">
			AND SSC_CD = #{SSC_CD}
		</if>		
		<if test="COMPANY_CD != null and COMPANY_CD != '' ">
				AND COMPANY_CD = #{COMPANY_CD}
		</if>				
	ORDER BY SORT_ORDR, HCL_CD, SSC_CD
</select>    

<!-- 대분류코드 저장 -->
<insert id="insertComCode" parameterType="java.util.Map">
	INSERT 
	INTO T_SYTM_CODE_GUBN(
		COMPANY_CD
		, HCL_CD
		, HCL_CD_KORN_NM
		, HCL_CD_ENGL_NM
		, USED_YN
		, REMK
		, BEFO_HCL_CD
		, HIPO_HCL_CD
		, INPT_ID
		, INPT_DTTM
		, INPT_IP
		, CHGE_ID
		, CHGE_DTTM
		, CHGE_IP
	) VALUES (
		 #{COMPANY_CD}
		, #{HCL_CD}
		, #{HCL_CD_KORN_NM}
		, #{HCL_CD_ENGL_NM}
		, #{USED_YN}
		, #{REMK}
		, ''
		, #{HIPO_HCL_CD}
		, #{USER_ID_SRV}
		, NOW()
		, #{USER_CON_IPADDR_SRV}
		, #{USER_ID_SRV}
		, NOW()
		, #{USER_CON_IPADDR_SRV}
	)
</insert>

<!-- 소분류코드 저장 -->
<insert id="insertPopComCode" parameterType="java.util.Map">
	INSERT /* insertComCode  */
	INTO T_SYTM_CODE(
		COMPANY_CD
		, SSC_NUMB
		, HCL_CD
		, SSC_CD
		, SSC_CD_KORN_NM
		, SSC_CD_ENGL_NM
		, ABBR_KORN_NM
		, ABBR_ENGL_NM
		, GRP_CD_1
		, GRP_CD_2
		, GRP_CD_3
		, GRP_CD_4
		, GRP_CD_5
		, GRP_CD_6
		, GRP_CD_7
		, GRP_CD_8
		, GRP_CD_9
		, BEFO_SSC_CD
		, USED_YN
		, SORT_ORDR
		, REMK
		, INPT_ID
		, INPT_DTTM
		, INPT_IP
		, CHGE_ID
		, CHGE_DTTM
		, CHGE_IP
	)VALUES(
		#{COMPANY_CD}
		, (SELECT CNT FROM(SELECT LPAD((MAX(SSC_NUMB) + 1), 8, '0') AS CNT FROM T_SYTM_CODE WHERE COMPANY_CD = #{COMPANY_CD}) T) 
		, #{HCL_CD}
		, #{SSC_CD}
		, #{SSC_CD_KORN_NM}
		, #{SSC_CD_ENGL_NM}
		, #{ABBR_KORN_NM}
		, #{ABBR_ENGL_NM}
		, #{GRP_CD_1}
		, #{GRP_CD_2}
		, #{GRP_CD_3}
		, #{GRP_CD_4}
		, #{GRP_CD_5}
		, #{GRP_CD_6}
		, #{GRP_CD_7}
		, #{GRP_CD_8}
		, #{GRP_CD_9}
		, #{BEFO_SSC_CD}
		, #{USED_YN}
		, #{SORT_ORDR}
		, #{REMK}
		, #{USER_ID_SRV}
		, NOW()
		, #{USER_CON_IPADDR_SRV}
		, #{USER_ID_SRV}
		, NOW()
		, #{USER_CON_IPADDR_SRV}
	)
</insert>

<!--  대분류코드 수정 -->   
<update id="updateComCode" parameterType="java.util.Map">
	UPDATE T_SYTM_CODE_GUBN 
	SET
		HCL_CD_KORN_NM   = #{HCL_CD_KORN_NM}
		, HCL_CD_ENGL_NM = #{HCL_CD_ENGL_NM}
		, USED_YN 		 = #{USED_YN}
		, REMK 			 = #{REMK}
		, HIPO_HCL_CD 	 = #{HIPO_HCL_CD}
		, CHGE_ID 		 = #{USER_ID_SRV}
		, CHGE_DTTM 	 = NOW()
		, CHGE_IP 		 = #{USER_CON_IPADDR_SRV}
	WHERE HCL_CD		 = #{HCL_CD}
	AND   COMPANY_CD	 = #{COMPANY_CD}
</update> 

<!--  소분류코드 수정 -->   
<update id="updatePopComCode" parameterType="java.util.Map">
	UPDATE T_SYTM_CODE 
	SET
		SSC_CD 		 	 = #{SSC_CD}
		, SSC_CD_KORN_NM = #{SSC_CD_KORN_NM}
		, SSC_CD_ENGL_NM = #{SSC_CD_ENGL_NM}
		, ABBR_KORN_NM 	 = #{ABBR_KORN_NM}
		, ABBR_ENGL_NM 	 = #{ABBR_ENGL_NM}
		, GRP_CD_1 		 = #{GRP_CD_1}
		, GRP_CD_2 		 = #{GRP_CD_2}
		, GRP_CD_3 		 = #{GRP_CD_3}
		, GRP_CD_4 		 = #{GRP_CD_4}
		, GRP_CD_5 		 = #{GRP_CD_5}
		, GRP_CD_6 		 = #{GRP_CD_6}
		, GRP_CD_7 		 = #{GRP_CD_7}
		, GRP_CD_8 		 = #{GRP_CD_8}
		, GRP_CD_9 		 = #{GRP_CD_9}
		, BEFO_SSC_CD 	 = #{BEFO_SSC_CD}
		, USED_YN 		 = #{USED_YN}
		, SORT_ORDR 	 = #{SORT_ORDR}
		, REMK 			 = #{REMK}
		, CHGE_ID 		 = #{USER_ID_SRV}
		, CHGE_DTTM 	 = NOW()
		, CHGE_IP 		 = #{USER_CON_IPADDR_SRV}
	WHERE SSC_NUMB 		 = #{SSC_NUMB}
		AND HCL_CD 		 = #{HCL_CD}
		AND   COMPANY_CD	 = #{COMPANY_CD}
</update> 

<!--  대분류코드삭제 삭제 -->   
<delete id="deleteComCode" parameterType="java.util.Map">
	DELETE FROM T_SYTM_CODE_GUBN 
	WHERE HCL_CD = #{HCL_CD}
	AND   COMPANY_CD	 = #{COMPANY_CD}
</delete>  

<!--  대분류코드삭제 삭제 -->   
<delete id="deletePopComCode" parameterType="java.util.Map">
	DELETE FROM T_SYTM_CODE 
	WHERE SSC_NUMB = #{SSC_NUMB}
		AND HCL_CD = #{HCL_CD}
		AND SSC_CD = #{SSC_CD}
		AND   COMPANY_CD	 = #{COMPANY_CD}
</delete>  

<!--  자산관리 조회 -->   
<select id="searchAssetList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT	
	    A.ASSET_CD
	    ,  A.ASSET_NO
	    ,  A.ASSET_TYPE
	    ,  A.ASSET_VERSION
	    ,  A.TITLE
	    ,  A.REASON_CD
	    ,  A.POSITION_CD
	    ,  A.MANAGETEAM_CD
	    ,  A.MANAGER
	    ,  A.OWNNER
	    ,  A.PRODUCT_CD
	    ,  A.RELATION_ASSET
	    ,  A.SERIAL_NO
	    ,  A.CPU_TYPE
	    ,  A.MEM_TYPE
	    ,  A.HDD_TYPE
	    ,  A.ASSET_SIZE
	    ,  A.ASSET_STATUS_CD
	    ,  A.USE_YN
	    ,  A.I_DATE
	    ,  A.P_DATE
	    ,  A.REMARK
	    ,  A.OS_TYPE
	    ,  US1.KORN_NM AS MANAGER_NAME
	    ,  US2.KORN_NM AS OWNNER_NAME
	    ,  DP.DEPT_KORN_NM AS DEPT_NAME
	FROM T_COMM_ASSET A
		LEFT OUTER JOIN T_SYTM_USER US1
			 ON A.MANAGER = US1.EMP_NO
		LEFT OUTER JOIN T_SYTM_USER US2
			 ON A.OWNNER = US2.EMP_NO
		LEFT OUTER JOIN T_SYTM_DEPT DP
			 ON A.MANAGETEAM_CD = DP.DEPT_CD	 
	WHERE 1=1
    <if test="ASSET_CD != null and ASSET_CD != '' ">
        AND A.ASSET_CD = #{ASSET_CD}
    </if>	
    <if test="ASSET_TYPE != null and ASSET_TYPE != '' ">
        AND A.ASSET_TYPE = #{ASSET_TYPE}
    </if>	
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
			AND A.COMPANY_CD = #{COMPANY_CD}
	</if>    
	ORDER BY A.ASSET_CD, A.ASSET_NO
</select>

<!--  자산관리 조회 -->   
<select id="searchAssetMaxNo" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT 
		IFNULL(MAX(ASSET_NO),0) + 1 AS  IASSET_NO
	FROM T_COMM_ASSET 
	WHERE ASSET_CD = #{ASSET_CD} 
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
			AND COMPANY_CD = #{COMPANY_CD}
	</if>   	
</select>

<!--  소분류코드 수정 -->   
<update id="updateAsset" parameterType="java.util.Map">
	UPDATE T_COMM_ASSET
	SET ASSET_TYPE = #{ASSET_TYPE}
		, ASSET_VERSION = #{ASSET_VERSION}
		, TITLE = #{TITLE}
		, REASON_CD = #{REASON_CD}
		, POSITION_CD = #{POSITION_CD}
		, MANAGETEAM_CD = #{MANAGETEAM_CD}
		, MANAGER = #{MANAGER}
		, OWNNER = #{OWNNER}
		, PRODUCT_CD = #{PRODUCT_CD}
		, RELATION_ASSET = #{RELATION_ASSET}
		, SERIAL_NO = #{SERIAL_NO}
		, CPU_TYPE = #{CPU_TYPE}
		, MEM_TYPE = #{MEM_TYPE}
		, HDD_TYPE = #{HDD_TYPE}
		, ASSET_SIZE = #{ASSET_SIZE}
		, I_DATE = #{I_DATE}
		, P_DATE = #{P_DATE}
		, ASSET_STATUS_CD = #{ASSET_STATUS_CD}
		, USE_YN = #{USE_YN}
		, OS_TYPE = #{OS_TYPE}
		, REMARK = #{REMARK}
		, CHGE_ID = #{USER_ID_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE ASSET_CD = #{ASSET_CD} 
	AND ASSET_NO = #{ASSET_NO} 
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
			AND COMPANY_CD = #{COMPANY_CD}
	</if>   	
</update> 


<!-- 소분류코드 저장 -->
<insert id="insertAsset" parameterType="java.util.Map">
	INSERT /* insertAsset  */
	INTO T_COMM_ASSET(
		COMPANY_CD
		, ASSET_CD
		, ASSET_NO
		, ASSET_TYPE
		, ASSET_VERSION
		, TITLE
		, REASON_CD
		, POSITION_CD
		, MANAGETEAM_CD
		, MANAGER
		, OWNNER
		, PRODUCT_CD
		, RELATION_ASSET
		, SERIAL_NO
		, CPU_TYPE
		, MEM_TYPE
		, HDD_TYPE
		, ASSET_SIZE
		, I_DATE
		, P_DATE
		, ASSET_STATUS_CD
		, USE_YN
		, REMARK
		, OS_TYPE
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)VALUES(
		#{COMPANY_CD}
		, #{ASSET_CD}
		, #{ASSET_NO}
		, #{ASSET_TYPE}
		, #{ASSET_VERSION}
		, #{TITLE}
		, #{REASON_CD}
		, #{POSITION_CD}
		, #{MANAGETEAM_CD}
		, #{MANAGER}
		, #{OWNNER}
		, #{PRODUCT_CD}
		, #{RELATION_ASSET}
		, #{SERIAL_NO}
		, #{CPU_TYPE}
		, #{MEM_TYPE}
		, #{HDD_TYPE}
		, #{ASSET_SIZE}
		, #{I_DATE}
		, #{P_DATE}
		, #{ASSET_STATUS_CD}
		, #{USE_YN}
		, #{REMARK}
		, #{OS_TYPE}
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
	)
</insert>


<!--  자산 삭제 -->   
<delete id="deleteAsset" parameterType="java.util.Map">
	DELETE FROM T_COMM_ASSET 
	WHERE ASSET_CD = #{ASSET_CD} 
	AND ASSET_NO = #{ASSET_NO} 
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
			AND COMPANY_CD = #{COMPANY_CD}
	</if> 	
</delete>  


<!-- IP 조회 -->   
<select id="searchIPList" parameterType="java.util.List" resultType="java.util.Map">

SELECT	A.COMPANY_CD
	    ,  A.IPADDR
	    ,  A.ASSET_CD
	    ,  A.ASSET_NO
	    ,  A.WIRE_YN
	    ,  A.REMARK
	    ,  A.STATUS_CD
	    ,  B.ASSET_TYPE
	    ,  B.ASSET_VERSION
	    ,  C.EMP_NO 
	    ,  C.KORN_NM
	    , (SELECT DEPT_KORN_NM FROM T_SYTM_DEPT WHERE DEPT_CD = C.DEPT_CD) AS DEPT_KORN_NM
	FROM T_COMM_IP A
	     LEFT JOIN T_COMM_ASSET B
	   	 ON B.ASSET_CD = A.ASSET_CD
	   	 AND B.ASSET_NO = A.ASSET_NO
	   	 AND B.COMPANY_CD = A.COMPANY_CD
	     LEFT JOIN T_SYTM_USER C
	   	 ON C.EMP_NO = B.OWNNER
	   	 AND C.COMPANY_CD = B.COMPANY_CD
	WHERE 1=1
	<if test="IPADDR != null and IPADDR != '' ">
	    AND A.IPADDR LIKE CONCAT('%',#{IPADDR},'%')
	</if>
	<if test="OWNNER_NAME != null and OWNNER_NAME != '' ">
	    AND C.KORN_NM LIKE CONCAT('%',#{OWNNER_NAME},'%')
	</if>	
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
			AND A.COMPANY_CD = #{COMPANY_CD}
	</if> 	
	ORDER BY A.IPADDR
</select>

<!--  IP 수정 -->   
<update id="updateIP" parameterType="java.util.Map">
	UPDATE T_COMM_IP
	SET ASSET_CD = #{ASSET_CD}
		, ASSET_NO = #{ASSET_NO}
		, WIRE_YN = #{WIRE_YN}
		, STATUS_CD = #{STATUS_CD}
		, REMARK = #{REMARK}
		, CHGE_ID = #{USER_ID_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE IPADDR = #{IPADDR} 
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
			AND A.COMPANY_CD = #{COMPANY_CD}
	</if> 		
</update> 

<!-- IP 저장 -->
<insert id="insertIP" parameterType="java.util.Map">
	INSERT /* insertIP  */
	INTO T_COMM_IP(
		COMPANY_CD
		, IPADDR
		, ASSET_CD
		, ASSET_NO
		, WIRE_YN
		, STATUS_CD
		, REMARK
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)VALUES(
		#{COMPANY_CD}
		, #{IPADDR}
		, #{ASSET_CD}
		, #{ASSET_NO}
		, #{WIRE_YN}
		, #{STATUS_CD}
		, #{REMARK}
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
	)
</insert>


<!--  IP 삭제 -->   
<delete id="deleteIP" parameterType="java.util.Map">
	DELETE FROM T_COMM_IP 
	WHERE IPADDR = #{IPADDR} 
	<if test="COMPANY_CD != null and COMPANY_CD != '' ">
			AND COMPANY_CD = #{COMPANY_CD}
	</if> 		
</delete>  

<!--  calendar 조회 -->
<select id="searchCalendarList" parameterType="java.util.List" resultType="java.util.Map">
	SELECT  PRESENT_DATE, HOLIDAY_YN, HOLIDAY_MEMO, REMARK, CHGE_ID, CHGE_IP 
	FROM T_SYTM_TIMETAB
	WHERE 1=1
	<if test="PRESENT_DATE != null and PRESENT_DATE != '' ">
	    AND PRESENT_DATE LIKE CONCAT('%',#{PRESENT_DATE},'%')
	</if>	
	ORDER BY PRESENT_DATE
</select>

<!--  calendar 수정 -->   
<update id="updateCalendar" parameterType="java.util.Map">
	UPDATE T_SYTM_TIMETAB
	SET HOLIDAY_YN = #{HOLIDAY_YN}
		, HOLIDAY_MEMO = #{HOLIDAY_MEMO}
		, REMARK = #{REMARK}
		, CHGE_ID = #{USER_ID_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE PRESENT_DATE = #{PRESENT_DATE} 
</update> 

<!-- IP 저장 -->
<insert id="insertCalendar" parameterType="java.util.Map">
	INSERT
	INTO T_SYTM_TIMETAB(
		PRESENT_DATE
		, HOLIDAY_YN
		, HOLIDAY_MEMO
		, REMARK
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)VALUES(
		#{PRESENT_DATE}
		, #{HOLIDAY_YN}
		, #{HOLIDAY_MEMO}
		, #{REMARK}
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
	)
</insert>

<!--  IP 삭제 -->   
<delete id="deleteCalendar" parameterType="java.util.Map">
	DELETE FROM T_SYTM_TIMETAB 
	WHERE PRESENT_DATE = #{PRESENT_DATE} 
</delete>  

</mapper>
