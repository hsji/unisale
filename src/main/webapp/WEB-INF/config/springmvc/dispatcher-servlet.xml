<?xml version="1.0" encoding="UTF-8"?>
<!-- DispatcherServlet application context for Application's web tier. -->
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

    <!-- The controllers are autodetected POJOs labeled with the @Controller annotation. -->
    <context:component-scan base-package="com.unisales">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

	<task:annotation-driven /> 
	<bean id="hrdDeleteScheduler" class="com.unisales.sched.scheduller" />
	
	<!-- LocaleResolver 선언 시작 -->
    <!-- multi language message Resolver request가 가지고 있는 session으로 부터 locale 정보를 가져온다 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	<!-- LocaleResolver 선언 끝 -->
    
    <bean id="urlBasedView" class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1"
        p:viewClass="org.springframework.web.servlet.view.JstlView"
        p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>
    
    <!-- Hibernate Validation -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource" />
    </bean>
    
	<!-- /////////////////////////////////// 넥사크로플랫폼 UIADAPTER17 설정 시작 /////////////////////////////////// -->
    <bean id="nexacroInterceptor" class="com.nexacro.uiadapter.spring.core.servlet.NexacroInterceptor"/>
     <!-- user info Interceptor -->
	<mvc:interceptors>
	         <mvc:interceptor>
	                  <mvc:mapping path="/Login.do" /> 
	                  <bean class="com.unisales.util.interceptor.UserInfoInterceptor" />
	         </mvc:interceptor>
	         
	         <!-- 
	         <mvc:interceptor>
   					  <mvc:mapping path="/**.do" />
   					  <mvc:exclude-mapping path="/Login.do"/>
   					  <mvc:exclude-mapping path="/LoginSession.do"/>
    				  <bean class="com.dxtobe.util.interceptor.UserSessionInterceptor" />
			 </mvc:interceptor>
			  -->
	</mvc:interceptors> 
	
    <bean id="nexacroFileView"    class="com.nexacro.uiadapter.spring.core.view.NexacroFileView" />
    <bean id="nexacroView"        class="com.nexacro.uiadapter.spring.core.view.NexacroView" >
        <property name="defaultContentType" value="PlatformXml" />
        <property name="defaultCharset"     value="UTF-8" />
    </bean>
    <util:properties id="EtcProperty" >
        <prop key="uiAdapter.useRequestCharset">all</prop>
        <prop key="uiAdapter.useRequestContentType">all</prop>
        <prop key="uiAdapter.trimParamDataSet">all</prop>
        <prop key="uiAdapter.trimParamVariable">all</prop>
        <prop key="uiAdapter.replaceAllEmptyVariable">all</prop> 
    </util:properties>
    
    <!-- 넥사크로플랫폼 RequestMappingHandlerAdapter 구현체 등록 -->
    <bean class="com.nexacro.uiadapter.spring.core.resolve.NexacroRequestMappingHandlerAdapter" p:order="0">
        <property name="customArgumentResolvers">
            <list><bean class="com.nexacro.uiadapter.spring.core.resolve.NexacroMethodArgumentResolver" /></list>
        </property>
        <property name="customReturnValueHandlers">
            <list>
                <bean class="com.nexacro.uiadapter.spring.core.resolve.NexacroHandlerMethodReturnValueHandler">
                    <property name="view"     ref="nexacroView" />
                    <property name="fileView" ref="nexacroFileView" />
                </bean>
            </list>
        </property>
		<property name="messageConverters">
			<list> 	<ref bean="jsonMessageConverter" />	</list>
		</property>            
    </bean>
    
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />    
    
    <!-- 넥사크로플랫폼 EXCEPTION-RESOLVER 등록 -->
    <bean id="exceptionResolver" class="com.nexacro.uiadapter.spring.core.resolve.NexacroMappingExceptionResolver" p:order="1">
        <property name="view" ref="nexacroView" />   
        <property name="shouldLogStackTrace"  value="true" />   
        <property name="shouldSendStackTrace" value="true" />
        <!-- shouldSendStackTrace 가 false 일 경우 nexacro platform으로 전송되는 에러메시지  -->
        <!-- <property name="defaultErrorMsg" value="An Error Occured. check the ErrorCode for detail of error infomation" /> -->
        <property name="defaultErrorMsg" value="fail.common.msg" />
        <property name="messageSource"   ref="messageSource" />
    </bean>
    
    <!-- XENI REQUEST-MAPPING-HANDLERADAPTER 등록 -->
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>
    <bean id="xeniUrlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" p:order="0">
        <property name="mappings">
            <props>
                <prop key="/XExportImport.do">xeniWrappingController</prop>
            </props>
        </property>
    </bean>
    
    <!-- XENI WRAPPINGCONTROLLER 설정. -->
    <bean id="xeniWrappingController" class="org.springframework.web.servlet.mvc.ServletWrappingController">
        <property name="servletClass">
            <value>com.nexacro.java.xeni.services.GridExportImportServlet</value>
        </property>
    </bean>
    
    <!-- Multipart Resolver 최대 10메가 바이트(정확히 10메가는 아니지만)까지 업로드가 가능하도록 설정 -->
    <!-- XENI를 이용한 엑셀 IMPORT시 필요(엑셀 이용시 반드시 정의해야 함) -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize"   value="100000000" />
        <property name="maxInMemorySize" value="100000000" />
    </bean>
    <!-- /////////////////////////////////// 넥사크로플랫폼 UIADAPTER17 설정 끝 /////////////////////////////////// -->
    
    <!-- annotation-driven 설정. -->
    <mvc:annotation-driven />
    
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:/message/message-common</value>
			</list>
		</property>
		<property name="cacheSeconds">
			<value>60</value>
		</property>
	</bean>    
    
    
    <!-- /////////////////////////////////// 공통코드 캐시설정 시작 /////////////////////////////////// -->
    <!-- Annotation 기반 캐시 사용 (@Cacheable, @CacheEvict..) 
    <cache:annotation-driven cache-manager="cacheManager"/> 
    --> 
    <!-- EHCache 기반 CacheManager 설정 
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"> 
    	<property name="cacheManager" ref="ehcache" /> 
    </bean> --> 
    <!-- ehcache.xml 설정 로드 
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> 
	    <property name="configLocation" value="classpath:ehcache.xml" />
	    <property name="shared" value="true" /> 
    </bean>-->
	<!-- /////////////////////////////////// 공통코드 캐시설정 끝 /////////////////////////////////// -->

	
</beans>
